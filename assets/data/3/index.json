{"hash":"4a22aff40719d01c04e3d9b78122b0823cde76bc","data":{"posts":{"pageInfo":{"totalPages":9,"currentPage":3,"perPage":10,"totalItems":82,"hasPreviousPage":true,"hasNextPage":true,"isFirst":false,"isLast":false},"edges":[{"node":{"id":"01a426b8d4837966db89bfa04ee3cd5a","title":"Docker Read-Only File Systems","date":"2017-11-13T00:00:00+00:00","dateModified":null,"timeToRead":1,"description":"How to use a read-only file system in Docker to secure your Docker containers using the docker run CLI command and Docker compose or docker swarm.","heroImage":"/images/hero/Docker-1366x768.png","path":"/docker-read-file-systems/","tags":[{"id":"ASP.NET Core","title":"ASP.NET Core","path":"/tag/asp-net-core/"},{"id":"Docker","title":"Docker","path":"/tag/docker/"},{"id":"Docker Compose","title":"Docker Compose","path":"/tag/docker-compose/"},{"id":"Docker Swarm","title":"Docker Swarm","path":"/tag/docker-swarm/"},{"id":"File System","title":"File System","path":"/tag/file-system/"}]}},{"node":{"id":"f3fee90d0ed71bb2187184316eb6e23a","title":"ASP.NET Core Caching in Practice","date":"2017-10-20T00:00:00+00:00","dateModified":null,"timeToRead":6,"description":"How to use and implement Cache-Control, Cache-Control Immutable, E-Tag, Last-Modified and If-Modified-Since Caching HTTP headers in ASP.NET Core.","heroImage":"/images/hero/ASP.NET-Core-Caching-in-Practice-1366x768.png","path":"/asp-net-core-caching-in-practice/","tags":[{"id":".NET","title":".NET","path":"/tag/net/"},{"id":".NET Core","title":".NET Core","path":"/tag/net-core/"},{"id":"ASP.NET Core","title":"ASP.NET Core","path":"/tag/asp-net-core/"},{"id":"ASP.NET MVC","title":"ASP.NET MVC","path":"/tag/asp-net-mvc/"},{"id":"C#","title":"C#","path":"/tag/c/"},{"id":"Cache-Control","title":"Cache-Control","path":"/tag/cache-control/"},{"id":"Caching","title":"Caching","path":"/tag/caching/"},{"id":"E-Tag","title":"E-Tag","path":"/tag/e-tag/"},{"id":"If-Modified-Since","title":"If-Modified-Since","path":"/tag/if-modified-since/"}]}},{"node":{"id":"9fb9aa41b05f31af437972e9cac71e1d","title":"A Very Generic .editorconfig File (Updated)","date":"2017-10-01T00:00:00+00:00","dateModified":"2018-07-01T00:00:00+00:00","timeToRead":3,"description":"A .editorconfig file define and maintain consistent coding styles between different editors and IDEs for file with different file extensions.","heroImage":"/images/hero/A-Very-Generic-Editorconfig-File-1366x768.png","path":"/generic-editorconfig-file/","tags":[{"id":".editorconfig","title":".editorconfig","path":"/tag/editorconfig/"},{"id":"C#","title":"C#","path":"/tag/c/"},{"id":"C# 7.3","title":"C# 7.3","path":"/tag/c-7-3/"},{"id":"StyleCop","title":"StyleCop","path":"/tag/style-cop/"},{"id":"Visual Studio","title":"Visual Studio","path":"/tag/visual-studio/"},{"id":"Visual Studio Code","title":"Visual Studio Code","path":"/tag/visual-studio-code/"}]}},{"node":{"id":"7d0aaa46455478d20a9e6ce8c803a76e","title":"Keeping Up With Software Development","date":"2017-08-13T00:00:00+00:00","dateModified":null,"timeToRead":6,"description":"Keeping up with the changes in the software development industry always feels like a losing battle.","heroImage":"/images/hero/Keeping-up-with-Software-Development-1366x768.png","path":"/keeping-software-development/","tags":[{"id":"RSS","title":"RSS","path":"/tag/rss/"},{"id":"Software Development","title":"Software Development","path":"/tag/software-development/"}]}},{"node":{"id":"6c646749a7602e69866399421ca9ad90","title":"Structured Data using Schema.NET","date":"2017-07-02T00:00:00+00:00","dateModified":null,"timeToRead":3,"description":"Schema.NET is Schema.org objects turned into strongly typed C# POCO classes for use in .NET.","heroImage":"/images/hero/Schema.NET-1366x768.png","path":"/structured-data-using-schema-net/","tags":[{"id":".NET","title":".NET","path":"/tag/net/"},{"id":".NET Core","title":".NET Core","path":"/tag/net-core/"},{"id":"Bing","title":"Bing","path":"/tag/bing/"},{"id":"C#","title":"C#","path":"/tag/c/"},{"id":"Google","title":"Google","path":"/tag/google/"},{"id":"Schema.NET","title":"Schema.NET","path":"/tag/schema-net/"},{"id":"Schema.org","title":"Schema.org","path":"/tag/schema-org/"},{"id":"Search Engines","title":"Search Engines","path":"/tag/search-engines/"},{"id":"Structured Data","title":"Structured Data","path":"/tag/structured-data/"}]}},{"node":{"id":"ba2f7b7ab3c9f0d6d7a3b4636e86e0fe","title":"ASP.NET Core Lazy Command Pattern","date":"2017-04-08T00:00:00+00:00","dateModified":null,"timeToRead":5,"description":"Move your ASP.NET Core MVC action method logic into lazily loaded commands using the command pattern, to reduce Controller complexity.","heroImage":"/images/hero/ASP.NET-Core-Lazy-Command-Pattern-1366x768.png","path":"/asp-net-core-lazy-command-pattern/","tags":[{"id":".NET","title":".NET","path":"/tag/net/"},{"id":".NET Core","title":".NET Core","path":"/tag/net-core/"},{"id":"ASP.NET Core","title":"ASP.NET Core","path":"/tag/asp-net-core/"},{"id":"ASP.NET MVC","title":"ASP.NET MVC","path":"/tag/asp-net-mvc/"},{"id":".NET Boxed","title":".NET Boxed","path":"/tag/net-boxed/"},{"id":".NET Boxed API","title":".NET Boxed API","path":"/tag/net-boxed-api/"},{"id":"C#","title":"C#","path":"/tag/c/"},{"id":"Command Pattern","title":"Command Pattern","path":"/tag/command-pattern/"},{"id":"Lazy","title":"Lazy","path":"/tag/lazy/"}]}},{"node":{"id":"4bf83d22967e887a658a4516b79a3f72","title":"dotnet new Feature Selection","date":"2017-03-26T00:00:00+00:00","dateModified":null,"timeToRead":9,"description":"How to add feature selection to your dotnet new template using symbols (bool, string, choice, computed) and pre-processor directives.","heroImage":"/images/hero/Who-Wants-To-Be-A-Millionaire-1366x768.png","path":"/dotnet-new-feature-selection/","tags":[{"id":".NET","title":".NET","path":"/tag/net/"},{"id":".NET Core","title":".NET Core","path":"/tag/net-core/"},{"id":"ASP.NET Core","title":"ASP.NET Core","path":"/tag/asp-net-core/"},{"id":".NET Boxed","title":".NET Boxed","path":"/tag/net-boxed/"},{"id":"C#","title":"C#","path":"/tag/c/"},{"id":"dotnet new","title":"dotnet new","path":"/tag/dotnet-new/"}]}},{"node":{"id":"3025dd3020a579bd640e6318e51a542d","title":"Cleaning Up CSPROJ","date":"2017-03-18T00:00:00+00:00","dateModified":null,"timeToRead":8,"description":"I show how to make the new Visual Studio 2017 .NET Core based csproj XML concise and pretty for hand editing.","heroImage":"/images/hero/Cleaning-Up-CSPROJ-1366x768.png","path":"/cleaning-up-csproj/","tags":[{"id":".NET","title":".NET","path":"/tag/net/"},{"id":".NET Core","title":".NET Core","path":"/tag/net-core/"},{"id":"csproj","title":"csproj","path":"/tag/csproj/"},{"id":"MSBuild","title":"MSBuild","path":"/tag/ms-build/"},{"id":"project.json","title":"project.json","path":"/tag/project-json/"},{"id":"SDK","title":"SDK","path":"/tag/sdk/"},{"id":"Visual Studio 2017","title":"Visual Studio 2017","path":"/tag/visual-studio-2017/"},{"id":"xproj","title":"xproj","path":"/tag/xproj/"}]}},{"node":{"id":"88b5608578b519c000e5e11a66a715de","title":"Cross-Platform DevOps for .NET Core","date":"2017-01-28T00:00:00+00:00","dateModified":null,"timeToRead":9,"description":"Learn how to use Cake, AppVeyor and Travis CI continuous integration build systems to perform cross-platform DevOps for .NET Core based projects.","heroImage":"/images/hero/Dotnet-Cake-AppVeyor-Travis-1366x768.png","path":"/cross-platform-devops-net-core/","tags":[{"id":".NET Core","title":".NET Core","path":"/tag/net-core/"},{"id":"AppVeyor","title":"AppVeyor","path":"/tag/app-veyor/"},{"id":"Build","title":"Build","path":"/tag/build/"},{"id":"Cake","title":"Cake","path":"/tag/cake/"},{"id":"Continuous Integration","title":"Continuous Integration","path":"/tag/continuous-integration/"},{"id":"DevOps","title":"DevOps","path":"/tag/dev-ops/"},{"id":"NuGet","title":"NuGet","path":"/tag/nu-get/"},{"id":"Travis CI","title":"Travis CI","path":"/tag/travis-ci/"}]}},{"node":{"id":"505db2ab1ec45ed36364fcd5ba9c1c71","title":"Custom Project Templates Using dotnet new","date":"2017-01-18T00:00:00+00:00","dateModified":null,"timeToRead":4,"description":"How to create project templates using dotnet new and the template.json file. How to share project templates by creating NuGet packages.","heroImage":"/images/hero/Microsoft-.NET-1366x768.png","path":"/custom-project-templates-using-dotnet-new/","tags":[{"id":".NET","title":".NET","path":"/tag/net/"},{"id":"dotnet","title":"dotnet","path":"/tag/dotnet/"},{"id":"dotnet new","title":"dotnet new","path":"/tag/dotnet-new/"},{"id":"NuGet","title":"NuGet","path":"/tag/nu-get/"},{"id":"Project Template","title":"Project Template","path":"/tag/project-template/"}]}}]}},"context":{}}