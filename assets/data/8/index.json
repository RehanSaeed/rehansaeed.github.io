{"hash":"e12a85f1fe9f711fa1696d3a1e8f15e21c3abdd2","data":{"posts":{"pageInfo":{"totalPages":9,"currentPage":8,"perPage":10,"totalItems":82,"hasPreviousPage":true,"hasNextPage":true,"isFirst":false,"isLast":false},"edges":[{"node":{"id":"442c6715d34755767537371362684498","title":"WPF Metro Part 4 - Elysium Extra","date":"2014-03-19T00:00:00+00:00","dateModified":null,"timeToRead":8,"description":"Elysium Extra is an excellent Windows Presentation Foundation (WPF) SDK providing Metro styles for built in WPF controls and some custom controls.","heroImage":"/images/hero/Elysium-Extra-1366x768.png","path":"/wpf-metro-part4-elysium-extra/","tags":[{"id":".NET","title":".NET","path":"/tag/net/"},{"id":"C#","title":"C#","path":"/tag/c/"},{"id":"Elysium","title":"Elysium","path":"/tag/elysium/"},{"id":"Elysium Extra","title":"Elysium Extra","path":"/tag/elysium-extra/"},{"id":"Metro","title":"Metro","path":"/tag/metro/"},{"id":"Modern","title":"Modern","path":"/tag/modern/"},{"id":"SDK","title":"SDK","path":"/tag/sdk/"},{"id":"UI","title":"UI","path":"/tag/ui/"},{"id":"User Interface","title":"User Interface","path":"/tag/user-interface/"},{"id":"Windows Presentation Foundation","title":"Windows Presentation Foundation","path":"/tag/windows-presentation-foundation/"}]}},{"node":{"id":"6cf78e9ca49f856684c6dad17bcc5522","title":"WPF Metro Part 3 - Elysium","date":"2014-03-17T00:00:00+00:00","dateModified":null,"timeToRead":2,"description":"Elysium is an excellent Windows Presentation Foundation (WPF) SDK (On CodePlex) providing Metro styles for built in WPF controls and some custom controls.","heroImage":"/images/hero/Elysium-1366x768.png","path":"/wpf-metro-part3-elysium/","tags":[{"id":".NET","title":".NET","path":"/tag/net/"},{"id":"C#","title":"C#","path":"/tag/c/"},{"id":"Elysium","title":"Elysium","path":"/tag/elysium/"},{"id":"Metro","title":"Metro","path":"/tag/metro/"},{"id":"Modern","title":"Modern","path":"/tag/modern/"},{"id":"SDK","title":"SDK","path":"/tag/sdk/"},{"id":"UI","title":"UI","path":"/tag/ui/"},{"id":"User Interface","title":"User Interface","path":"/tag/user-interface/"},{"id":"Windows Presentation Foundation","title":"Windows Presentation Foundation","path":"/tag/windows-presentation-foundation/"},{"id":"WPF","title":"WPF","path":"/tag/wpf/"}]}},{"node":{"id":"60c493ed43ed389a15909a059bbf9aba","title":"Reactive Extensions (Rx) - Part 4 - Replacing Timers","date":"2014-03-11T00:00:00+00:00","dateModified":null,"timeToRead":3,"description":"You should definitely consider using Reactive Extensions (Rx) is as a direct replacement for .NET Timers. This post will explain how.","heroImage":"/images/hero/Reactive-Extensions-1366x768.png","path":"/reactive-extensions-part4-replacing-timers/","tags":[{"id":".NET","title":".NET","path":"/tag/net/"},{"id":"C#","title":"C#","path":"/tag/c/"},{"id":"Reactive Extensions","title":"Reactive Extensions","path":"/tag/reactive-extensions/"},{"id":"Rx","title":"Rx","path":"/tag/rx/"},{"id":"Timer","title":"Timer","path":"/tag/timer/"}]}},{"node":{"id":"aca1a538b438b2a1c8b48568bcd5f1a1","title":"Windows 8.1 TouchScreen Gaming Laptops","date":"2014-03-06T00:00:00+00:00","dateModified":null,"timeToRead":3,"description":"Would you buy a sandwich without the filling? No? Then why are most Windows 8.1 laptops sold without touchscreens? We need a touchscreen gaming laptop.","heroImage":"/images/hero/Fry-Shutup-And-Take-My-Money-1366x768.png","path":"/windows-8-touchscreen-gaming-laptops/","tags":[{"id":"Gaming","title":"Gaming","path":"/tag/gaming/"},{"id":"Laptop","title":"Laptop","path":"/tag/laptop/"},{"id":"Windows 8.1","title":"Windows 8.1","path":"/tag/windows-8-1/"},{"id":"Windows Store","title":"Windows Store","path":"/tag/windows-store/"},{"id":"WinRT","title":"WinRT","path":"/tag/win-rt/"}]}},{"node":{"id":"26f9328817248a7447a1ae0b2523a8d2","title":"WPF Metro Part 2 - MahApps Metro","date":"2014-03-02T00:00:00+00:00","dateModified":null,"timeToRead":3,"description":"MahApps Metro is an excellent Windows Presentation Foundation (WPF) SDK providing Metro styles for built in WPF controls and several custom controls.","heroImage":"/images/hero/MahApps-Metro-1366x768.png","path":"/wpf-metro-part2-mahapps-metro/","tags":[{"id":".NET","title":".NET","path":"/tag/net/"},{"id":"C#","title":"C#","path":"/tag/c/"},{"id":"Metro","title":"Metro","path":"/tag/metro/"},{"id":"Modern","title":"Modern","path":"/tag/modern/"},{"id":"SDK","title":"SDK","path":"/tag/sdk/"},{"id":"UI","title":"UI","path":"/tag/ui/"},{"id":"User Interface","title":"User Interface","path":"/tag/user-interface/"},{"id":"Windows Presentation Foundation","title":"Windows Presentation Foundation","path":"/tag/windows-presentation-foundation/"},{"id":"WPF","title":"WPF","path":"/tag/wpf/"},{"id":"XAML","title":"XAML","path":"/tag/xaml/"}]}},{"node":{"id":"903180127dc555200ba3791db8a7beb8","title":"WPF Metro Part 1 - Modern UI for WPF","date":"2014-02-19T00:00:00+00:00","dateModified":null,"timeToRead":3,"description":"Modern UI for WPF is an excellent Windows Presentation Foundation (WPF) SDK providing Metro styles for built in WPF controls and several custom controls.","heroImage":"/images/hero/Modern-UI-for-WPF-1366x768.png","path":"/wpf-metro-part1-modern-ui-for-wpf/","tags":[{"id":".NET","title":".NET","path":"/tag/net/"},{"id":"C#","title":"C#","path":"/tag/c/"},{"id":"Metro","title":"Metro","path":"/tag/metro/"},{"id":"Modern","title":"Modern","path":"/tag/modern/"},{"id":"SDK","title":"SDK","path":"/tag/sdk/"},{"id":"UI","title":"UI","path":"/tag/ui/"},{"id":"User Interface","title":"User Interface","path":"/tag/user-interface/"},{"id":"Windows Presentation Foundation","title":"Windows Presentation Foundation","path":"/tag/windows-presentation-foundation/"},{"id":"WPF","title":"WPF","path":"/tag/wpf/"},{"id":"XAML","title":"XAML","path":"/tag/xaml/"}]}},{"node":{"id":"cf7b17d289227e787e35b6be6887816a","title":"Reactive Extensions (Rx) - Part 3 - Naming Conventions","date":"2014-02-14T00:00:00+00:00","dateModified":null,"timeToRead":2,"description":"Reactive Extensions (Rx) Advantages of using IObservable property naming conventions and comparison between C# events.","heroImage":"/images/hero/Reactive-Extensions-1366x768.png","path":"/reactive-extensions-part3-naming-conventions/","tags":[{"id":".NET","title":".NET","path":"/tag/net/"},{"id":"C#","title":"C#","path":"/tag/c/"},{"id":"Events","title":"Events","path":"/tag/events/"},{"id":"Naming Convention","title":"Naming Convention","path":"/tag/naming-convention/"},{"id":"Reactive Extensions","title":"Reactive Extensions","path":"/tag/reactive-extensions/"},{"id":"Rx","title":"Rx","path":"/tag/rx/"},{"id":"standards","title":"standards","path":"/tag/standards/"}]}},{"node":{"id":"5d81b5cf9506baad2c21f49a62cc1332","title":"Reactive Extensions (Rx) - Part 2 - Wrapping C# Events","date":"2014-02-13T00:00:00+00:00","dateModified":null,"timeToRead":3,"description":"Reactive Extensions IObservable wrappers for C# events and hiding the C# events entirely from subscribers using explicit interface implementations.","heroImage":"/images/hero/Reactive-Extensions-1366x768.png","path":"/reactive-extensions-part2-wrapping-events/","tags":[{"id":".NET","title":".NET","path":"/tag/net/"},{"id":"C#","title":"C#","path":"/tag/c/"},{"id":"Events","title":"Events","path":"/tag/events/"},{"id":"Explicit Interface Implementation","title":"Explicit Interface Implementation","path":"/tag/explicit-interface-implementation/"},{"id":"INotifyPropertyChanged","title":"INotifyPropertyChanged","path":"/tag/i-notify-property-changed/"},{"id":"Reactive Extensions","title":"Reactive Extensions","path":"/tag/reactive-extensions/"},{"id":"Rx","title":"Rx","path":"/tag/rx/"}]}},{"node":{"id":"0b1d562a7a4b460eba05040d3813bd4b","title":"Reactive Extensions (Rx) - Part 1 - Replacing C# Events","date":"2014-02-11T00:00:00+00:00","dateModified":null,"timeToRead":4,"description":"You should definitely consider using Reactive Extensions (Rx) is as a direct replacement for C# events. This post will explain how.","heroImage":"/images/hero/Reactive-Extensions-1366x768.png","path":"/reactive-extensions-part1-replacing-events/","tags":[{"id":".NET","title":".NET","path":"/tag/net/"},{"id":"C#","title":"C#","path":"/tag/c/"},{"id":"Events","title":"Events","path":"/tag/events/"},{"id":"Reactive Extensions","title":"Reactive Extensions","path":"/tag/reactive-extensions/"},{"id":"Rx","title":"Rx","path":"/tag/rx/"}]}},{"node":{"id":"8323e6257ac5b324c596d49841a36f9a","title":"Stop The Brace Wars, Use StyleCop","date":"2014-02-08T00:00:00+00:00","dateModified":null,"timeToRead":3,"description":"StyleCop analyzes C# source code to enforce a set of style and consistency rules. Rehan advocates its use in this thought provoking article.","heroImage":"/images/hero/StyleCop-1366x768.png","path":"/stop-brace-wars-use-stylecop/","tags":[{"id":"C#","title":"C#","path":"/tag/c/"},{"id":"standards","title":"standards","path":"/tag/standards/"},{"id":"StyleCop","title":"StyleCop","path":"/tag/style-cop/"}]}}]}},"context":{}}