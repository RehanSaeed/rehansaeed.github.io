{"hash":"ff8e1fa27339c5a402548be5ef3088dc560810f9","data":{"post":{"title":"Migrating to Entity Framework Core Seed Data","path":"/migrating-to-entity-framework-core-seed-data/","date":"2018-07-01T00:00:00+00:00","dateModified":null,"timeToRead":2,"author":"Muhammad Rehan Saeed","headings":[],"tags":[{"id":"Entity Framework Core","title":"Entity Framework Core","path":"/tag/entity-framework-core/"},{"id":"Migrations","title":"Migrations","path":"/tag/migrations/"},{"id":"Seed Data","title":"Seed Data","path":"/tag/seed-data/"}],"description":"How to migrate an existing database to use Entity Framework Core 2.1 Seed Data to insert static data into your tables while using migrations.","content":"<p>I was already using Entity Framework Core 2.0 and had written some custom code to enter some static seed data to certain tables. Entity Framework 2.1 added support for <a href=\"https://docs.microsoft.com/en-us/ef/core/modeling/data-seeding\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">data seeding</a> which manages your seed data for you and adds them to your Entity Framework Core migrations.</p>\n<p>The problem is that if you've already got data in your tables, when you add a migration containing seed data, you will get exceptions thrown as Entity Framework tries to insert data that is already there. Entity Framework is naive, it assumes that it is the only thing editing the database.</p>\n<p>Migrating to using data seeding requires a few extra steps that aren't documented anywhere and weren't obvious to me. Lets walk through an example. Assuming we have the following model and database context:</p>\n<div class=\"line-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Car</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> CarId <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Make <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Model <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ApplicationDbContext</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">DbContext</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token function\">ApplicationDbContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DbContextOptions</span> options<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">:</span> <span class=\"token keyword\">base</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">DbSet<span class=\"token punctuation\">&lt;</span>Car<span class=\"token punctuation\">></span></span> Cars <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We can add some seed data by overriding the <code class=\"language-text\">OnModelCreating</code> method on our database context class. You need to make sure your seed data matches the existing data in your database.</p>\n<div class=\"line-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnModelCreating</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ModelBuilder</span> modelBuilder<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    modelBuilder<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Entity</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Car<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">HasData</span><span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> CarId <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> Make <span class=\"token operator\">=</span> <span class=\"token string\">\"Ferrari\"</span><span class=\"token punctuation\">,</span> Model <span class=\"token operator\">=</span> <span class=\"token string\">\"F40\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> CarId <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> Make <span class=\"token operator\">=</span> <span class=\"token string\">\"Ferrari\"</span><span class=\"token punctuation\">,</span> Model <span class=\"token operator\">=</span> <span class=\"token string\">\"F50\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> CarId <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> Make <span class=\"token operator\">=</span> <span class=\"token string\">\"Lambourghini\"</span><span class=\"token punctuation\">,</span> Model <span class=\"token operator\">=</span> <span class=\"token string\">\"Countach\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>If we run a command to add a database migration, the generated code looks like this:</p>\n<div class=\"line-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">dotnet ef migrations add AddSeedData</code></pre></div>\n<div class=\"line-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">partial</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AddSeedData</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Migration</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Up</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MigrationBuilder</span> migrationBuilder<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        migrationBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">InsertData</span><span class=\"token punctuation\">(</span>\n            <span class=\"token named-parameter punctuation\">table</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Cars\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token named-parameter punctuation\">columns</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"CarId\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Make\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Model\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token named-parameter punctuation\">values</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Ferrari\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"F40\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        migrationBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">InsertData</span><span class=\"token punctuation\">(</span>\n            <span class=\"token named-parameter punctuation\">table</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Cars\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token named-parameter punctuation\">columns</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"CarId\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Make\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Model\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token named-parameter punctuation\">values</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token punctuation\">{</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Ferrari\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"F50\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        migrationBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">InsertData</span><span class=\"token punctuation\">(</span>\n            <span class=\"token named-parameter punctuation\">table</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Cars\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token named-parameter punctuation\">columns</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"CarId\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Make\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Model\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token named-parameter punctuation\">values</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token punctuation\">{</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lambourghini\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Countach\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Down</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MigrationBuilder</span> migrationBuilder<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        migrationBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">DeleteData</span><span class=\"token punctuation\">(</span>\n            <span class=\"token named-parameter punctuation\">table</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Cars\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token named-parameter punctuation\">keyColumn</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"CarId\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token named-parameter punctuation\">keyValue</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        migrationBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">DeleteData</span><span class=\"token punctuation\">(</span>\n            <span class=\"token named-parameter punctuation\">table</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Cars\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token named-parameter punctuation\">keyColumn</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"CarId\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token named-parameter punctuation\">keyValue</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        migrationBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">DeleteData</span><span class=\"token punctuation\">(</span>\n            <span class=\"token named-parameter punctuation\">table</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Cars\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token named-parameter punctuation\">keyColumn</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"CarId\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token named-parameter punctuation\">keyValue</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This is what you need to do:</p>\n<ol>\n<li>Comment out all of the <code class=\"language-text\">InsertData</code> lines in the generated migration.</li>\n<li>Run the migration on your database containing the existing seed data. This is effectively doing a null operation but records the fact that the <code class=\"language-text\">AddSeedData</code> migration has been run.</li>\n<li>Uncomment the <code class=\"language-text\">InsertData</code> lines in the generated migration so that if you run the migrations on a fresh database, seed data still gets added. For your existing databases, since the migration has already been run on them, they will not add the seed data twice.</li>\n</ol>\n<p>That's it, hope that helps someone.</p>\n","heroImage":"/images/hero/Microsoft-.NET-1366x768.png"}},"context":{}}