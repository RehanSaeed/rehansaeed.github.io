{"hash":"7b8e45b2dc640684e53f2b392e565d6b24fabdc9","data":{"tag":{"title":"ASP.NET Core","path":"/tag/asp-net-core/","belongsTo":{"edges":[{"node":{"title":"Getting Started with GraphQL and ASP.NET Core","date":"9999-01-01T00:00:00+00:00","dateModified":null,"timeToRead":1,"description":"","path":"/getting-started-with-graphql-and-asp-net-core/","published":false}},{"node":{"title":"Exporting Open Telemetry Data to Jaeger","date":"2021-02-11T00:00:00+00:00","dateModified":null,"timeToRead":3,"description":"How to optimally export Open Telemetry metrics, logs, and traces for .NET to Jaeger.","path":"/exporting-open-telemetry-data-to-jaeger/","published":true}},{"node":{"title":"Open Telemetry for ASP.NET Core","date":"2021-02-01T00:00:00+00:00","dateModified":null,"timeToRead":3,"description":"The basics of how to configure Open Telemetry metrics, logs, and traces for ASP.NET Core and export the traces.","path":"/open-telemetry-for-asp-net-core/","published":true}},{"node":{"title":"Deep Dive into Open Telemetry for .NET","date":"2021-01-19T00:00:00+00:00","dateModified":null,"timeToRead":10,"description":"How to use the Open Telemetry specification, tools and SDK's used to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) using .NET and ASP.NET.","path":"/deep-dive-into-open-telemetry-for-net/","published":true}},{"node":{"title":"ASP.NET Core Integration Testing & Mocking using Moq","date":"2020-01-03T00:00:00+00:00","dateModified":null,"timeToRead":4,"description":"Mocking services using Moq while integration testing ASP.NET Core applications in memory.","path":"/asp-net-core-integration-testing-mocking-using-moq/","published":true}},{"node":{"title":"Securing ASP.NET Core in Docker","date":"2019-03-25T00:00:00+00:00","dateModified":null,"timeToRead":1,"description":"How to secure your ASP.NET Core Docker image by setting the file system to be read-only. First in a series of blog posts covering Docker image security.","path":"/securing-asp-net-core-in-docker/","published":true}},{"node":{"title":"Is ASP.NET Core now a Mature Platform?","date":"2018-12-18T00:00:00+00:00","dateModified":"2019-01-12T00:00:00+00:00","timeToRead":9,"description":"ASP.NET Core a large developer base, a large number of GitHub projects, Stack Overflow questions, bloggers and companies who use it. It's a mature platform.","path":"/is-asp-net-core-now-a-mature-platform/","published":true}},{"node":{"title":"Optimally Configuring ASP.NET Core HttpClientFactory","date":"2018-08-20T00:00:00+00:00","dateModified":"2018-08-20T00:00:00+00:00","timeToRead":9,"description":"How to optimally configure a HttpClient using the new HttpClientFactory API in ASP.NET Core 2.1 for best performance, usability, resiliency and easy of use.","path":"/optimally-configuring-asp-net-core-httpclientfactory/","published":true}},{"node":{"title":"ASP.NET Core Hidden Gem - QueryHelpers","date":"2018-07-14T00:00:00+00:00","dateModified":null,"timeToRead":1,"description":"How to build a URL containing dynamic query arguments using the ASP.NET Core QueryHelpers.AddQueryString method. A hidden gem in ASP.NET Core.","path":"/asp-net-core-hidden-gem-queryhelpers/","published":true}},{"node":{"title":".NET Boxed","date":"2018-05-13T00:00:00+00:00","dateModified":null,"timeToRead":2,"description":".NET Boxed is a set of project templates with batteries included, providing the minimum amount of code required to get you going faster.","path":"/net-boxed/","published":true}},{"node":{"title":"The Dotnet Watch Tool Revisited","date":"2018-04-30T00:00:00+00:00","dateModified":null,"timeToRead":2,"description":"The dotnet watch tool is a file watcher for dotnet that restarts the application when changes in the source code are detected. You can use dotnet watch in Visual Studio by using the launchSettings.json configuration file.","path":"/the-dotnet-watch-tool-revisited/","published":true}},{"node":{"title":"Docker Read-Only File Systems","date":"2017-11-13T00:00:00+00:00","dateModified":null,"timeToRead":1,"description":"How to use a read-only file system in Docker to secure your Docker containers using the docker run CLI command and Docker compose or docker swarm.","path":"/docker-read-file-systems/","published":true}},{"node":{"title":"ASP.NET Core Caching in Practice","date":"2017-10-20T00:00:00+00:00","dateModified":null,"timeToRead":5,"description":"How to use and implement Cache-Control, Cache-Control Immutable, E-Tag, Last-Modified and If-Modified-Since Caching HTTP headers in ASP.NET Core.","path":"/asp-net-core-caching-in-practice/","published":true}},{"node":{"title":"ASP.NET Core Lazy Command Pattern","date":"2017-04-08T00:00:00+00:00","dateModified":null,"timeToRead":4,"description":"Move your ASP.NET Core MVC action method logic into lazily loaded commands using the command pattern, to reduce Controller complexity.","path":"/asp-net-core-lazy-command-pattern/","published":true}},{"node":{"title":"dotnet new Feature Selection","date":"2017-03-26T00:00:00+00:00","dateModified":null,"timeToRead":9,"description":"How to add feature selection to your dotnet new template using symbols (bool, string, choice, computed) and pre-processor directives.","path":"/dotnet-new-feature-selection/","published":true}},{"node":{"title":"SEO Friendly URL's for ASP.NET Core","date":"2016-12-17T00:00:00+00:00","dateModified":null,"timeToRead":7,"description":"An SEO friendly URL is human readable and gives your site a higher page rank. Learn how to implement SEO friendly URL's using ASP.NET Core.","path":"/seo-friendly-urls-asp-net-core/","published":true}},{"node":{"title":"Making Application Insights Fast & Secure","date":"2016-12-11T00:00:00+00:00","dateModified":null,"timeToRead":4,"description":"Implementing Application Insights into your ASP.NET Core application with performance and security as a top priority in this advanced scenario.","path":"/making-application-insights-fast-and-secure/","published":true}},{"node":{"title":"The Dotnet Watch Tool","date":"2016-09-10T00:00:00+00:00","dateModified":null,"timeToRead":2,"description":"The dotnet watch tool is a file watcher for dotnet that restarts the application when changes in the source code are detected.","path":"/the-dotnet-watch-tool/","published":true}},{"node":{"title":"NGINX for ASP.NET Core In-Depth","date":"2016-08-21T00:00:00+00:00","dateModified":null,"timeToRead":11,"description":"NGINX is a popular open source web server. It can act as a reverse proxy server for ASP.NET Core web apps. How to configure NGINX for ASP.NET Core.","path":"/nginx-asp-net-core-depth/","published":true}},{"node":{"title":"ASP.NET Core Fluent Interface Extensions","date":"2016-06-26T00:00:00+00:00","dateModified":null,"timeToRead":2,"description":"Using the fluent interface style in with ASP.NET Core Fluent Interface Extension methods. Building on top of the work done by Khalid Abuhakmeh.","path":"/asp-net-core-fluent-interface-extensions/","published":true}},{"node":{"title":"Social TagHelpers for ASP.NET Core","date":"2016-03-19T00:00:00+00:00","dateModified":null,"timeToRead":5,"description":"Enhance the experience of sharing a page from your site through the use of social media meta tags implemented with ASP.NET Core TagHelpers.","path":"/social-taghelpers-for-asp-net-core/","published":true}},{"node":{"title":"Subresource Integrity TagHelper Using ASP.NET Core - Part 2","date":"2016-03-12T00:00:00+00:00","dateModified":null,"timeToRead":4,"description":"Use an ASP.NET Core TagHelper to implement Subresource Integrity (SRI) to ensure that external resources have not been tampered with. With is part 2.","path":"/subresource-integrity-taghelper-using-asp-net-core-part-2/","published":true}},{"node":{"title":"Subresource Integrity TagHelper Using ASP.NET Core - Part 1","date":"2016-03-06T00:00:00+00:00","dateModified":null,"timeToRead":3,"description":"Use an ASP.NET Core TagHelper to implement Subresource Integrity (SRI) to ensure that external resources have not been tampered with.","path":"/subresource-integrity-taghelper-using-asp-net-core/","published":true}},{"node":{"title":"Canonical URL's for ASP.NET MVC","date":"2015-07-14T00:00:00+00:00","dateModified":null,"timeToRead":11,"description":"Use canonical URL's in ASP.NET MVC for better Search Engine Optimization (SEO) using ASP.NET Core Boilerplate and the RedirectToCanonicalUrlAttribute.","path":"/canonical-urls-for-asp-net-mvc/","published":true}}]}}},"context":{}}