{"hash":"8a7013b09bb606feca8cfaf9fbed68bfce3948e0","data":{"tag":{"title":"Content Security Policy","path":"/tag/content-security-policy/","belongsTo":{"edges":[{"node":{"title":"Making Application Insights Fast & Secure","path":"/making-application-insights-fast-and-secure/","date":"11 December 2016","timeToRead":4,"description":"Implementing Application Insights into your ASP.NET Core application with performance and security as a top priority in this advanced scenario.","content":"<h1 id=\"what-is-application-insights\"><a href=\"#what-is-application-insights\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What is Application Insights?</h1>\n<p>It's an application monitoring tool available on Microsoft's Azure cloud that you can use to detect errors and usage in your application. For ASP.NET Core apps, it can do this for both your C# and JavaScript code. It's main competitors are <a href=\"https://newrelic.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">New Relic</a> and <a href=\"https://raygun.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">RayGun</a>.</p>\n<h1 id=\"implementing-application-insights\"><a href=\"#implementing-application-insights\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Implementing Application Insights</h1>\n<p>Following the <a href=\"https://github.com/Microsoft/ApplicationInsights-aspnetcore/wiki/Getting-Started\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Getting Started</a> guide for ASP.NET Core applications requires you to add the following HTML helper to your <code class=\"language-text\">_Layout.cshtml</code> file:</p>\n<div class=\"line-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    @* ...Omitted *@\n\n    @Html.ApplicationInsightsJavaScript(TelemetryConfiguration) \n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>This HTML helper adds an inline script containing the minified JavaScript in <a href=\"https://github.com/Microsoft/ApplicationInsights-JS/blob/master/JavaScript/JavaScriptSDK/snippet.js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">snippet.js</a>.</p>\n<div class=\"line-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">var</span> appInsights<span class=\"token operator\">=</span>window<span class=\"token punctuation\">.</span>appInsights<span class=\"token operator\">||</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">function</span> <span class=\"token function\">i</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>t<span class=\"token punctuation\">[</span>config<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span>arguments<span class=\"token punctuation\">;</span>t<span class=\"token punctuation\">.</span>queue<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>t<span class=\"token punctuation\">[</span>config<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token keyword\">var</span> t<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>config<span class=\"token operator\">:</span>config<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>u<span class=\"token operator\">=</span>document<span class=\"token punctuation\">,</span>e<span class=\"token operator\">=</span>window<span class=\"token punctuation\">,</span>o<span class=\"token operator\">=</span><span class=\"token string\">\"script\"</span><span class=\"token punctuation\">,</span>s<span class=\"token operator\">=</span><span class=\"token string\">\"AuthenticatedUserContext\"</span><span class=\"token punctuation\">,</span>h<span class=\"token operator\">=</span><span class=\"token string\">\"start\"</span><span class=\"token punctuation\">,</span>c<span class=\"token operator\">=</span><span class=\"token string\">\"stop\"</span><span class=\"token punctuation\">,</span>l<span class=\"token operator\">=</span><span class=\"token string\">\"Track\"</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span>l<span class=\"token operator\">+</span><span class=\"token string\">\"Event\"</span><span class=\"token punctuation\">,</span>v<span class=\"token operator\">=</span>l<span class=\"token operator\">+</span><span class=\"token string\">\"Page\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span>u<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">,</span>f<span class=\"token punctuation\">;</span>y<span class=\"token punctuation\">.</span>src<span class=\"token operator\">=</span>config<span class=\"token punctuation\">.</span>url<span class=\"token operator\">||</span><span class=\"token string\">\"https://az416426.vo.msecnd.net/scripts/a/ai.0.js\"</span><span class=\"token punctuation\">;</span>u<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>t<span class=\"token punctuation\">.</span>cookie<span class=\"token operator\">=</span>u<span class=\"token punctuation\">.</span>cookie<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>queue<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">.</span>version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span><span class=\"token punctuation\">,</span>r<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"Event\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Exception\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Metric\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"PageView\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Trace\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Dependency\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>r<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"track\"</span><span class=\"token operator\">+</span>r<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">return</span> <span class=\"token function\">i</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"set\"</span><span class=\"token operator\">+</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clear\"</span><span class=\"token operator\">+</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>h<span class=\"token operator\">+</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">+</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>h<span class=\"token operator\">+</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">+</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"flush\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>config<span class=\"token punctuation\">.</span>disableExceptionTracking<span class=\"token operator\">||</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">=</span><span class=\"token string\">\"onerror\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"_\"</span><span class=\"token operator\">+</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>f<span class=\"token operator\">=</span>e<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">config<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">,</span>u<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>o</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">var</span> s<span class=\"token operator\">=</span>f<span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">,</span>u<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">return</span> s<span class=\"token operator\">!==</span><span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span>t<span class=\"token punctuation\">[</span><span class=\"token string\">\"_\"</span><span class=\"token operator\">+</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">,</span>u<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>t\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n        instrumentationKey<span class=\"token operator\">:</span> <span class=\"token string\">'{0}'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    window<span class=\"token punctuation\">.</span>appInsights<span class=\"token operator\">=</span>appInsights<span class=\"token punctuation\">;</span>\n    appInsights<span class=\"token punctuation\">.</span><span class=\"token function\">trackPageView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>This script is responsible for:</p>\n<ol>\n<li>Containing the users instrumentation key (The HTML helper adds this for you).</li>\n<li>Downloading the full application insights script asynchronously which actually does all the work.</li>\n<li>Recording any logs that occur while the full script is downloaded</li>\n</ol>\n<h1 id=\"the-problem\"><a href=\"#the-problem\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Problem</h1>\n<p>For most websites, this is fine and you can stop here. Here is what can be improved for the rest:</p>\n<ol>\n<li>The above adds 1KB to every HTML page. Moving this script into a separate file would mean that this script could be cached in the browser the first time it was downloaded. A separate file could also be distributed to a CDN and globally distributed very quickly.</li>\n<li>If you are using a <a href=\"/content-security-policy-for-asp-net-mvc/\">Content Security Policy (CSP)</a> to secure your site using inline scripts in your site is a big no no. You could use a nonce (A nonce means you can't cache the page as each page becomes unique) or even better a hash of the script contents but browser support for CSP 2.0 is not great. Using an external script would be the simplest option.</li>\n</ol>\n<h1 id=\"making-it-slightly-faster-and-more-secure\"><a href=\"#making-it-slightly-faster-and-more-secure\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Making It Slightly Faster and More Secure</h1>\n<p>So what does it take to move the above <code class=\"language-text\">snippet.js</code> file into a separate file? Well, it turns out that you can get <code class=\"language-text\">snippet.js</code> from the <a href=\"https://www.npmjs.com/package/applicationinsights-js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">applicationinsights-js</a> NPM package which you can add to your <code class=\"language-text\">package.json</code> like so:</p>\n<div class=\"line-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"applicationinsights-js\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.5\"</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The next step is to inject your instrumentation key into <code class=\"language-text\">snippet.js</code> and also the URL to the full application insights script which is missing from the <code class=\"language-text\">snippet.js</code> file in the NPM package. I do this using a gulp task like so:</p>\n<div class=\"line-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> gulp <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sourcemaps <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp-sourcemaps'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// Creates source map files (https://www.npmjs.com/package/gulp-sourcemaps/)</span>\n    replace <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp-replace-task'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>     <span class=\"token comment\">// String replace (https://www.npmjs.com/package/gulp-replace-task/)</span>\n    uglify <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp-uglify'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">// Minifies JavaScript (https://www.npmjs.com/package/gulp-uglify/)</span>\n\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'build-app-insights-js'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> gulp\n            <span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./node_modules/ApplicationInsights-JS/JavaScript/JavaScriptSDK/snippet.js'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>sourcemaps<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>               <span class=\"token comment\">// Set up the generation of .map source files for the JavaScript.</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n                <span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>                          <span class=\"token comment\">// Carry out the specified find and replace.</span>\n                    patterns<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                        <span class=\"token punctuation\">{</span>\n                            <span class=\"token comment\">// match - The string or regular expression to find.</span>\n                            match<span class=\"token operator\">:</span> <span class=\"token string\">'CDN_PATH'</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token comment\">// replacement - The string or function used to make the replacement.</span>\n                            replacement<span class=\"token operator\">:</span> <span class=\"token string\">'https://az416426.vo.msecnd.net/scripts/a/ai.0.js'</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">{</span>\n                           match<span class=\"token operator\">:</span> <span class=\"token string\">'INSTRUMENTATION_KEY'</span><span class=\"token punctuation\">,</span>\n                           replacement<span class=\"token operator\">:</span> <span class=\"token string\">'11111111-2222-3333-4444-555555555555'</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                    usePrefix<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">uglify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>                        <span class=\"token comment\">// Minifies the JavaScript.</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>sourcemaps<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>           <span class=\"token comment\">// Generates source .map files for the JavaScript.</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./wwwroot/js/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// Saves the JavaScript file to the specified destination path.</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Finally we can include the script in our HTML. Don't forget to include the <code class=\"language-text\">crossorigin</code> attribute on all your script tags, which allows full stack traces to be reported. You can read more about the <code class=\"language-text\">crossorigin</code> attribute <a href=\"https://raygun.com/blog/2015/05/fixing-script-errors/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>.</p>\n<div class=\"line-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">asp-append-version</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">crossorigin</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>anonymous<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>~/js/application-insights.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h1 id=\"conclusion\"><a href=\"#conclusion\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conclusion</h1>\n<p>As usual, all of the above is built in to the <a href=\"https://github.com/ASP-NET-MVC-Boilerplate/Templates\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ASP.NET Core Boilerplate</a> project template, available as a <a href=\"https://visualstudiogallery.msdn.microsoft.com/6cf50a48-fc1e-4eaf-9e82-0b2a6705ca7d\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Visual Studio extension</a> if you select the optional Application Insights feature.</p>\n"}},{"node":{"title":"Content Security Policy (CSP) for ASP.NET MVC","path":"/content-security-policy-for-asp-net-mvc/","date":"17 March 2015","timeToRead":23,"description":"Content Security Policy (CSP) is a HTTP header which white-lists content the browser is allowed to load. This post discusses its application in ASP.NET MVC.","content":"<ul>\n<li><a href=\"/asp-net-mvc-boilerplate/\">ASP.NET Core Boilerplate</a></li>\n<li>\n<p>Security</p>\n<ul>\n<li><a href=\"/securing-the-aspnet-mvc-web-config/\">Securing the ASP.NET MVC Web.config (Updated)</a></li>\n<li><a href=\"/nwebsec-asp-net-mvc-security-through-http-headers/\">NWebSec ASP.NET MVC Security Through HTTP Headers</a></li>\n<li><a href=\"/content-security-policy-for-asp-net-mvc/\">Content Security Policy (CSP) for ASP.NET MVC</a></li>\n</ul>\n</li>\n<li>\n<p>Search Engine Optimization (SEO)</p>\n<ul>\n<li><a href=\"/canonical-urls-for-asp-net-mvc/\">Canonical URL's for ASP.NET MVC</a></li>\n<li><a href=\"/dynamically-generating-robots-txt-using-asp-net-mvc\">Dynamically Generating Robots.txt Using ASP.NET MVC</a></li>\n</ul>\n</li>\n<li><a href=\"/internet-favicon-madness/\">Internet Favicon Madness (Updated)</a></li>\n<li><a href=\"/building-rssatom-feeds-for-asp-net-mvc/\">Building RSS/Atom Feeds for ASP.NET MVC</a></li>\n</ul>\n<p>This series of blog posts goes through the additions made to the default ASP.NET MVC template to build the ASP.NET Core Boilerplate project template. You can create a new project using this template by installing the Visual Studio template extension or visit the GitHub site to view the source code.</p>\n<h1 id=\"what-is-csp\"><a href=\"#what-is-csp\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What is CSP?</h1>\n<p>For a true in-depth look into CSP, I highly recommend reading <a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/CSP\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Mozilla</a>'s documentation on the subject. It really is the best resource on the web. I will assume that you've read the documentation and will be going through a few examples below.</p>\n<p>Content Security Policy or CSP is a great new HTTP header that controls where a web browser is allowed to load content from and the type of content it is allowed to load. It uses a white-list of allowed content and blocks anything not in the allowed list. It gives us very fine grained control and allows us to run our site in a sandbox in the users browser.</p>\n<p>CSP is all about adding an extra layer of security to your site using a <a href=\"http://en.wikipedia.org/wiki/Defense_in_depth_%28computing%29\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Defence in Depth</a> strategy. It helps detect and mitigate <a href=\"https://www.owasp.org/index.php/Cross-site_Scripting_%28XSS%29\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cross Site Scripting (XSS)</a> and various data injection attacks, such as <a href=\"https://www.owasp.org/index.php/SQL_Injection\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SQL Injection</a>.</p>\n<h2 id=\"real-world-example\"><a href=\"#real-world-example\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Real World Example</h2>\n<p>So what does this look like in a web browser. Well, here is an example of a <code class=\"language-text\">Content-Security-Policy</code> HTTP header shown in Chrome. I used the <a href=\"https://visualstudiogallery.msdn.microsoft.com/6cf50a48-fc1e-4eaf-9e82-0b2a6705ca7d\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ASP.NET Core Boilerplate</a> Visual Studio project template to create a ASP.NET MVC project that has CSP applied, right out of the box.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1018 651' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-218c63ca1ad90c07bac920d00657fd14'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-218c63ca1ad90c07bac920d00657fd14)' width='1018' height='651' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAApCAIAAAAK8LgbAAAACXBIWXMAAAsSAAALEgHS3X78AAAN3UlEQVRYw9VZ%2bZPVxRF//4E/gCWaSjTALiCHgJJY0ZCKqTJe8cqBJkZjBJZjd3UhhScxWkaiEaJlgcgliBwCyp4su/v27bu/776Pffd97Lvve983n%2b93lmVF1PwAWGl65/X09PR0z/TM9Hzh3PnnrXev3X5f59t3P/vy6ude/flfX5lC0Gz1rmdfuvOZbSue3HLbmq6fPL3tzmde/F7wV2tfun/ja0aLLRoJ6/X6TDo9EQlZ7E7Oyqde3PqPf23f/neF3jJKqfgyjUipFQMVOrFCLVTqLE4fT65d8/LOZ9/8aMkTW295uH3uo53XHuc/1tH6%2bPO/bn/rN107Huh86%2bEt7zyy9Z37Ov7JeX33YZvZyB8erFcruVy2mM9VyqVKqZBOJFKxaDabadRr9GSjlyfZ%2b3nv63uOdr23b%2bvO/dcet7C4eceejW/v2frBoa6dBzr/vR80RyKXFAvFfLEUi8XtNpvRaDKbzUajMV8oxBPxYDjksFvcXm80HI3HJjKpZLM5SX9/gJmdrFXfe%2buwVmUIep0Ou5XTNzwYDATdbhjptdntQIvVYrGYI5FIOBz2MOD2eL0ejzcUCgVDoXg8kUgk48BkMgFkaqgmkikGklN/6WQqzZYptFxBDASDoWDw1PHzvDHKZhtX67Sc/qE%2bp91pNOnMJpPJaNQbDDabVas3YBHMFiPLMRoMeqPZqNPpDXqDyWzSanRatVarVWtA6QwatRYzIZPKZHKFSqWUy6UUxZAajRJdwpFI9ErAxMQEKQG5PPZwKh6Lmywmzqaujo72jg0bNmzcuAnYtqENJJD52QTORQBj8%2bb2zs7OtvVtkNy0aTOgo6Ozvb0dxFoG1q1fv74NKtB5w1QJ%2beevBJBR2lno6Ohoa2vbuXOXzWnj3HHXT%2bfcMOe225avXLly2bJlq%2b5YtXTpElSX4Wfp0pW33758%2bfIVwBUr7rjj9nlzfzxnzo2rV69etmzpokWLFrS23HjTTfPmzWtpaUV18eLFC1pbf/hV%2bMGVgDlz5ixeDKtuW7hwwa2LFrW0tMyaNeuhBx/SGXWcFXfePnvWbNiK4VtbWyEEg25dvHjRQgaWLl0GB1auYNxbtWrVj2%2b5Zdas2T%2b76%2b4lSxYvWLCwZf7866%2b//kc33zx//nwoXbTo1nlz595wpWHODTfMnj17wcKFS5YsaW1pgZ0Y67rrrrvnl/dwx7ic9q2dXS90tTErziz5erZsIxUQqDNRwZTr1q1HIGEl161dO9W8YQOWlY0uIo3Q2rj56sCGCxYCNrGx/cEHH7i8Lo5Mq2SOp%2bpFqFRm1i6FS1orLHydc8XhEjOazSbMDoaDHIlKBiqGLf1/BXCp0Wj4g34OpVHAgWSKnOPsWc5CijnCE4QmBGki5Tc1JViYVjKzlfAvGWImTHO%2b3vR1qNfrdJO%2bjAPonMvl8vl8JpPJs1AoFIrFIphoLZVK6XSaMLPZLJjggCBNpEQriOm%2bpLXAAvqSUdCR0BguzcJMJjoS5rd4cnkH0AGdrVYrbrFgMDg4OKjT6WQy2dDQkM1mi8ViIpEIt4lGoxkZGQFfpVKdOnUKMljT0dFRaOByuUqlEnqgAUR3dzfueLRClVgsTlwAtVoN/WQKUIUAzMVFiksKE4exwAQHAt/kwzc6gCk8duzYwYMHoW7//v1SqfT48ePg9Pf3o/WNN96AMzB63759MMjn80ESGQeyjB07dsDiXbt2oRW39MmTJ/v6%2biDApCJu94cffgg9PB4PTD6fj9aenh6Uw8PD4Jw5cwZqUcJ/lBh3YGDgyJEjmEp4eFkfLuMACR6Hw3Ho0CF0hsWY1KNHjx4%2bfBhuYJKQ5GGYAwcOfPzxx7AG5oJ59uxZLJrf7z9x4gScOX36NJZl9%2b7dBoMBJsICTAQcQK8vv/xyz5490Annofb999%2bHHowFryAJu9Ed47777rtohQ/wWS6XI/Bmbp7vdsDlcmHasJTojKlCtGBBYSJshSlI6tAK0zH9FEUh30Peh7WG/Pj4OGLJarVgNSAAVeiLWUCOiFQPdisUCqhC7MErvEjQUSgUYlKcTufevXsRVODz%2bWOIUnREFaMHAgGyE3AEfIsDcsYBJrPEXyKTzWDsQiFfqVbK%2bFeplEpFvArYPYmWbDqTKiL/LhbIfsQ%2bJUtMhMvlEuYMv%2blMGjSU4ABAKOPkLgMq5VqthhIIMYZRKWcyjP8Mn62yRKlULqMLhs4XmEGZcdPsHKcYI2EpcxVMNgMhPy4yZgUymVwmncWxEfAH9DqdRquXyxRCgZCSUsgrtRo9CJPJLJVQQr7AoNNzR3gKmdJisVKUQq1SO%2b0O8BUKJTJRkVgqEUs0ah30qNVatUopEonBMRjMSoVSKpUhiVUpVfZxm4AP/bJgMKzAasqVMimFDBillFIYdDr%2bmEAioSQiqViE3tKJWCKHiUxnC/kCJrnRmMQKeP0%2bziB/YCLus7lNVofB6bVaHXq1nhoVjwilPKF0dEw0JFbwKZVIKOXqLSpKJdQaFaZxjUjG1xqVBqtaqZWqDXK9RSlV8uUaEV80JJDxZGqRSk8pdVKUYCo0YpkKk8FT6aQyjZhSi9QGCkoolQAKLQ4DWim1UKYWaowKlAqtRKWTiGQ8gZQrlvGkKqFCzLU5TeM%2bp9M3rtJSdrfZ5jKHYz6FXsr5tO8gT3dOqBkQqPuBY8pekaZPoO7rGTnWwz02KDotN3Ml%2bvMy07DKxgPBV/YprKNyCxeSMvOISDfIV/WCpkzDcjPWpVdpHZWZh/nKXmjTu0VGj9jokRi8YoNHZPCIQRhZWucSGlla6xIYvBJCQx40ZPQekdEHJoOGgNTKP61QDwzpFFITb/ehd4W6c0e/2CvWnRNoBzjC4X5aKEhk016vG0%2bocDgQTFYCiXIiEY3FJ8IRvMICoXAQ%2bxXphs/v8/m9hBOdiKAsVxDo5WqNjX9sg%2bpUCQ5hsvxShcGLrRfoEqps9jRVJQIXsEQEsCXK9Wq1XqvXK7V6dbLZqDdqDNZrseQERyAYrTpdWWyWbK5Wq2PPlWs0ENscamvVWrGIuzZXKpawm8osQJI1DPu7TJKqaw9k3HQ2zRkRjUbi8WKh8C3SSJuKLOAaxnk6fTbDGXKPokQrOfLAvGYOpLIpznmROJUrT2TL0Uw1mqnEcrV4oQFMMGU9VmgkC/Vp03H/45gnWQ3xBEckUgzYTTyEJ1goaG9cZag36pOTk5GJCOeLMYnZm5OPR6XWqMQc1ngyzhTtSF5A0LGK3W6HxbhWcOPC1pnTMB1CM%2blr9ImlUlFpVJzuMYnCGNR7EqEi7c/RnjTtTjVZBN30ZmlHtCiRSOAuFgFJARYB6Q1uUFyx5A7GUmAREFEk4Zte36sdP1jqIe4QRyCncEAkM9lYIh1PZhrshytgo0lX602U2fyUAzAdtz2sx%2bUPT1LpFBYEySOMRhPWB85EIhH4hri6Bg7kc/kR3ghHKBOq7SJPwIEXB87KQj5fxF2Xz%2bI6J9L1Wg2TjbCDcYglOIB8CYTfEwAHdtcvAGTgJwiU184BASXKJHKpZDrDwsx3xvQbFzMK4zDBWAEY7XQ4fSGfLE253C5UyXzPDJvmVQYyQTjNh7nDnCH%2bcCDhtrtstnEb2azTnkw//FAlST/5NsZ8dYyEXWEnTiGow%2bFDHl8ISjL9gKvtQ5NuIu2z2q2c82PDOqty3GH1%2b/yIbISHkwU8DBAt5LyHA7APdiPo4QmCHjlfJBgBExaTxydx42oHz1cjiQ5FQhyhXFwtVTOZLDEUBsEzEjwgUAVB%2bKlU2ulyhyMTLrfH4/WHsAoR5BoTICYvxM9kk0aa%2bG34nQL/IzZpLDPzHhDIRDoH5fY7YhNxzC6MvsRPTCocgC%2bZVDLkdwFjkUBiIuRxjgd9rlg0mE5E2aOryeI1zSaIA%2bJINIo3As4e8vlg6qq7AFgB7IvJRt0VSo%2bofGPagMwa46q8XJVb686K9T5LuOZI0E4W7XHaFmMQBKEdcQanmDHalaBtMzgOVoxUSRcGZ9A2Uo1NyYyzvaAERLLYDIX9nGHBaCmX9Pu8JO6xDWwsIOKnP%2bDgYMqW6v8R0utO0x1n6ec%2bp9edYog1R5sbv6D/cpJ%2b5BD95Gf07z%2bl799P37ePXr2b/tMx%2bt6P6QcO0L87wrSCAPOhA/TDh%2bi7PmSEH/2Efuo4/fQJ%2bo%2bfMQIPHqB/e5h%2b7JOpEt1BPH6Yfugg/cRR%2bg%2bfMkzI3PMR/YvdTPflu%2bjjmmYq7scpxPVa8aSyerxeOIBDBhaT7xyIHByRiWSqkIqcUNXRZ81RRum9%2b5jhO8/SW3roN4fp1wYZGr6BeL6b3n6efnWQ3tJLw7euHobuZJlvDNN/66O39tLrTzMl%2bCjfHKFfHKBfGaRfH6LbztDb%2bpgq%2bkLtK%2bcY4oVuels/vZPPSEL/ywOMEqjC9AldzUQswOke7LWO2/UGAx7aRhMDRpMRL3TyH00Am92RS0X7jLV1pxpvnq93dTfaTtXaz9Q1gQbu6/pUbj6F1RrDQXmRydK45L4iRmRqTAm6Xr%2bo52K19hW100qmVDUalUrVPG7mjAhGc%2bksc8jjcRoKedyeMN4p/oDP6yW01%2bMN4pGDlDubnqxVGrjZSkW8FepV5mXCYOUi4g1zCad6WQ4R/gY%2bUVsj2qbVXqqtjCdTMBTkHDj5qURBjYrGxsSCwdGhs/09XMHouZHzPYP9DC3k9Q%2bd6x7o7R7o6Ts/IFZQQryz5XiwSoQypvy%2bUCgTS%2bTUEH/kv4wf0pjbQEBDAAAAAElFTkSuQmCC' /%3e%3c/svg%3e\" width=\"1018\" alt=\"Content Security Policy HTTP Header\" data-srcset=\"/assets/static/Content-Security-Policy-HTTP-Header.82a2fbd.dd6f8fa38d52ce81648e109924f983ee.png 480w, /assets/static/Content-Security-Policy-HTTP-Header.1037d49.dd6f8fa38d52ce81648e109924f983ee.png 1018w\" data-sizes=\"(max-width: 1018px) 100vw, 1018px\" data-src=\"/assets/static/Content-Security-Policy-HTTP-Header.1037d49.dd6f8fa38d52ce81648e109924f983ee.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/Content-Security-Policy-HTTP-Header.1037d49.dd6f8fa38d52ce81648e109924f983ee.png\" width=\"1018\" alt=\"Content Security Policy HTTP Header\"></noscript></p>\n<p>This is the HTTP header in the screenshot above. We'll discuss it in a lot more detail later in this post. Essentially it says, block everything, except scripts, images, fonts, Ajax requests and forms to or from my domain and also allow scripts from the Google and Microsoft CDN's.</p>\n<div class=\"line-highlight\" data-language=\"http\"><pre class=\"language-http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Content-Security-Policy:</span> default-src 'none';\n                         script-src 'self' ajax.googleapis.com ajax.aspnetcdn.com;\n                         style-src 'self' 'unsafe-inline';\n                         img-src 'self';\n                         font-src 'self';\n                         connect-src 'self';\n                         form-action 'self';\n                         report-uri /WebResource.axd?cspReport=true</code></pre></div>\n<p>So for example, you may only want to load CSS, JavaScript and Images from your own trusted domain(s) and block everything else. You also might want to block any use of third party plug-ins (Flash or Silverlight) or frames. Using this type of policy, the only way an attacker could compromise your site using an XSS attack, would be to somehow get a malicious script from your own domain served up on your pages in <strong>separate script files</strong> as in-line styles and scripts are not blocked by CSP by default (You can turn this off but I will go on to tell you why this is a bad idea later on).</p>\n<div class=\"line-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://evil.com/Script.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>With the above CSP HTTP header in place if an attacker did manage to inject the script above, browsers would throw CSP violation errors and the evil script would not be executed or even downloaded. You can see what that looks like in Chrome below.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1018 431' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-ac7cfd6df183ca03235b59891304377a'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-ac7cfd6df183ca03235b59891304377a)' width='1018' height='431' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAbCAIAAABDQh69AAAACXBIWXMAAAsSAAALEgHS3X78AAAJh0lEQVRYw9VX6XNT1xXXH8AXpjDBAy0Jxo5t8AJmWJq06fRTO9NOhk6TtjOhWQAbbOIFUty0pXTChDAFmnQouGC2QoIx4H2XZONFu2TLsmTLlmQtT3p60tNi7ZKxJfX3nmzhOtDppIG0Z46Ozj37ufe9%2b%2b7l7Np37NUDJ35UcfrVdz/8/v7ff%2b%2b93y0ieHb4yrsf7n77eNGvjhb%2bsnrXr4/vfrvm%2beOed377w/01e6s%2bMprNVoLQaNT%2b2VknRY5NTHOK36o5evLMH06cFCs1PKGsX6wYkI4OMagckigeykY1ejNXqHij5tw7f7q05RfHXnz9yKa9Fc8fs/a%2bn/Pzqp9Uf/L60TM/rTq994M//%2bw3Z39c8THn5KWbUxr1ALd7fi4WCPjDwUAsGolFQrNul5em/H7/wvyjZHy%2bhS/4e0PbHy/dqj535dj5uuePR8/XVZ%2brKzt9qeyT2g/%2ber3qXF3F2bpDH/%2bNI5KKwqFwMBymadf09LRao9FMTIAGgyHa7bLZSb1uEgvnsDtctNPn9SQT8eQ3BIlEci4aigRDp09cMegMRp12xqDjtHN7bFab0Wg0W8w6Fia12slJLWWn7HbSZDKZgWaGkHa7jSRpl9vlBnhY4nExA4Z6PF4g/tzMP/MDdXu80H%2bNSFhthIW4c7tLJFFop7SKMSWno7fdMG1Qa5QTeDXUatX4%2bPS0VqkaBz8xqdaox8GOj6vUE%2bqxMRUGmgmNcnRsbFSpVI6MKkeVYyoQdC0WiiUymUIhk8pEYrByxeioTKUapyjH1wJOpzNFnTQdDPkxRTRNj6nHOIcqy8vLyg%2bWlJSWlAIOlrBsSSnzV8rIWHFpSnj4cNmRI%2bUHDxwsLT106NBhQDm8y8rAvwfYv//AgQMHEQLOJaCAkvLyI18LIEUqI6CsrBzJamtrdTM6zo5Xdq17YV1RUVFxcXFhYcHOnTsL8vMLi4oKC/CfX1y8YxsDRdu3b9%2bxY8eml15aty7jtdd%2bAF1eXl52dnZGRkZmZmZWVhaGW7ZsfTk7e8OGDd9eBuv/a9iwfv26jIyCAlRUkJuTk5ebi3SrV6/e99Y%2b1YSKs2138ZpvrdmydSsqgCI/v2DTpk25uXk5LzOwdWt%2bQWHhtqJC9FC8vfjFjRvXrFmzZ893EQXazZmZa9eu/c7GjZmZm7OyNufk5KLDF54BIAtKys3NzcZM5eZhylatWvXmG29KFRJOVc3RmuM17y8BFquiomL5MA14WioqKqurqsrKDjO6CgaqqqoqKytZF8arorKy6tnAYkFsbdXV1cj4%2be3PSQfJkSjl2KFic7G5JYjFHvMrIMbCiuEK%2b9izgRWVMLtqPGG0GDlChQQDvNGu/ytAD/Pz80wD4lEZGvAwe/cieFgAw270DKSYlCpFl6vSXmmXdJD00M3C8hTeL0Fa%2bETtCliIL8Tj8Sc0ACYQCASDQZ/PF2ABfDgcBgMtmNnZWUhCoZCfhUgkAgohGBiAQgsm5ZgygzbEAphUFqhSPNKlhXBJ8akI4P9NJ09uABTOOEyMj49brdbOzk58rkQiUVdXF04Z%2bIYMDg5SFCWXy3t6esRisVQqvXPnDozxieHxeHDv7u6GFoxKpYJBc3OzxWKBtr29XSAQeJgvtwtxZDKZ3W5HiWiPZiHlAi3KmJycTNUD7dN6eGoDmMJbt27duHEDX%2bKrV68KhcIvWOjt7UX0U6dOofSGhoa6ujrUhyPG9evXURCqPHPmDMo6f/58Y2PjyMhIfX09miFYQPMXLly4e/duX19fW1tbf38/tE1NTWgeYSG5f/8%2bwsKRy%2bXCDME7Ojpu3rxpMBie1sPyBqSpBvDEYhFxFkL16AFzhkkFg0BiiRgnEbV6vLeXi%2biXL19GboVCgdVobGrEouHIhCbRcGPjA7RRW3sJy9La2gqq1WrRwLVr1%2b7duwdHPp8Pevv2rU8/%2bxT2CD4wMNDS0oIeMBcYnj17FsFhc/HiRawJgn%2bpAWa4sDAfjy%2bYCCO2UWYFfLO%2b2VkfHlrm0GYjcTgbHRkVCoQatWbGMBMOR/A2TmmnCMJqsRBK5ZhELJHL5E6HUzet8/v8tJPW6/QTE5M6nR5d4QgUCoVhxuPy7HYKp7DBgUEcpQx6w8DAoF5vmJyYnJqaEovE4OGC9uA7PTU9NDQsk8lx4kIEkVCErRHBUZsvRVlkJD4fph9rYDAZOHxBXzDsMxJ6o0VvsRltlJkgTWAo2kbRVtJhsVEWs9VAkEabw0LYTRhSOGU7rXYnYaXMGMLeajeTDgIuGFpZGxOhB6U9dsihdbpxHGcCQgK6iC4bhMilN05BbqetTo/d4SbZ1FCRTEY2uJVAAZhaC2M8owVPuym31zGilnH%2b0XKlT9rcL2/hS5r4kmaepBEo1vT0ih50C%2b4NKTuAfGnzQ0WbUN3Nl7Z0DTUMjLTypU0dA/UDI20w5ooe9IruP1S0AruGGyBp6Lx6t73uTuvl4bEOha5PNsWXarkyLU82tRIhl0/zR/T90rRWm1aB8qGV6/rG2m8MyTs7RyT9iva/1H7Ur2itq/9MoOriyVo4XAHPYjNTbspoMYRiAdKB2bURdkye0z1LUzQJniCxDoTdYaOcZDDsD0WAARYZBhIGI/5gNBDEMOIPhH1Af8gXSAmjQUYeXcJFYWDJfgmX3P9V619SpfIilw/UH/SGwgGL3cQZkgj8bm80FPZ5vHgZ8CYE/AG8J5FQeG7uUTSKC2bU58UF040HEZ8iPHuL96MUJhi6yC3Ek/HEYykQEvBwWUgsqtI0ZbwcGWM2dFqbYDG%2b5JtOzGRg/lweF0fA60oaTXHjTMJqTRgMSYcjSVHJmZkkaUtYLAnamTTok05H2OulSVsYO63T6aEon8NBmc0uinJarW4H5fP7E8Fgwmxm0OFIuN0Jl4vhjUaGt9kSLpoZsikYA5JMmEwMY7MyvJVIzHoTBMFYejxMXlgSrBBh7XYYJ8Mh3MiMJlxvmRsiSZKRcNjldS1%2bB%2bZRdyzGuCGxyxVHdJstrtfHUcHMTByZKCoOhNztjhMEkEkAY6T0etlJZyEeT6QBfHrInL3ij3E5pIdP1KZVWE7snUvwaP4Rc4Tz0BzBiHxuIRmNRpYW5z%2b4Wn%2b1C/lXvsk/qa7UI8Q08FA0%2bCgWw%2bYKZD4Sbje2We/SUSzg97tdi%2bc2vBtYtf8RDIdCsWjUaic49S33cGEXS8UyhWxYONzD7QE/JBji9fPBS2SS/sF%2bLp/L6%2bNBqJnUqHDvx1npm0aUgWIEkuF/AiKPV6lNVzpgAAAAAElFTkSuQmCC' /%3e%3c/svg%3e\" width=\"1018\" alt=\"Content Security Policy Violation\" data-srcset=\"/assets/static/Content-Security-Policy-Violation.82a2fbd.8242008bac45626696ad48ae5863651c.png 480w, /assets/static/Content-Security-Policy-Violation.1037d49.8242008bac45626696ad48ae5863651c.png 1018w\" data-sizes=\"(max-width: 1018px) 100vw, 1018px\" data-src=\"/assets/static/Content-Security-Policy-Violation.1037d49.8242008bac45626696ad48ae5863651c.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/Content-Security-Policy-Violation.1037d49.8242008bac45626696ad48ae5863651c.png\" width=\"1018\" alt=\"Content Security Policy Violation\"></noscript></p>\n<p>Even better, the browser never even downloads the evil script in the first place. You can compare the two screen-shots of Fiddler below. The left side shows that the evil Script.js file was never even requested but a Content Security Policy violation was logged to the URL highlighted (I'll talk more about this later). The right side shows the site with no CSP policy in effect. The browser tries to download the evil Script.js file and as this is just demo and I haven't gone to the trouble of setting up an evil website, it can't be found and returns a 404 Not Found.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 578 505' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-4c42b2e12e89644e7b9d04232e1c05b4'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-4c42b2e12e89644e7b9d04232e1c05b4)' width='578' height='505' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAA4CAIAAADCemklAAAACXBIWXMAAAsSAAALEgHS3X78AAAVP0lEQVRo3tVaWZMjx3EGFfbfcYTDv8ARDh8vtkOWZMsPtsIvjvCDbJLLa0laokWLknZJiqIkWxJJablcLrn3HDsXZgb33QC6gW400Gg0%2br7vRuM%2bnA3M7K4ky8FLcjA3oyK7KqtQWV9m1jEbe%2bn7P3z79t6Nmye/uB3/9p3t//jw9q1UrlQj8iWshtP1ZjdbrOfKGNLooi2mgBCpfD2Rb%2bQQ6iBRubeX3j7MbR/m904r6UrnNI%2bnSp1MpZsqd5JlKgll6RGhREH9OUdyokie5ImTHH6SxaGE7ok8niziqSKeKbfSBSyTr9QaZBXFi5X6aSqfLyLI%2b%2b%2b2fvZm7v1r9Stv42/96O6167GLH9z%2bWuqFN5Er1%2b/vvfzW9ctX3nv3zt060blzZ/vwOJVD8VQmt71zUspjidNK/PgkWUAZZcDIYYezcVoneibWkRtdvScPaWkQlfKoKw%2b7UkhJ464ypaQhJT6oHNLKGISOEDR6Nto1mj2T6NtE3yEYG7jVt8m%2b3e5bXcGlWH3vKH10kjs6LR4cZ9%2b/sXtwkEw88c/1v/%2bTg29dzP/b1/Jf/dP07buxx6%2b8/w/3fvD17SuX7x%2b%2bdP32yzduf5jMcqqJETTe7pNdsoHjVYxAytmdncOjRDVbESq4THJOhfLRXkCDJWLYlQZd0aclvyO4fTXsCl5bDNsMXUEyTVolOS9VF9OYQvQMrEK2GbPYYOPpyv5x8SjbwCg1h/aQllhriwWshxB8vS0VGlK2zidK3ZM0ki9Wy2inhFRz5WajglE1tFerd2toFyMIkold%2bsXVRKF67yBxUizncHw7nU2Vq51un2GFOkZ0SAzDUI4XWkS9hmJkR8iXiAbBoE0yWSTKKE0xQqPVq9ZbwCTV79B8GcFOE5kiQlSrpRqSrSBYi%2bJyFeLarb3TZK6cLRItGqk3q%2bAZBIU2O22qj%2bIdvN0jKQZ%2bkIgEFid7MCze4TGcpLp0jxXabQKa%2bpLJqfaGRd2pNunYN969xrH0/t2dbCo7mUySR8c3P7hRq6Kmoe9sbcX39m/cuKtblsgLpwf78Xj8OB4fhEETre9t3zuOH8qqJrDM7t07169dLxeQyWSUiB8eHx51SDJ%2bGE8lTu/dvM3wgqbKu7s7pWKuXCndvrt9fHS4v7t78%2b4WSbbDQeB5ru95Uel7wJ7rAPueGwme6zpANjSvW%2bxHGcM7sYvvXRdVXVK0wWAwHIWapobD0Xw%2bG08mmqa5rjsejcbjsQ1k2EEQhsPhuknVNd/3J%2bPJOByGpmWBmuvAv4FlT4ej8Ww%2bH21oOAoCmKIvCKJl26Ph0HYcGAQmKstKGIbT2QzGHwKNRjAH%2bAEYfzqdrX82kibTyWw2Gw5D3w8GjxDY2ukysWeuXK3Lo7KyUJ3BKaHzolYpFDodulFHXc%2b3bCuRSMqKDMNVuYoXWE20KcnKarV65erP37rzM55mmw2iR/faJAWzrdXZSuF%2bh8BrCKqqKlFH6T4/Xyxc06DpXrdLK6qmKRLRJGB1eJ4Dq/o0LcqKbTuwHul0en9/r8/0SJKURKmGIH26D9ShOrbjLpdLsGR%2bTtPptNvrx751/XqLU8uUZFhOHusTFFvMpvf2Dk/j8XoDlyQpmUzyHGebZonM64aClEqNJj4KZ2/ff%2bOdO6/RZDeTzpyenKRSWUXRGg2iePpKm8DSyTRSqSSPT8pI3XE9iWNz%2bfz93b1EMtNEa5l0rlqtnUCvdCYTPymUKgzLG7oOLrq1tdWl6XwmU4MwpTrFbL5QKCZTKZrpA5LgTOAU4E6WZe3v7yM1NLZ/ckdRJM9xoL9rm7ZlAXSTCL0xOB8vq44f2J5Pi6rjhbplywb0tXRN88BRbRdkPwgAZdA3TQN%2bABzQjTw38l34JagBZcM03TXB%2bOCM0GaDE7te5HRe5OSmaUbD6pqu686aLMt0Ik3QABXXMk0ATT8ngBcWqFKtx4r5XYCsy3DgFfPlajgIK8VyBUGTiQwg68xXJwXsJIfsp4rHuVIZEuF0NZ0tlsuonM7m0EtVlJOTdKlYGU5mLKskTo8V3YlGmy8ijnRXUICw4cUjZcRrncUSdFbLiFaLdSt0iXqdDxK1rn6JgdoUHcum77A9WlM1iEXPDyzTBv8jWo1msyErat8eFntSsdvPd%2bhTtJOj1K4zCUIfEtFoHITDAEIUwGu3cYoiASiOFzGsAYHkB6HjBq73W2TPCzC8FcslPuiwKiGFkjaaTtYrMltxzErVV7AO0/lcUFed3qrNrCbLFSz9ZLGQlZkkzMjWTOBnPDvj%2bQVDr9j%2bajyej0cQZ%2buOk%2bkM8stv4llUzh8G5CehxWLRIjuxW3u3iL5SF31WgnQW4TIcLIvFVbu72lCbXnHcqkODS0QYQw3VWyG1VaGyqtZXjcYKJ1e5/KqMrEbjleOuZsvV74womon9170tjdPHgmnx5nS0iHx3PNObise7GyVf9OyOYrZ1MGAzt4E6gEqrrQaiA%2bzxttGUTFIFPw2NwOpZLu%2buS0cndZt1PME1adtlHYdzbdowu9bYHbmcOx3OouE%2bhcGQmmIf7OzqijWyA71vTodRUM6GU6Wu2OyZAQ4f%2bJLrCMESrFubYDGuhEhiTZbrioqqRseUa4rS0OazZaAGGqFruKagik4aCipLVVnDVfhU6jJXFLWGAjUu58AII2/8KQ1od6jYe/v7Cq/7gqnS2mRtwHw0lcoirNlGyaQdrSHLqBq50JlJvkmZUlWC0uqaBmUIRQGmtZgtQz3QWjosP9hg0ZbaVFVcNynDYuxImTZN2rJ7lhyZbYT6QMW0yWD6ic0g253YP/7gR7KojQzXVd35dLlxIZiBrw02SgNjOAngnDBenmcvTwoM0oAZmF0wwHIFD8yw%2b87agIHDOnbPhtlDjb2RGQs0wXMABBXXwDa1qWmE5gmeUlPG/uQTG1DD8NhfvPyKwOg%2bG0gdZRJGTjkLJ1yKVVvGRkklDBkRxIoyPw9Po2srmMrmOBmVVfANTO6f9rgsF7mQ7AEUsPByTYJSaShcgQfvj4KBiTaH5fKzjPEaRsT%2b6pXXRJYYSClfd%2beTMwRcxhno4UZpDMFmDwZG%2bACBoTHyGNdlvUAIAtEP1AHoe7y3mC9H1tAX/YEceqwbyCEo%2bGz0CWpDbbg2YD3GxgqQN/vTx6dNp0q9EfvhzX2uu1NNv46zjcEiiqrxPKwopbZDb1RbFtMy6jWNmC7OLKAcDrfwrJRHDQw3miDnpGxJqcAWoQZC3WhiOlo36k2jgepYXa9WtXrTIgmTVDwJlxuMzfWMdsfof5q13wBZQNDYu7sZqZ/D8j/lFXa2itLodD4WHcEKnbOQHQY2nJdD58FKuaPACAzNN%2byB5YS2GZqSIyqeAju/N3Q0XzcDUw90IzC9kWfC%2bTq07dBVfSOcBPrAHAKioaGH9qd3Ibj6xl5%2bFxA4QlI/rnbR4TJKCONpWOKKpHG2k7V0htKbmEpOF4sNAm2jXxWr6X4WEZG6VMfVZq6fKXFl2McVT6hKGMIjFaGMCEiBK9fEatuAmyYnerIWaILdq8v4eqjPgFCCir3087sSk8ZyP%2bAUZrKcrxGYQCjao7N9wBsFeqAaobU8970IgYEBGd8KYXUtIzQVX4ZPgNUfedpAh9a1gqr6qjEw/bE/mg2hNEPbGVoAwvwzMgAje7Gvv/k2141n4v/dYTuThwgUHiJg9PtWm9CoRxBgKnwlw0T3%2b5pYa24Q4DcI8FURhdaSUKoJtSJfAShaelsLVESopplMspduaU1MxrSBswnjT2NAud6M/fW3X2fpk27tTdWU5%2bvh5oup6ivO0DuLgZEPLgufi/MM6IwCK7Rhda1hhADgAPpaoEOQ%2b2MPlhzYjGABBDR35EEl%2bD3EA2ACyAAUAJQ/GXgj1x8Ho9kYWifzKQiLj5xkN4q5IhL7p5e%2by3TihdP3Ms3cYB5loeHEz/RSuNbeqBIa09EaqNyanWchUu8VuWKayZb5UlVA6nI9QZ9m%2b7nxfA6HhJKAlLhSnitEMcCWChGYlD7Qynz5lE4e06cVsdLWu/CZZlJ5tlgRq0W%2b1NJIwHM4m3y8owTNxf7ym99j6aNW8TuyLsweQcAePowB1ZcVX3uwPO54AIcx2VOgdIa2PbQhBiBAQSGIHD2CxR5akge9QMeD0hjo/iQYTAbj9Ro9utKbrQ1uL7PF7OOm0ZNUPvbn37pMd47zp1cRsjpaTNYxMKjyCGUyG9WOCTfibsdgZuc7WddkUQkt8ZUoBSnNlt4qwnqLtek6C2EKDoEBTcCg1lBbkLJADQAhNBI8bTPp8%2bvXQ%2bET7ANHyVzsz1661KcPe/XXNUuFBBIdJeZj2qSVQNuoaoHF2Uzf5s9P0ytr6IGLsw4HDm1G2UYB/b7Ngou5Q0vwJKiMMqYr8DYreRBODmwFsicDOPrACCaBO3R%2b3Vs%2bQTjXiF7sj1/4do86TcevEL0W60Y348ksbMqNviNslFhHUT2ed%2bT5OQI9i4c1rop1TEabSqNjUKhUbyoEIKD5MixzVajWpGpTbVE6WeCRjt6mDAo2hwg0uSG4LK4S5tD/9FkIwXuxf7n0E44%2baJVelQ3RGXvLNQKk2uJdaaPEOTJltEidWgdxRIpviq5I6m3eFSRXYB0WV3BSa8Nx2w512mRg7TmH61t9ymj3rD7kK9jFoAbCho/2eFPyRN4VIU0tf82dPrILRZp7yWLsjXducXQqHX%2bry3aMoRU9N8xHXYOSfPVsuoHljeC84C7OERBchdRakDdgabtGl3N4yuj0rB5sFNZAZ2y2pYLBra7ZkzweUwjW7oNJhEI0lCZl0jD7nsn0LIaz2U/qO2cGfHD/NPbjq1sCfUijPxE0nnf5aCeeDVGp1rM2o0PIcqTWwLXO9BwBzomcHpUxcB7a6MLsIZmicgMgMgKF0CKrwDbABE4Z4Ei8w0dG6mBkNG9ISpzNESoJNoOztaDepABPzuYZqx/Oxh/dgBt7idiH23Gxn0vF36I5QMBYGzBirJ66ThfrkPWtgaYGxvL8HKwP4IrCMBYLMxMcQfaVnkmzNjdbLJzQBN8A5wEF8BbVlyiDkaMsrFA6RRldiHVIqQBI16QhrGEhwLtYuwfdWZsH88bz6Uc34EMw4DBZVukdqvAKJ7Giyy9hF5iGmFCjDWYFZ4flitL7bRVtyK3oGWtdw5gCpXbKbIlUiI5CdjQSYUuoUAcF3RMJ8B%2bZIGW8KTVwCa0LGKP3%2bgaNClVSabdlvCFiTYkUwUidGc/O75PLs7vC4hFaRs9hUbn5PMu/65qNAXcPU7FcoVyh6Z8eoawuWfMoM0zmY8YT9fHZUcKahebQ0Yf%2bg8OcNR3IU0McmdrM1meOOrb7vsgNVPgFe%2bLyoaGMTWli6DNXG5rc2LAWvja1xZGhTKMu5sJXJrYy1dW5O/4/A2D5yJkPZjydnu10i7VJURptELFk4vTGIfmv71BstdWNnyx4adZjqjd32seZlSCtJAU/zLT296tbh5O%2bENXIKnVaIO7Hs9duolv7%2bO5R6/A4f%2b1m%2beb2hBG0EtI6OG3sHqJbe837ceT2dvnmDr4fr9/eKd6819yJN/fizZ2DxvZh/d4esX%2bcv36jfGencne7cvc%2bdn%2b/kMllMtk6hrcJ/OjoNHFyks4WO0At4vggnsrkKKrXbDbJFtki2qIg9wUptn//QLx6kz2uDBEsLFaWTXKB4l6uGBSRVaO1wtsgmMm0lS6smmTEUU0tLFWtVM7PlwfFip8vgWxnCstGKyzVoNLJFMxEJihWJ1U0LCKDEhIWq2OkHqlli2GpYpymg2IF%2boYlxC9UBvmKj6DB%2b7cU2Feit%2bPo9VeSJNM0VVV3Hdc0DE0zJpNJGA6hdKPHYGs8ntB9Pna0u28m0pK7knWt3ouOD6PxMIEgNY47g4kRCb5X6jKT5dkO3ugJKQzbL5QyGJZvNstU%2byCbPanWxouVZGmpBnZQyJ1UqkflWoFoVrq9Ekm2BD6P48V2u0gQx%2bXCcaUeLyMprNnkuXq/X26T1T67IrtLVX94TvgI1CTasZs37qjXbqnbR0EyE6byKwSd5cvuSWpaQFblGlybw0xxnM1PchWQI4alSuac46QTT3onKe845ScyTjwBXRbl2iidHwAyp5kwmRsks%2b5x0jo8hWGDRBr0x9nSMJ2HGhBgBD%2bRneRKo0xxkMgM4ee29pe6uVy7/vIhrR4IDx8D1g/X0U6MNmL3dvfJWn336lUea0DyWHn%2bTNe6ZUQiO0vbWbm%2b1OqKTayPEnPLWTkOKChtmq1jnTICJYc1uGaznS9SZWRmOh7bp0qVfh1j640u3HaaTchSBtVjarVAMVbBYOn5q0G48oNVEMInjLby/TMB%2bGM%2bumA4GXvtjR9Gf%2bGazT76lhi99//yO/0Dil63l2etizWvzpU/WzrbyG7diX3xS18xDOMzf3L6bdMmPp9%2b9mLsS1/%2bOwj2z6kBzzz3fOxvvvK3xufWgGcvPh/74pc/xwZcePrZ2Je%2b8tXPrws9%2bdQzsSvvXXcc53NnwNlhbut%2brIoRYMCv/BH8c0EAQgN24lIVC4Lgc4pAg%2bjEyrXGW2%2b/853vfPfy5Vdfe%2b21S5cuX7p8ORIuA23Ky%2bvy1UsRRUqvvvrq2ee66f%2bLv3fp0p3tvVi5jv/BH/5RLBb7AtBjX4id02OPPRb73%2bgLv/f7sd/Q9LukzfRe%2bs/vxBAUf/37bzxz8fmLzwO98MILLwK/%2bOK/P/fscxcuXHj66WdeeP7iUxeegqZvfPObFy8%2b/9xzoPTi8xdfAPnJJy8AP/HEkxvhAV%2b48NRzz0H3p36l/rPlxx9/4oNbd8GAZhPDCltbmigJLCdwvCqKIscFbnQjW0xnrj2ejqdcr9tqtGRR1CVJYPoCyyqivHHGxXy%2b2tz01sK611To94fD0Zm3zufR3er8Ge4z4eX6hSE6zKF4%2b2B398rjT9RKla3bd/Z27yeOT4727qdTGc8yNVHE0Haf7h8f7BeypVIue3J4cHR/f%2bfu3eRJwlBVW9d1RYZ7h6EoUNqaBjUKz50eHfF91jF0U1E0SdbXrcCWpgE/Km8%2bo%2b6KspaVzVCWpm7U4NM4677%2bCV3fdFElsVLDYul8WbNcyXQsb2AHQycY2n5ouQNeUhle7nESL8HNTRYUg1d0XtLovtDjxOhTUiEJ5IpIFcU7NNskOqUqCgyVoCBrJivIJMUwnAgC1WOhI9Gh0SYJ3OrQZJeBmyMsYfS/4nosJyqgCfU9VgAZrlogt7sMCKyo9FgRhoIRoLKE1OuNFtXj%2boKSLpT/Bx6KMWHKm/xLAAAAAElFTkSuQmCC' /%3e%3c/svg%3e\" width=\"578\" alt=\"Fiddler Content Security Policy Violation\" data-srcset=\"/assets/static/Fiddler-Content-Security-Policy-Violation.0de0a14.0f077ec0300d8d4d9ef9ffe62373f591.png 578w\" data-sizes=\"(max-width: 578px) 100vw, 578px\" data-src=\"/assets/static/Fiddler-Content-Security-Policy-Violation.0de0a14.0f077ec0300d8d4d9ef9ffe62373f591.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/Fiddler-Content-Security-Policy-Violation.0de0a14.0f077ec0300d8d4d9ef9ffe62373f591.png\" width=\"578\" alt=\"Fiddler Content Security Policy Violation\"></noscript></p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 578 505' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-1a4b7491232e3f8b6d93a232b355038e'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-1a4b7491232e3f8b6d93a232b355038e)' width='578' height='505' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAA4CAIAAADCemklAAAACXBIWXMAAAsSAAALEgHS3X78AAAWaklEQVRo3tV6aa8c2XVYS0j%2bToAgvyBAkAUIYiMxHNsBEudTgnwwrJmRRuRQ9siaWEpIjhZLiZ2ZkYaziBSHOx/f2vvrfauq7q7eauna933rvSunut/j0JIceESOAx8e3Hfq3nNv33PPequY%2bvYPfvzB/cO7n2U%2bvH/25w%2be/Nkv7t8rlOsdvFLHOn0S6RGlGlJuYK0ugQ7oagsvVJBcpVtuTY5zzUeHxScn5ScnlcNss9gcZyv9Qn183iQKjXG%2bMclDW3%2bBqE%2bg/xITOlcbZip4ptzPlPrQwvRcpZ%2bv9Qu1/nljUKxi55Vmpztso/1aE8kWKpVaq/Xzjwbv/UX5558itz7ov/%2bTh5/eTl29c/8PC9f%2bonXr9rPDd96/fePWJx89eIjg4wcPnpykC2W0XzgvP3maqVewXLZ5ls7kqygtB7QUjlmrT2o4ZWBjqUtolBSRYpC00oyQIkIMJ%2bKckJcTMZoIzzsjUp4DMeb9LmWhhN6jDHxq4VMbpy3AwdQaTq3R1CR4Z8Joh6fF00z5NFs7Tpd%2bfvfg%2bDife%2b2/IH/wz46/c7Xyx39Y%2bf1/Xrz/MPW1Wz//j49%2b9EdPbt14dvLt2/ffuXv/F/kSqxgYTvZH0yEx7Pb7bQxvNUpPn56c5tqlJt/sS0PWbk48lPJJkEQICTEgBI8UvTHvTJWQ4N2REI5ostk675HKkHULiFDEZJzSseZwRBu1LnNWbB6la6elLjZRyijVGgidkVDFqBbOISOx2hVLCJerE5liq1JrN9BxvdUuN3rdJjbpoFQHIToogeH4kE5d//DjXLX96DiXqTXK/f6TYqnQaI%2bJKc3wCIaPhxiGoSzHD3Ckg2LDMV%2bp412cRnvDfA1voOSE5rsDqo0MAIeT6ZjkGi0smzuvtfB2u95plZotbDBhy03803uH2Xy5UarhA7KF9NpgGfgE7Y1HkynaH/dH1HBCww/iCcH0hxQs2x9zWH84IUiK4UcjHIamosEq1h4FzW73yNSffvQpy5BHD5%2bWCqXFYpE/TX92526njRq69vTx47PDo7t3H2qmKXB89vjo7OwsfXYWhH4PRQ6fPEqfnUiKyjP0wcMHtz%2b93ai2FotZ7uwkfXI6Hg7PTs4Kueyjz%2b7THK8q0sHB03qt3GjW7z98kj49OTo4%2bOzh4%2bFwFAa%2b6zqe6yat5wK6jg3ouU5CuI5jA1gwvBuxXkSsP05d/eS2oGiirAZBEM1CVVXCaLZer%2baLhaqqjuPMZ7P5fG4B6Jbvh2EU7YYUTfU8bzFfzMMoNEwT2Bwb/gWmtYxm89V6PdtDNPN92KLH84JpWbMosmwbFoGNSpIchuFytYL1I4DZDPYAPwDrL5er3c8m1GK5WK1WURR6nh%2b8ACDrmKBTb976GJFmDXmj2EEW1zhBbVar4zHZRVDH9UzLzOXykizBcm226fpmD%2b2JkhzH8Xc//tn7D97jSKbXxSmSGg0nsNsOwjSrz8Z4v9NCFUXBEZSccuvNxjF0kqQIgpQVVZVFvIfD6XAcC1JNSVKQZMuy4TyKxeLR0eGUpobDoSiInVZrSk4BxpOxZTvb7RYkWV/CcrkkqGnqO7dvD1ilMRF1065gU3zC1ErFw8OT7NkZ0u2LopjP5zmWtQyjPqxoutyq17u9/ixcffDshz998C45JM6L59lMplAoybLa7eK17HdHOFbMF1vNZj6dabQQ23FFlilXKs8ODnP58x7aOS%2bW2%2b1OBmYVz8/PMtV6k2Y4XdPARB8/fkyQZOX8vANuOhnXSpVqtZYvFEh6CpoEYwKjAHMyTfPo6KjVQVNHmQeyLLq2DfMdy7BME1S3SLQ3B%2bPjJMX2fMv1SEGx3VAzLUmHuaamqi4YquUA7fk%2baBn4DUOHHwADdBLLTWwXfgl6gFk3DGcHsD4YI4xZYMSOmxidmxi5YRjJspqqaZq9A9M07IQTOIDFMQ0DlKZdAqgXDqjZRlK1ygGojKBZsIr1No6CsFlrNFtoPncOmrXXcaaKZcqto0ItXa43IBAu4%2bVqs90m7XK1hlmKLGcyxXqtGS1WDCPnsmlZs5PV1psEE94YGiD2uHmhTXDHs9kCT7xNIN7sRmFKMutykWQ0/msIMJqQqVLxAUORqqKCL7qebxoW2B8%2b6PZ6XUlWplZUo8QaMa2MySw6Lk8Uwl74oQeBaDb3w8gHFwXljUb9yWQIimI5AcO64EieH9qO77hfIrquj/UHqXLuzphRcDEU1dlysTuRVczSsaLFcA7L9ZpX4jEVj%2bh4sY3h6BebjSSvRH41HKx4bsUxK47b0GTMTOP5fD2fgZ/tJi6WK4gvfxOuknb9uUP%2bJrDZbAbDcere4T18KiOCx4gQzhK9RMG2VotHRLyHERmzbDwmwSQSHUPPhIpbnbjajNtI3O3G/WFcrsSNVjybx7YTr7bx3xlMSDr1vx89VlltzhsmZyxnm8R25yutJ7ucs2fyBNcay8ZIAwH2ewuUADrNkeILNqDLWXpPNIYK2Gmo%2byZlOpyza21tqFmM7fKOQVoOY9usY5G6QZhzZ%2bawzjJaJcu9hMAQmlJ3nh5osjmzfG1qLKPEKVfRUkZki7kQwOZ8T3Rs3t%2bCdDsRTNoRW6LQkSREVlBFHxtSR5a76nq19RVfxTW1r8qorA11GZXEtqT2FXiUEYmtCWpXhh6HtWGFmTt/SQFG40nqk6MjmdM83lBIdbETYD1big0BzmzPZJC22pUkVElM6EIkz5gYYluE1iQMfaLzNR62tVltQ81XBxocP8hgkqbSU5S%2bZkx0k7YSZtIwSNOiTCkRWw%2b1QMHURbD8jcUYjsap//Sjn0iCOtMdR3HWy%2b3ehGAHnhrsmQI9WvhQJ8y3l9HLFX19qMMODAIEMB3eBTGsqb0TILAZ26Is2D30WHuaNoETLAeUoPRVkE3pqSquurwrd%2bS5t/iNBYByM/Wv3vkuT2se44tjeREmRrkKF2yBUQb6nknBdanFC015femeOmHJmMKUWQmVFLANTJpmKbbEJiYkuaAKOHipI0Ird2W2yoH1J85AJ8lhu32VPt4BAX7ru%2b8KDB6IBU9z1osLDTi0HWjhnmkOzmYFgR4%2b10Ckz1zacRjX531f8HwlAH6Xczfr7cyMPMELpNBlHF8KgcFjkkdgi9RoJ8Bujb0UQO/z0xeH/UHUW0jqx58dscTTdvH7faYbbBKvmq/Dplwf2eSedWDSAx3pqPhycyHBxGb7Zr8kVlAd6%2bs9oMtiqS43IUUoPo/oPUxDER3p6V1UwxCt3VaRnjnEjaHsin2pS1sspY/G%2bvRlzn4vdQPppz46OBenZazyfziZWcVJGF2u54LNm6F94bKRb0G9HNrPT8qZ%2bbqvq55uBaYdWkZoiLYguzJkfjeyVU8zfEPzNd033JlrQH0dWlboKJ4eLnwtMCLQaKhrofVy5pNsp9PFUu98BBo4aRf%2bV3uCRJvEn%2baLoM5UhxqxD5oDlZqoPUweQFaOk1AajzS6zbeK9HmLbyFCpy/3yvR5nWksVmvZ4doC2mKbTa7e4lpVpt4RWiMdbpqs4Eqqr/IWhUj95Wbzkta/N6Hzein17Q8finwVqf%2bYMbjFXgPbpTTXrfWFD7jruba09KX3uQZWM33lKgvbXPnWygNanhvKwgIGdxWoS0dbOvoy6ZTnpr6wvbk3W0XQmqFlRyYoYf0KBEjaFjjxH/3ofTb/cffOdapUmJFEPBXmk2E194tBIxtDiTrl8XqBap31apklOY1pJmaEQT1bz9/Nnn1cL37WPn%2bEVQ4K6U8q%2bc8WBK11a83Sk/b541rxbrfyrJl/UG897WkDxZMbXCNH5dJkriejiIjKgbV345fxgXa3l/rt169xH/3l8N7bdru5oaYxXKBIwsbqwQDbwnZpLsS7Qa8Z4tiWYhORaHZJkNF4tCDI2Xjo4ZiPY8Ds95Etzc1HfbfX8vodwHDQi4jx7ORsGQWLzWKxWszgnriaLdfLEAL2ZpfYL0Lb/s/2iwiwi0IIkvrP//WP5eNHGvuhpuCzRZK8VquQps5Mh92vJ%2bukriOi0t9sf9kEZzMdMrBuTlQNE6QOZGrHnXJCfcoUJRUTpfZ8O49rnW0YvvIybr%2bXeqeb%2bjdf/xPhw5vW3Svm6cmiXIsrrXWpKp8%2bNbPpuNKERzuXl0%2bfiKeH63Ljoiebd7Jp4fixlTmzMidG5lg4fiSdHmzKjSCX0dMndubUTB/rZ8%2bAIUifeZGz3KzsyJY9RfEVKOTmq6Scg7JDC8xgEQANoQmcZL3dfCEnLjXQ1L985yZJ5c4znzRGcGC7KLQK22KbsJg969jkOYeamOz6MgMRFocq3YbQRmSsr%2bADY9QQ6m0JhTwgewKmDjoigigYImENodNWMMKk9QA00q0wlQpT7UrYRKc6YqfB1dsCgsm9ttCZ6AQiIrP18gsJUG11U//i7etT4oRGvq9ZihJoiQmt56RByr66Z1V9k7XoqcVdVtOxGbkQ%2bxmb1QPdCHTFl4F/ajFgY05k8q4InRAxOZsTE9oUXUkLNDhmb%2bZGy1mS7DefZ%2bDN7tT3t8gvXErgdOqfXvtzapItnt3CqQHjJDfjxSrsSd2pze%2bZGFtWXI6zpfVlLUGZXAeOFg5PQntyd6xPUBHpyfhyvVE9CVeHbb4NxwmhBtqugkPS6Mm9OtfAoVL1tP35vVgTXVyUvjg0e1Tqv13/K5Y8HtRvSrpgz93tTgNDZcA54p6JtaWJPhhqk9WlF8ueITjCUBtxDi86PGMzfbk/VEdgY1aokQbNOzxrs1OTnugjwqBBG6AENlGIRJtTMzSg5PMW0csnssN8PfXDn91nyULx7H2CGeuRmbxuWM8IfSJ6ysV2fdOdQb3gbC41wDvyUB0M1OFYGxE6ATub6GPKpCC/moFGW8xAAYEHhEGJDofJ%2bNSa8g6Hy3hX7k0MErREwZ1oHrzMZWYvwJ1n2dS7H9yDUoJE/4pXOc7hkky8ilCxQ5kXTkwY7FDt9tXx8lIDrJ0YPSphYDykTsDuwUhQqQsq0n0ZVxOpQDbQSV/p9UCZNpcIqU1g34CyJ0ML4k1NZucK2wuIt3/7YnvPefcwl7r53h2OOi%2bdvUewoAF9J8CMNinF1y5d1jMDVfH17WUUgthHmzRtMrAz3uYl2JBBMhYLuckODc4RpuYUGDibVzxxotOSJ8GmiURUAtj0QAML3Lv4S5rQL0CAn3z0iCUOu5UfsDIreMLehFABIS41MDHYkdrtKqPn5TRtCXCcDb65t6KxPm7yDXBZYND8xImHynCgDiDC9mSsI3YTaa0p%2bMlEJ0EGMCdSJzGpTxhEI/HsEamPgRncgzDIcDn/25jWXoCHJ4XUSa7K0%2bXG%2bc9YcWrNrJ0G5ozJ6IH5PGiaSbjcl9NJY0UunKjoypCJjEBTA5W1WN4RwEmgVgOFQOUDDBJET1%2bBYGCGphWZsCYYkuQp7swxI0vc9YO7q4EOrqL4quTKoLTFevX/3vTFrWi7L6fx1FGmIlHPRtXvUwJJWOTunWHU5Bojg7q4OOvTidHvqsPPLzQGi4lYmanCqXelLgTHKlNp8q3FeqO4Air3UAGFPNUREFRq17gWOMNIG0JdjUo9TEBgqMmjROIk42i1/NVd/nrY3%2bR2geS5AMSUS6XT2dKQvvkUFXXFm/txYkILwZLM8OK1ihMFqqlqjv28BrFnvhppsqtqM8OYGVAei7YkuSrkIbjBSJ6mhJocKObc1lyNc2R7Zhu%2bxpsC6MoIdT2EKZrqy1poeEGwWa9/7UlvNpv5bLbbe5LgVov57g377rXfDoAgaC51XsjfqwivPZv1ugReqcXz5VzXsg8O0Eo7DqN4Nu9UULxeaRTqCyeIoSxbLLs1rHR4enz/yfnhafU408wXT%2b4%2byD4%2bmlu%2bMBxW04VaOl94elRN58snZ4WjbLVSPc8VS8VSpVgtlWu1UiWfzpeK1Xqllk0n7%2bWz2WwuXyqfF7KZfCaTbbSQfhc9ODhKn5xlsuc4jvcx9PjpcblSn0zIfr/X63YxtM/z4mBMph7fuuP%2b9D3m4z8LMvkwl4sb6Lpcs0%2bO/WwurrehYA3zhXk%2bPS8WofZLsIHMChXnLBfmS0Gm4J5m/EzWT2e9dGZbR2b5vH1y4p5l4DHIFualanTnYeg4ru8vFvMgCL3kI0/oefA3CAI/%2bYITzQM/eQLS97wgDBeL5XyefK2Zz%2bbJB5v5IgyDKEoSH%2bhktVwu5slSoKI22ks9%2b%2bjuvF3gmb90HIY30ERZm2giZLSA27uMaNGCjUwNfP0r5fhsYbA6onqEaGKMjgCDHTK01qSlsmD1BQ2ZbWdxE9uGUfzlANYfpn78ne%2btas3lsLmdz2PLSja2Xm8VJfaDi2DmR7GibFU9/pVaa7tebjxv6/ubwNu6blKl%2bd7WtNaOtXXslWPs3xzE0asX4CKR3XuQ%2br1//dvL9z6Mr729HQzjbi8OZ7Gmxo%2beJi%2bgXS9xgyoSNyoxXAYcP5EKMAiTdrGMGSbOFOJmKy5XE8L24143zuTig%2bOkJ1uMdSsu1eIvQQOb3a36G9%2b8mvq93/q36q3bk5/esp4ehYUKGP2m1rIzBb9Q3iZGj/iFipXOmeni5sIHOlGhOi9WwQ2ifHmWLwf5c%2bvpsX2W31Tby2IlypVmufNZvjRLF%2baFcpQpLBeLMALLXr1yAd688lbqd//gP/Ro6uS8KFumpBu7%2b8CKlSTNcfdqUmzP8h143Fy%2bDJANi%2bI5guVoQWAkSTA0CghZXsF9wHfH0yklCrQojlmOlUXJNFVVoyjaD2ev8NXiXoBvXn0r9e9%2b598belICQViNdx%2bo4j2x44pffP%2bxf9yPbi/z8nM6vvi4Ff/1Sv8FhldvQm9845up3/nd39f3Amy3vyZrPy9LfnUTz/PhC7XL9oVsekF8nkFfvQCvf/3N1K1Pbtu2/WX8xpcKF8Xc42epNoaDAL/0EfzvBYASuvgoVW9jkAf/nmqgi49TjU73/Q9%2b%2br3v/Y8bN26%2b%2b%2b6716/fuH7jRkLcANi3N3btzesJJEw3b968eNwN/f/C/3n9%2boMnh6kG0v9H//ifpFKprwJ85aupS/jKV76S%2bnXw1X/wD1N/w9DfJey39%2b3//r1UC%2b1//wc/fPPqW1ffArh27dq3AL/1rT%2b58s0rb7zxxje%2b8ea1t65%2b/Y2vw9Cfvv321atvXbkCTN966%2bo1oF9//Q3A1157fU98jm%2b8ceXKFZj1y/2vFL/2tdfu3HsIAvR6GFZ9/FgVRJ5heZZTBEFgWd9JapvNcuVYUGEvWYoYdAeSIGiiyNNTnmFkQdobY1LQJ0V78pF/H203qxVLkWEQXlgrFFfPs8crwu3uDUNSzKH90fHBwa2vvdapNx/ff3B48CyXzpwePisWzl3TUAUBQ0dTcpo%2bPqqW6vVyKXNyfPrs6OnDh/lMTlcUS9M0WTIURZdlaC1VhR6ZY9MnxwxF27pmyLIqStpuFBDSMuCL9P4xmS7LO1reL2Wqyp4NHvWL6buf0LT9FEUUmh0sVaw0VNMRDdt0A8uPbD%2byvNB0Ak5UaE6iWJETpSkv8bLOyRonquSUp1gheRQVCALlWquN9sck08PH9TYKCATFCJJqMrw0nNA0KwAxoRiYiI9JtDcEhIvIkKCx/giOMPlfcRTDCjJwQj/F8ECTUw7oEUEDwQgyLAhLwQrQWW8hSHcwodgpLxerjf8LaycamM8sZLIAAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"578\" alt=\"Fiddler No Content Security Policy Applied\" data-srcset=\"/assets/static/Fiddler-No-Content-Security-Policy-Applied.0de0a14.ef674b051939945de22a4981d2cb91b7.png 578w\" data-sizes=\"(max-width: 578px) 100vw, 578px\" data-src=\"/assets/static/Fiddler-No-Content-Security-Policy-Applied.0de0a14.ef674b051939945de22a4981d2cb91b7.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/Fiddler-No-Content-Security-Policy-Applied.0de0a14.ef674b051939945de22a4981d2cb91b7.png\" width=\"578\" alt=\"Fiddler No Content Security Policy Applied\"></noscript></p>\n<h2 id=\"content-security-policy-directives\"><a href=\"#content-security-policy-directives\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Content Security Policy Directives</h2>\n<p>There are a number of 'directives' that are used in the policy above. Mozilla has the full list of directives and how each is used <a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/CSP/CSP_policy_directives\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>. Each directive controls access to a particular function in a web browser. I will not cover each one in details as they all work in the same way but I will cover the most important and unique directives below.</p>\n<h3 id=\"the-default-src-directive\"><a href=\"#the-default-src-directive\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The default-src Directive</h3>\n<p>The <code class=\"language-text\">default-src</code> directive lets us apply some default restrictions. For example if I specified the following CSP policy, it would allow all types of content from my sites domain, as well as TrustedSite.com.</p>\n<div class=\"line-highlight\" data-language=\"http\"><pre class=\"language-http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Content-Security-Policy:</span> default-src 'self' TrustedSite.com</code></pre></div>\n<p>Now the above policy is pretty loose, it tells a browser it can load frames, Ajax requests, Web Sockets, fonts, images, audio, video, plug-ins, scripts and styles from both of those domains. It may well be that you don't use most of the things on that list. A much better policy would be to block everything by default and then only allow certain resources that you actually use as shown below.</p>\n<div class=\"line-highlight\" data-language=\"http\"><pre class=\"language-http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Content-Security-Policy:</span> default-src 'none'; \n                         script-src TrustedSite.com; \n                         style-src 'self'; \n                         img-src 'self'; \n                         font-src 'self'; \n                         connect-src 'self'; \n                         form-action 'self'</code></pre></div>\n<p>You can see that <code class=\"language-text\">default-src</code> has been set to <code class=\"language-text\">none</code> which blocks everything by default. Then we add other directives that allow, scripts from TrustedSite.com and styles, images, fonts, Ajax request and form submissions to my sites domain. This is a lot more secure and restrictive but it does require you to think more carefully about your policy.</p>\n<h3 id=\"the-report-uri-directive\"><a href=\"#the-report-uri-directive\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The report-uri Directive</h3>\n<p>The <code class=\"language-text\">report-uri</code> directive is another special instruction. It gives the web browser a URL where it can post details of any violations to a CSP policy in JSON format. This is vitally important and allows us to find out about anyone trying to hack our site but probably much more likely, it allows us to find out about any resources that we have accidentally blocked because our policy was too restrictive and we did not do enough testing. In the example below, we are telling the browser to post CSP violation errors in JSON format to <code class=\"language-text\">WebResource.axd?cspReport=true</code>.</p>\n<div class=\"line-highlight\" data-language=\"http\"><pre class=\"language-http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Content-Security-Policy:</span> default-src 'self'; report-uri /WebResource.axd?cspReport=true</code></pre></div>\n<p>If we take the evil script above and try to add it to our page with the above CSP policy, we get a CSP violation error and you can see the JSON sent to us by the Chrome browser below. Please do note that different browsers do sent errors which are slightly different. Some browsers and indeed versions of browsers give more information than others.</p>\n<div class=\"line-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"csp-report\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"document-uri\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://localhost:8080/\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"referrer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"violated-directive\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"default-src 'self'\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"effective-directive\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"script-src\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"original-policy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"default-src 'self';report-uri /WebResource.axd?cspReport=true\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"blocked-uri\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://evil.com\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"status-code\"</span><span class=\"token operator\">:</span> <span class=\"token number\">200</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"the-style-src-directive\"><a href=\"#the-style-src-directive\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The style-src Directive</h3>\n<p>As I've mentioned before in-line styles are not allowed when using CSP because there is a risk that an attacker could inject in-line styles into a compromised page. All styles must be referenced from external CSS files as shown below.</p>\n<div class=\"line-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/Site.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></code></pre></div>\n<div class=\"line-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span>\n    p {\n        font-size:12pt;\n    }\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>There is an extension to this directive which allows inline styles but you should avoid it as it is unsafe. Indeed the setting you have to pass to the <code class=\"language-text\">style-src</code> directive is called <code class=\"language-text\">unsafe-inline</code>.</p>\n<div class=\"line-highlight\" data-language=\"http\"><pre class=\"language-http\"><code class=\"language-http\">style-src 'self' 'unsafe-inline'</code></pre></div>\n<h3 id=\"the-script-src-directive\"><a href=\"#the-script-src-directive\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The script-src Directive</h3>\n<p>Just like the <code class=\"language-text\">style-src</code> directive, <code class=\"language-text\">script-src</code> directive causes inline scripts to be blocked by default due to the risk of XSS attacks. Apart from inline scripts the JavaScript <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">eval()</a> function is also blocked by default.</p>\n<p>Also just like the <code class=\"language-text\">script-src</code> directive, there is a way to enable inline scripts too which is also called <code class=\"language-text\">unsafe-inline</code>. There is also another extension called <code class=\"language-text\">unsafe-eval</code>, which allows access to the <code class=\"language-text\">eval</code> function. Once again these should be avoided and I have covered them here only because you should be wary of those who tell you to use them.</p>\n<div class=\"line-highlight\" data-language=\"http\"><pre class=\"language-http\"><code class=\"language-http\">script-src 'self' 'unsafe-inline' 'unsafe-eval'</code></pre></div>\n<h2 id=\"the-content-security-policy-report-only-http-header\"><a href=\"#the-content-security-policy-report-only-http-header\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Content-Security-Policy-Report-Only HTTP Header</h2>\n<p>CSP can be a pretty dangerous HTTP header if you have misconfigured it. Imagine a user visiting a site and wanting to view a YouTube video on your site but your CSP policy has blocked the video and all they see is a blank space where the video should be and no indication that something is wrong, unless they are clever enough to use the browser developer tools. That's a pretty poor user experience.</p>\n<p>To combat this problem the W3C created the <code class=\"language-text\">Content-Security-Policy-Report-Only</code> HTTP header. This works just the same as <code class=\"language-text\">Content-Security-Policy</code> but it only reports violations of your policy and does not cause the browser to actually block anything.</p>\n<h1 id=\"csp-for-aspnet-mvc\"><a href=\"#csp-for-aspnet-mvc\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSP for ASP.NET MVC</h1>\n<p>So you're sold on CSP and want to know how you can implement this great new HTTP header on your ASP.NET MVC website. Well, to get started all you need to do is install the <a href=\"https://www.nuget.org/packages/NWebsec.Mvc/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NWebsec.Mvc</a> NuGet package.</p>\n<p><a href=\"https://github.com/NWebsec/NWebsec\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NWebsec</a> is a great collection of MVC filters which can be applied globally to all requests or to individual controllers or actions. NWebSec contains a series of MVC filters to support CSP but includes several other filters which I've already blogged about <a href=\"/nwebsec-asp-net-mvc-security-through-http-headers/\">here</a>.</p>\n<p>Here is the CSP policy I have applied to the <a href=\"https://visualstudiogallery.msdn.microsoft.com/6cf50a48-fc1e-4eaf-9e82-0b2a6705ca7d\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ASP.NET Core Boilerplate</a> site and the code which is used to create it. This policy is applied to all responses from the site.</p>\n<div class=\"line-highlight\" data-language=\"http\"><pre class=\"language-http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Content-Security-Policy:</span> default-src 'none';\n                         script-src 'self' ajax.googleapis.com ajax.aspnetcdn.com;\n                         style-src 'self' 'unsafe-inline';\n                         img-src 'self';\n                         font-src 'self';\n                         connect-src 'self';\n                         form-action 'self';\n                         report-uri /WebResource.axd?cspReport=true</code></pre></div>\n<div class=\"line-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token comment\">// Content-Security-Policy - Add the Content-Security-Policy HTTP header to enable Content-Security-Policy.</span>\nGlobalFilters<span class=\"token punctuation\">.</span>Filters<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">CspAttribute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// OR</span>\n<span class=\"token comment\">// Content-Security-Policy-Report-Only - Add the Content-Security-Policy-Report-Only HTTP header to enable logging of </span>\n<span class=\"token comment\">//      violations without blocking them. This is good for testing CSP without enabling it.</span>\n<span class=\"token comment\">//      To make use of this attribute, rename all the attributes below to their ReportOnlyAttribute versions e.g. CspDefaultSrcAttribute </span>\n<span class=\"token comment\">//      becomes CspDefaultSrcReportOnlyAttribute.</span>\n<span class=\"token comment\">// GlobalFilters.Filters.Add(new CspReportOnlyAttribute());</span>\n\n<span class=\"token comment\">// default-src - Sets a default source list for a number of directives. If the other directives below are not used </span>\n<span class=\"token comment\">//               then this is the default setting.</span>\nfilters<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">CspDefaultSrcAttribute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Disallow everything from the same domain by default.</span>\n        None <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Allow everything from the same domain by default.</span>\n        <span class=\"token comment\">// Self = true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// connect-src - This directive restricts which URIs the protected resource can load using script interfaces </span>\n<span class=\"token comment\">//               (Ajax Calls and Web Sockets).</span>\nfilters<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">CspConnectSrcAttribute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Allow AJAX and Web Sockets to example.com.</span>\n        <span class=\"token comment\">// CustomSources = \"example.com\",</span>\n        <span class=\"token comment\">// Allow all AJAX and Web Sockets calls from the same domain.</span>\n        Self <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// font-src - This directive restricts from where the protected resource can load fonts.</span>\nfilters<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">CspFontSrcAttribute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Allow fonts from example.com.</span>\n        <span class=\"token comment\">// CustomSources = \"example.com\",</span>\n        <span class=\"token comment\">// Allow all fonts from the same domain.</span>\n        Self <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// form-action - This directive restricts which URLs can be used as the action of HTML form elements.</span>\nfilters<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">CspFormActionAttribute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Allow forms to post back to example.com.</span>\n        <span class=\"token comment\">// CustomSources = \"example.com\",</span>\n        <span class=\"token comment\">// Allow forms to post back to the same domain.</span>\n        Self <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// img-src - This directive restricts from where the protected resource can load images.</span>\nfilters<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">CspImgSrcAttribute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Allow images from example.com.</span>\n        <span class=\"token comment\">// CustomSources = \"example.com\",</span>\n        <span class=\"token comment\">// Allow images from the same domain.</span>\n        Self <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// script-src - This directive restricts which scripts the protected resource can execute. </span>\n<span class=\"token comment\">//              The directive also controls other resources, such as XSLT style sheets, which can cause the user agent to execute script.</span>\nfilters<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">CspScriptSrcAttribute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Allow scripts from the CDN's.</span>\n        CustomSources <span class=\"token operator\">=</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ajax.googleapis.com ajax.aspnetcdn.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Allow scripts from the same domain.</span>\n        Self <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Allow the use of the eval() method to create code from strings. This is unsafe and can open your site up to XSS vulnerabilities.</span>\n        <span class=\"token comment\">// UnsafeEval = true,</span>\n        <span class=\"token comment\">// Allow inline JavaScript, this is unsafe and can open your site up to XSS vulnerabilities.</span>\n        <span class=\"token comment\">// UnsafeInline = true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// style-src - This directive restricts which styles the user applies to the protected resource.</span>\nfilters<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">CspStyleSrcAttribute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Allow CSS from example.com</span>\n        <span class=\"token comment\">// CustomSources = \"example.com\",</span>\n        <span class=\"token comment\">// Allow CSS from the same domain.</span>\n        Self <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// Allow inline CSS, this is unsafe and can open your site up to XSS vulnerabilities.</span>\n        <span class=\"token comment\">// Note: This is currently enable because Modernizr does not support CSP and includes inline styles</span>\n        <span class=\"token comment\">// in its JavaScript files. This is a security hold. If you don't want to use Modernizr, </span>\n        <span class=\"token comment\">// be sure to disable unsafe inline styles. For more information see:</span>\n        <span class=\"token comment\">// http://stackoverflow.com/questions/26532234/modernizr-causes-content-security-policy-csp-violation-errors</span>\n        <span class=\"token comment\">// https://github.com/Modernizr/Modernizr/pull/1263</span>\n        UnsafeInline <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Notice how there is one MVC filter for each CSP directive. This is actually a very elegant solution. Consider the fact that you may want the actions in a particular controller to be able to display YouTube videos, note that YouTube makes use of iFrames to embed videos and it's embed mark-up is shown below.</p>\n<div class=\"line-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>iframe</span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>560<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>315<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://www.youtube-nocookie.com/embed/PGM_uBy99GA<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">frameborder</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">allow</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>accelerometer; encrypted-media; gyroscope; picture-in-picture<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">allowfullscreen</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>iframe</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>With the above CSP policy, the Chrome browser throws the following error.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1008 382' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-ccf7ef618fe44f3c81b66ef92160d59d'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-ccf7ef618fe44f3c81b66ef92160d59d)' width='1008' height='382' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAIAAADF1mwTAAAACXBIWXMAAAsSAAALEgHS3X78AAAJSUlEQVRYw81X%2bXNT1xXWPwC/MQPU0BnbgDdsMDYTAs100plOfymTlhbwBjFMpwvY2DKynUCBlFBcIHTa0lAIMMWkQJpxYuRFNjbGkiVbkmVr3619e9qt1bKxpH5PDwQhDviHTpJPR3e%2bd%2b45991zz90e7a361p2HT/6s8c%2b76t976/D7Pzr0TA6foGRnffuOg21bq%2bhl%2b5or6xhvHGz79mXnu%2b0/rmdUMTrsNpvBYJzR670eT8DrYfOnaFtrWumnO94/8ccJsXyIJ3w0IRoVTLMF0xyBmMOfGhFMSTVG3pSi5sRf3z3z8ba69h/uPpL3y8bcX3zbkv/O0aK9zbubz%2b%2bmd6B8p%2bUve1ov/fQPH9BO/uOWVqkY6u%2bZi8dnZ2cj4VAsFo1HI36Px0s4/QH/fCKRTi6yxgR///SL0x/fOXL%2bakPHdyBHO/519PzV33545Xfn/kn/262GC9cbLnxy8ORFGpvL1uv1kWjM7fGASKVStVotkUjCkajH53W4HHqd2mAyuhwuj5vwez3J5JP0d4fEXDQRiZ49ec1islgMOt4El8Yc7NfpdCYzFBYQrVaLABQKBUEQLpfLbLGYTIZMaXa6XA6n0%2bfzBwPBACQImQ1QHH%2bkLxRCGZwNzZIyS2n8gcDyJdPmq8Rmd2AZ3LrRzR0Xoaus4SFa/1Cf2WhRqWRqtVKlVKLrMzM6qQJEqdEo1CqlXEFqVWqlXK6Qy2QqjVoqlUmnJRKpWCwVy2Ry8ZREP6OZFon4QuG0eGpyUiASTQoEIrlMPC0W2%2b0Oj8fjXgYwXvbXwel0OhyOUBix%2bkOzoSH2I1pTe0vrcUZTUxOd3kKn05uamoGmZnpzM72lpaU5Azr5IzUMBqO1tQ02LS3HSTAYbW1tjOOMVkZrY2Pj0aMNx47Bv6mhoSHDjzU0NsLjvWWgvb399Okzly9f/ojE5YsXLy0pFy5cQO1Hly63HGfc6bwzLuLTtr25PecHOeXl5WVlZcUlJZUVFYWFhZtJlBQWFpWXb4W%2bpGRzaWnZ1q1b1gHr1%2b/ctauwsKCgoDAvL2/t2rV5efm5uXlQFBcV5efnrVmzpqi4uKy0tGDTJjSVm5ubk5Oz9pVAqytXrsToIA%2bYwJjJVquNHOqloFDIUdbW1v5qz54xwTitfEdFTs66ysrKzSUlxSWbK7Zt27BhQ2kGCKCysmL79u0VqK6ofHPHG%2bvXr4Px22//pKS4CAawXL16df6GDZvQ14IChJqfl7dq1aqi4pItW7aQmtLSjRs3LieAFStWnDp1amF%2b3mq1YvlhC5nDtvh1zM1ZLGasrUOHD%2b/%2b%2be7HPDbt0O9/c/DAwf3791dVkz%2bQmurqqgyqq8lHsqqqCuW%2bfftra%2bvqamv3/npvNYmqmpqaurq6mgyqq2vgAXLgwIGM//6MTXVtBnWvAxyPHDly7ty5DzP40wdL48yZM2fPnu3o6Kivr79%2b7Zpcq6TxxZPYniKRSOwZotFo7BsQzQAD8eJjhsRe0rzkshyEsGVlEHgdfD5fAqdTOk2ugYlpIRg2Cv/3AMHlAZZzc3Po9oRIgAyQAXi93hfjI3cpvx%2bEKrMaanhQwt73DJSSssk%2bZh2ztZQBhSWHOat8bR7Q1FwmA0sEAE9kE1EioVRaMQ0wZ6AhLxqRCAg138LhMAhGAjZQQoMSltCjHao2nrmeULVAtpeopQbyxU6jHYpTDb4ihiUC8JHpw7EaiIQjOH5wpphMppGRkRn9DI/H47A5brcH%2b4NSqXQTbhxeo6OjErFkSjTV38/S6/RQCoVCv88PY41Gg3ZwKxGLxcPDw2gK85PN5kxOTqFb6LrP65PL5dgxwcOhMHlch0IgOp0eRzF0OLAwoNBQkZAIPJ8/GBG0n0jMPw2AOzmRSqVwTUCLZJaDgStXroyPjzN7mF1dXejWvXv3%2bvr6uFwurkk4R3DKdt7pvH37NjohlohvfHIDu7LJZMTOgB6jZLFYcrns/v17AwMsuGNfR9g3b968e/cuGunu7ubz%2beAYgt7eXnDYP3jwYGBgACUCxrs6OzuhZDKZ8EUe0DGP34eQcKBTU9ftJpDPxSeLw5wR2h3mjdEpJme6d2Sye0TY/XCia5D3OUfS1z/2WR/n/rh8gCdjPRYxhya6xhUDA7zPex7/B5bDgi9ZY5%2bNSfo44t5Hwi%2bH%2bF/Aiz3dAxc8dg3%2b%2by7z%2bv2eG3CXmccm1cN85aBQM8ST97PFPWPSPoHqIfiYpJctZo5Je9nTTI64Z0I5iCooUcWV9XEkPXjjtP7xlG5E3t/JFbNYYgF6ePX2JbwIjQvVQ/8d7KT1PmIaLCqIWi9xuI0Gq9pgVZnsWotTj1JvVs5YVTqzwmjTmB06k0Nrdc3YPUaH12x1GSzgbiMsrcSMzW10QglCGMx2ncGihi9acPrMLp%2bZ8Ftcfos7YHUHbO6gjaB4EGIH8QRt0JPKIFkLDUHWkkpXxpGw6Wx4ndtmcemVOonNbVBqJYTPMioYoY3yuU4nEYlEHU6CXAy%2bgD8463J7Z0OR%2bcR8NBINhyJIHQQVbsKzsLDw/78lp/B7Rp%2bz9HPt15BMJlHKNAoad4iVNlmSdluKcKXs9nQwkPL70lZr2u/HNoKPBGo/8fp94dAs5h/OeawuzEVMTcx%2bL%2bao10sSj4fwerAgMQZoLWmzJfHx4PenAr6U1ZIym9FsyulIQeOwk2KxpJxOvDFls6Z8XpJ7PCmH4ymHPjGHuFIpdHURfcXaNZvN1LXfTRAGg%2bHJwgJ5Eo8LeelYLKnTpQyGlF5POgcCKbk8pdUuOp3zTueC379AEHGtdj4YnMcRqFQuoNTpEi7XHAxUKlxfEg7HQiSyYDQuut1pmy1tNqcVirTFQhKvNz0zk3Y606iCqNVpvZ60Qa3Pl3a5SGI0kiVBkKLTpTWatMGQfvKVLydkPnvM4xjGsGYyoKSNTZHbaApRIinIXyY1JFlcJEsqo0vok0%2br8JqsJcVhSQnl9SLP2mTnCqWHMmuJ2sUnT1%2bXXsYUGuGyE/EEJgm5KWM/xoQJRyiCEmsDucvs1%2bGv3Jdi8Sh1BYqDxClVjLwjURJ7VsZe1sAmnjGmXCgSjz%2b3Jw3i33QNywJdSi4uTkpEtJ6HfTabVaVWabQamVzGHefiwwxfWwKhgMvj4kMMH1kT/HGBkA9is9usNuv3QcxWM06DEe7o/wBRNbkSJX%2b5yQAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"1008\" alt=\"Content Security Policy Violation by YouTube iFrame\" data-srcset=\"/assets/static/Content-Security-Policy-Violation-by-YouTube-iFrame.82a2fbd.0c592309465ec8ea2c495f5c3fb08c7e.png 480w, /assets/static/Content-Security-Policy-Violation-by-YouTube-iFrame.7bb6046.0c592309465ec8ea2c495f5c3fb08c7e.png 1008w\" data-sizes=\"(max-width: 1008px) 100vw, 1008px\" data-src=\"/assets/static/Content-Security-Policy-Violation-by-YouTube-iFrame.7bb6046.0c592309465ec8ea2c495f5c3fb08c7e.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/Content-Security-Policy-Violation-by-YouTube-iFrame.7bb6046.0c592309465ec8ea2c495f5c3fb08c7e.png\" width=\"1008\" alt=\"Content Security Policy Violation by YouTube iFrame\"></noscript></p>\n<p>We need to add the <code class=\"language-text\">frame-src</code> and <code class=\"language-text\">child-src</code> directive which can be added to the specific controller. Note that the <code class=\"language-text\">child-src</code> directive is a CSP 2.0 directive and <code class=\"language-text\">frame-src</code> is deprecated in CSP 2.0 but we still need to add it for older browsers.</p>\n<div class=\"line-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token punctuation\">[</span><span class=\"token class-name\">CspChildSrc</span><span class=\"token punctuation\">(</span>CustomSources <span class=\"token operator\">=</span> <span class=\"token string\">\"*.youtube.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token class-name\">CspFrameSrcAttribute</span><span class=\"token punctuation\">(</span>CustomSources <span class=\"token operator\">=</span> <span class=\"token string\">\"*.youtube.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HomeController</span> <span class=\"token punctuation\">:</span> <span class=\"token class-name\">Controller</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Action methods ommitted.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>But what if we only want to allow a YouTube video to display for a single action rather, than all of the actions in a controller. Well its as simple as moving the attributes to the action, rather than the controller.</p>\n<div class=\"line-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HomeController</span> <span class=\"token punctuation\">:</span> <span class=\"token class-name\">Controller</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token class-name\">CspChildSrc</span><span class=\"token punctuation\">(</span>CustomSources <span class=\"token operator\">=</span> <span class=\"token string\">\"*.youtube.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">[</span><span class=\"token class-name\">CspFrameSrcAttribute</span><span class=\"token punctuation\">(</span>CustomSources <span class=\"token operator\">=</span> <span class=\"token string\">\"*.youtube.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ActionResult</span> <span class=\"token function\">Index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// This view displays a YouTube Video.</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">View</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Setting up the reporting of CSP violations is a bit more complicated. You need to add the <code class=\"language-text\">CspReportUriAttribute</code> MVC filter and add a special function in your <code class=\"language-text\">Global.asax.cs</code> file to actually handle a violation as shown below.</p>\n<div class=\"line-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">filters<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">CspReportUriAttribute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> EnableBuiltinHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Added to Global.asax.cs</span>\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">NWebsecHttpHeaderSecurityModule_CspViolationReported</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">object</span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">CspViolationReportEventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">CspViolationReport</span> violationReport <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>ViolationReport<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Log the CSP violation here.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The <code class=\"language-text\">CspViolationReport</code> is a representation of the JSON CSP violation that the browser sends you. It contains several properties, which can tell you about the blocked URL, the violated directive, the user agent and a lot more. This is your opportunity to log this data in your preferred logging framework.</p>\n<p>One final note, all of this code is available to view on GitHub <a href=\"https://github.com/Dotnet-Boxed/Templates\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a> and is part of the ASP.NET Core Boilerplate project template.</p>\n<h1 id=\"browser-support\"><a href=\"#browser-support\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Browser Support</h1>\n<p>CSP is a proper standard, you can read the W3C documentation <a href=\"http://www.w3.org/TR/CSP/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>. According to the W3C at the time of writing, CSP is at <a href=\"http://en.wikipedia.org/wiki/World_Wide_Web_Consortium#Candidate_Recommendation_.28CR.29\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Candidate Recommentation</a>, which is \"a version of the standard that is more firm than the Working Draft\" and \"The standard document may change further, but at this point, significant features are mostly locked\".</p>\n<p>If you take a look at <a href=\"http://caniuse.com/#search=CSP\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CanIUse.com</a>, you can see that FireFox 23+, Chrome 25+, Safari 7+ and Opera 15+ already support the official <code class=\"language-text\">Content-Security-Policy</code> HTTP header, while the next version of IE (Spartan or IE12, who knows what they'll name it?) will come with full support too.</p>\n<p>A number of older browser versions supported CSP using the <code class=\"language-text\">X-Content-Security-Policy</code> or <code class=\"language-text\">X-WebKit-CSP</code> HTTP header (The <code class=\"language-text\">X-</code> is commonly used to add features to browsers which are not yet finalised) but these older implementations are buggy (Their use can mean content on your site gets blocked, even though you allowed it!) and should not be used.</p>\n<h1 id=\"content-security-policy-csp-20\"><a href=\"#content-security-policy-csp-20\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Content Security Policy (CSP) 2.0</h1>\n<p>There is currently an 'Editors Draft' of <a href=\"https://w3c.github.io/webappsec/specs/content-security-policy/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CSP 2.0</a>, written by the W3C standards body. It was published on 13 November 2014.</p>\n<p>The intention of this version is to fill a few gaps and add a few new directives which allow control over web workers, embedded frames, application manifests, the HTML documents base URL, where forms can be posted and the types of plug-ins the browser can load. <a href=\"https://github.com/NWebsec/NWebsec\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NWebsec</a> supports most of these new directives already (except notably the plug-in types) and you can start using them today.</p>\n<p>As well as these changes, CSP 2.0 also tries to address the pain points in using CSP and perhaps the reason for its slow take-up so far i.e. the inability to safely use in-line CSS and JavaScript using the style and script tags in your HTML.</p>\n<p>So why would you want to use in-line styles and scripts in the first place? Well, do you use <a href=\"http://modernizr.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Modernizr</a>? Yes, well Modernizr does not work with CSP (I discuss this below). It makes use of in-line styles to test for various web browser capabilities and so requires the <code class=\"language-text\">unsafe-inline</code> directive to function. There are other libraries that also have a similar requirement. Other reasons for using in-line styles and scripts are to use CSP on an existing web application, where you don't want to spend time moving to separate script files.</p>\n<p>CSP 1.0 had the <code class=\"language-text\">unsafe-inline</code> directive which allowed the use of in-line style and script tags but it is pretty dangerous and makes CSP <strong>partially</strong> pointless. It gives attackers the ability to inject code into your site (Using another vulnerability in your site if there is one) and to pull off a Cross Site Scripting (XSS) attack. Using CSP 1.0 meant loading styles and scripts from separate CSS and JavaScript files. CSP 2.0 introduces two new ways to use in-line styles and scripts.</p>\n<h2 id=\"nonces\"><a href=\"#nonces\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Nonces</h2>\n<p>Nonces work a little like the <a href=\"http://www.asp.net/web-api/overview/security/preventing-cross-site-request-forgery-%28csrf%29-attacks\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Anti-Forgery Token</a> in ASP.NET MVC. A cryptographically random string is generated and sent to the client in the CSP HTTP header, as well as in the HTML with the style or script tag like so:</p>\n<div class=\"line-highlight\" data-language=\"http\"><pre class=\"language-http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Content-Security-Policy:</span> default-src 'self'; \n                         script-src 'self' https://example.com 'nonce-Nc3n83cnSAd3wc3Sasdfn939hc3'</code></pre></div>\n<div class=\"line-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span>\nalert(\"Blocked because the policy doesn't have 'unsafe-inline'.\")\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">nonce</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>EDNnf03nceIOfn39fn3e9h3sdfa<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\nalert(\"Still blocked because nonce is wrong.\")\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">nonce</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Nc3n83cnSAd3wc3Sasdfn939hc3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\nalert(\"Allowed because nonce is valid.\")\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>There is a problem however, web browsers that only support CSP 1.0, will not understand the nonce directive and will block the in-line script above. To resolve this issue, we combine the nonce with the <code class=\"language-text\">unsafe-inline</code> directive. CSP 1.0 web browsers will execute the in-line script as before (insecure but backwards compatible), but CSP 2.0 browsers will disregard 'unsafe-inline' when they see the nonce and only execute in-line scripts with the nonce set. This gives an upgrade path for existing sites and they can benefit from CSP 2.0 without requiring a massive rewrite to get rid of in-line styles and scripts.</p>\n<p>Nonces can be easily implemented by using the HTML helper provided by <a href=\"https://github.com/NWebsec/NWebsec\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NWebSec</a>. You can find out more about how this feature is implemented in NWebSec <a href=\"https://github.com/NWebsec/NWebsec/wiki/Configuring-Content-Security-Policy#script-and-style-nonces-through-htmlhelpers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>.</p>\n<div class=\"line-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">@Html.CspScriptNonce()</span><span class=\"token punctuation\">></span></span>document.write(\"Hello world\")<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">@Html.CspStyleNonce()</span><span class=\"token punctuation\">></span></span>\n   h1 {\n          font-size: 10em;\n        }\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>The big disadvantage with this approach is that the nonce is different for each response sent to the client. This means that you cannot cache any page using nonces. If your page is specific to a user, then you probably don't want to cache that page anyway and it doesn't matter but otherwise using nonces is not possible.</p>\n<h2 id=\"hashes\"><a href=\"#hashes\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hashes</h2>\n<p>Using hashes solves the caching problem we have with nonces. The server computes the hash of a particular style or script tags contents, and includes the base64 encoding of that value in the <code class=\"language-text\">Content-Security-Policy</code> header like so:</p>\n<div class=\"line-highlight\" data-language=\"http\"><pre class=\"language-http\"><code class=\"language-http\"><span class=\"token header-name keyword\">Content-Security-Policy:</span> script-src 'sha512-YWIzOWNiNzJjNDRlYzc4MTgwMDhmZDlkOWI0NTAyMjgyY2MyMWJlMWUyNjc1ODJlYWJhNjU5MGU4NmZmNGU3OAo='</code></pre></div>\n<div class=\"line-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span>\n\"alert('Hello, world.');\"\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>As you can see, the script itself remains unchanged and only the HTTP header changes. We can now, happily cache the page with the in-line script in it. Unfortunately, at the time of writing <a href=\"https://github.com/NWebsec/NWebsec\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NWebSec</a> does not support hashes at all. If you feel this feature is worthwhile as I do, then you can raise an issue on NWebSec's <a href=\"https://github.com/NWebsec/NWebsec/issues\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">issue list</a>.</p>\n<h1 id=\"other-csp-support\"><a href=\"#other-csp-support\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Other CSP Support</h1>\n<p>So for the reasons you've learned above, using in-line styles and scripts is not the way to go. Apart from the fact that CSP will block them, you also cannot minify and obfuscate in-line scripts very easily using ASP.NET MVC (There are ways I have looked into but they aren't very good). So moving scripts to external CSS and JavaScript files will mean you can use CSP and you might get a small performance boost. So what's the problem? Well, CSP is not currently supported in a few major libraries.</p>\n<h2 id=\"modernizr-support-for-csp\"><a href=\"#modernizr-support-for-csp\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Modernizr Support for CSP</h2>\n<p>As I've said above <a href=\"http://modernizr.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Modernizr</a> makes use of in-line styles to test for various web browser capabilities and so requires the insecure 'unsafe-inline' directive to function. There is a <a href=\"https://github.com/Modernizr/Modernizr/pull/1263\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">fix</a> for the problem but its very old and can no longer be merged into the current branch of the Modernizr code. I would fix it myself but I'm not enough of a JavaScript guru to do so. What I have done is raise <a href=\"http://stackoverflow.com/questions/26532234/modernizr-causes-content-security-policy-csp-violation-errors\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this</a> StackOverflow question which seeks to ask for a workaround or fix and to generally raise awareness.</p>\n<p>So far, I've received no responses from GitHub or StackOverflow but there is hope. <a href=\"https://angularjs.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AngularJS</a> (Another popular JavaScript library) has a <a href=\"https://docs.angularjs.org/api/ng/directive/ngCsp\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CSP compatible mode</a> which makes use of an external CSS file but is very easy to set up. There is no reason why Modernizr could not have something similar. Another alternative is if NWebSec supports hashes, we can add work out the hashes of any scripts that Modernizr is using and include these in our CSP HTTP header.</p>\n<h2 id=\"browser-link-support-for-csp\"><a href=\"#browser-link-support-for-csp\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Browser Link Support for CSP</h2>\n<p><a href=\"http://www.asp.net/visual-studio/overview/2013/using-browser-link\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Browser Link</a> is a very cool Visual Studio feature that allows you to update an MVC view while debugging and hit a refresh button to refresh any browsers using that page. Unfortunately, this handy feature is not compatible with CSP because Visual Studio adds in-line scripts to the bottom of the page you are debugging. This of course, causes CSP violation errors. A simple workaround is to either introduce the <code class=\"language-text\">unsafe-inline</code> directive while debugging or turn off browser link altogether.</p>\n<p>I have raised <a href=\"https://visualstudio.uservoice.com/forums/121579-visual-studio/suggestions/7389853-browser-link-support-for-content-security-policy\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this</a> suggestion on Visual Studio's User Voice page to get the problem fixed. I understand that this area has been changed significantly in ASP.NET Core, so it may not be needed by the time we all upgrade.</p>\n<h1 id=\"mainstream-csp-adoption\"><a href=\"#mainstream-csp-adoption\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mainstream CSP Adoption</h1>\n<p>So far, not many websites in the wild have implemented CSP. I think there are a few reasons:</p>\n<ol>\n<li>Lack of browser support (Until now).</li>\n<li>Lack of awareness by developers (Until this blog post I hope).</li>\n<li>Framework providers such as Microsoft and its ASP.NET MVC have not given developers a way to implement CSP (NWebSec has stepped in here to fill this gap).</li>\n<li>Prevalence of the use of in-line styles and scripts and unwillingness to switch to separate files (This is up to you).</li>\n<li>Lack of support for CSP from popular CSS/JavaScript libraries due to the reason above (This is the biggest problem).</li>\n<li>CSP gives us an extra layer of protection using a <a href=\"http://en.wikipedia.org/wiki/Defense_in_depth_%28computing%29\">Defence in Depth</a> strategy. Some developers don't take web security seriously enough until they get hacked.</li>\n<li>The older CSP HTTP headers (<code class=\"language-text\">X-Content-Security-Policy</code> or <code class=\"language-text\">X-WebKit-CSP</code>) were buggy or had unexpected behaviour (The <code class=\"language-text\">Content-Security-Policy</code> HTTP header no longer has this problem).</li>\n<li>Developers are not making good use of the ability to report violations to their CSP policy using the <code class=\"language-text\">report-uri</code> directive. If you find a violation, you can quickly discover if someone is attacking your site, your CSP policy is not valid or you have a bug in your site.</li>\n<li>Developers are scared of breaking their site because their CSP policy is too strict (This is often because CSP is being retrofitted to an existing spiders web of a site. If you start with CSP from the ground up, you will not have this problem).</li>\n</ol>\n<h1 id=\"csp-in-the-real-world\"><a href=\"#csp-in-the-real-world\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSP in the Real World</h1>\n<p>There is a really interesting white paper written in 2014 and titled '<a href=\"http://mweissbacher.com/publications/csp_raid.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Why is CSP Failing? Trends and Challenges in CSP Adoption</a>' which goes over these issues I listed above in a lot more depth.</p>\n<h2 id=\"who-is-using-csp\"><a href=\"#who-is-using-csp\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Who is using CSP</h2>\n<p>According to the white paper, CSP is deployed in enforcement mode on only 1% of the Alexa Top 100 sites. I believe things are about to change. All major browsers now support the CSP HTTP header, <a href=\"https://github.com/NWebsec/NWebsec\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NWebSec</a> makes it easy to add to an MVC project, this blog post tells you exactly how it works and the <a href=\"https://visualstudiogallery.msdn.microsoft.com/6cf50a48-fc1e-4eaf-9e82-0b2a6705ca7d\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ASP.NET Core Boilerplate</a> project template gives you a project template that enables CSP by default, right out of the box.</p>\n<p>There are big names using CSP right now. Go ahead and check the HTTP response headers from sites like Facebook, CNN, BBC, Google, Huffington Post, YouTube, Twitter and GitHub. Things have moved on from when the white-paper was written and CSP adoption is starting to gain traction. Read <a href=\"https://blog.twitter.com/2011/improving-browser-security-csp\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Twitter</a>'s case study, on adopting CSP.</p>\n<h2 id=\"browser-extensions-and-isps\"><a href=\"#browser-extensions-and-isps\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Browser Extensions and ISP's</h2>\n<p>Another interesting finding from the white-paper was that browser extensions and even ISP's were injecting scripts into pages, that caused CSP violation reports. CSP may break some browser extensions that inject code into the page. You may consider this a good or bad thing. From a security point of view, what you need to ask is, do you really trust any browser extension to modify your code? I don't know about you but I don't want any extensions and especially any ISP's dirty fingers in my source code.</p>\n<p>You can use SSL/TLS which will stop most ISP's from fiddling with your code but some governments get around even this! So CSP gives us some extra protection from man in the middle attacks from browser extensions and ISP's.</p>\n<h2 id=\"csp-and-advertising\"><a href=\"#csp-and-advertising\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSP and Advertising</h2>\n<p>Advertising can be a problem for CSP. Some ad providers are better than others. Some providers use resources whose locations are constantly changing which can cause CSP violation errors if your policy is too strict. CNN has adopted a novel workaround for this problem. It embeds all of its adverts into frames which show pages with no CSP restrictions or at least very liberal ones.</p>\n<h2 id=\"csp-policy-generation\"><a href=\"#csp-policy-generation\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSP Policy Generation</h2>\n<p>There are special web crawlers that have been created to crawl all of the links on your domain, in an attempt to generate a valid CSP policy automatically. <a href=\"https://github.com/Kennysan/CSPTools\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CSP Tools</a> is one such project on GitHub, which given a list of URL's can crawl the web pages and generate a CSP policy. Another approach the tool uses is to look at your CSP violation error reports and come up with rules based on these.</p>\n<p>Be careful using this approach however, it may not catch everything. The best approach is to build up your CSP policy as you build your site from the ground up and then carry out some testing to make sure you have got it right. You can set the CSP policy to report only mode, so that browsers don't actually block anything but do report CSP violation errors, once you are happy that no violations are being reported, you can apply your policy. Finally, you need to keep an eye out for CSP violation errors if they do occur and get them fixed as soon as you see them.</p>\n<h2 id=\"testing-csp-policies\"><a href=\"#testing-csp-policies\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Testing CSP Policies</h2>\n<p>The <a href=\"https://chrome.google.com/webstore/detail/csp-tester/ehmipebdmhlmikaopdfoinmcjhhfadlf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CSP Tester</a> Chrome extension is an example of a tool you can use to apply CSP policies to your site and view the effects in the browser console window.</p>\n<p>As I've mentioned before, the best way is to build CSP into your site as you build your site. You can use the <code class=\"language-text\">report-uri</code> directive to log any violations and get them fixed. You can also use the <code class=\"language-text\">Content-Security-Policy-Report-Only</code> HTTP header instead of <code class=\"language-text\">Content-Security-Policy</code>, to stop the browser from actually blocking anything if you are not confident in the level of testing you have done.</p>\n<h1 id=\"conclusions\"><a href=\"#conclusions\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conclusions</h1>\n<p>Wow, that was a long blog post. I wanted it to be as comprehensive as possible. I hope I've shown that now is the time to invest in implementing CSP and if you are developing a new site, then integrating CSP into it at an early stage will mean that you reap the benefits of a much greater level of security. The <a href=\"https://visualstudiogallery.msdn.microsoft.com/6cf50a48-fc1e-4eaf-9e82-0b2a6705ca7d\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ASP.NET Core Boilerplate</a> project template is a great place to start and will give you a working code example which tells a thousand words on its own.</p>\n"}},{"node":{"title":"NWebSec ASP.NET MVC Security Through HTTP Headers","path":"/nwebsec-asp-net-mvc-security-through-http-headers/","date":"5 February 2015","timeToRead":7,"description":"The NWebSec NuGet packages help secure your ASP.NET MVC site using HTTP headers. The ASP.NET Core Boilerplate project template configures them our of the box.","content":"<ul>\n<li><a href=\"/asp-net-mvc-boilerplate/\">ASP.NET Core Boilerplate</a></li>\n<li>\n<p>Security</p>\n<ul>\n<li><a href=\"/securing-the-aspnet-mvc-web-config/\">Securing the ASP.NET MVC Web.config (Updated)</a></li>\n<li><a href=\"/nwebsec-asp-net-mvc-security-through-http-headers/\">NWebSec ASP.NET MVC Security Through HTTP Headers</a></li>\n<li><a href=\"/content-security-policy-for-asp-net-mvc/\">Content Security Policy (CSP) for ASP.NET MVC</a></li>\n</ul>\n</li>\n<li>\n<p>Search Engine Optimization (SEO)</p>\n<ul>\n<li><a href=\"/canonical-urls-for-asp-net-mvc/\">Canonical URL's for ASP.NET MVC</a></li>\n<li><a href=\"/dynamically-generating-robots-txt-using-asp-net-mvc\">Dynamically Generating Robots.txt Using ASP.NET MVC</a></li>\n</ul>\n</li>\n<li><a href=\"/internet-favicon-madness/\">Internet Favicon Madness (Updated)</a></li>\n<li><a href=\"/building-rssatom-feeds-for-asp-net-mvc/\">Building RSS/Atom Feeds for ASP.NET MVC</a></li>\n</ul>\n<p>This series of blog posts goes through the additions made to the default ASP.NET MVC project template to build the <a href=\"https://github.com/Dotnet-Boxed/Templates\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ASP.NET Core Boilerplate</a> project template. You can create a new project using this template by installing the <a href=\"https://visualstudiogallery.msdn.microsoft.com/6cf50a48-fc1e-4eaf-9e82-0b2a6705ca7d\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Visual Studio extension</a> or visit the <a href=\"https://github.com/Dotnet-Boxed/Templates\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub</a> site to view the source code.</p>\n<h1 id=\"web-security-is-hard\"><a href=\"#web-security-is-hard\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Web Security is Hard</h1>\n<p>Security is hard at the best of times. Web security...well...it takes things to a whole new level of difficulty. It is ridiculously easy to slip up and leave holes in your sites defences.</p>\n<p>This blog post as well as the <a href=\"https://github.com/Dotnet-Boxed/Templates\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ASP.NET Core Boilerplate</a> project are not a replacement for your own knowledge but it does help in setting up some defaults to be more secure and giving you a few more tools out of the box to help secure your site.</p>\n<p>If you have some time and want to learn more about web security I highly recommend <a href=\"http://www.troyhunt.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Troy Hunt</a>'s Pluralsight course called <a href=\"http://www.pluralsight.com/courses/hack-yourself-first\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Hack yourself first</a>. Note that Pluralsight requires a paid subscription (I'm quite against posting links to paid content but this course is pretty good. You can also get a trial subscription if you're interested). <a href=\"https://www.youtube.com/watch?v=rdHD6pVG66Q\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Here</a> is a free video by Troy which covers the same topic but in a little less depth.</p>\n<p>I would also, highly recommend reading up on <a href=\"http://www.troyhunt.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Troy Hunt</a>'s blog which has extensive examples of real life websites in the wild, written by <strong>major</strong> companies getting web security <strong>horribly</strong> wrong.</p>\n<h1 id=\"nwebsec\"><a href=\"#nwebsec\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NWebSec</h1>\n<p>The <a href=\"https://github.com/NWebsec/NWebsec\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NWebSec</a> NuGet packages written by <a href=\"http://www.dotnetnoob.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">André N. Klingsheim</a> are a great way to add additional security to your ASP.NET MVC site. The <a href=\"https://github.com/Dotnet-Boxed/Templates\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ASP.NET Core Boilerplate</a> project template includes them by default.</p>\n<p>Everything is preconfigured and commented as much as possible out of the box but remember this is a project template to get you started. You still need to put the effort in to customize the site security to your own requirements and put in some time learning about what each of the security features does and how best to use it.</p>\n<h1 id=\"http-headers\"><a href=\"#http-headers\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP Headers</h1>\n<p>HTTP has been around for a very long time and so, a fairly large number of HTTP headers have been accumulated over time. Some are more useful than others but many of them are aimed at making the web more secure.</p>\n<p><a href=\"http://www.dotnetnoob.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">André N. Klingsheim</a> has a brilliant blog post called <a href=\"http://www.dotnetnoob.com/2012/09/security-through-http-response-headers.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Security through HTTP response headers</a> which is a must read and fairly comprehensive. Go on, I'll wait for you to finish reading. NWebSec provides a host of <a href=\"http://www.asp.net/mvc/overview/older-versions-1/controllers-and-routing/understanding-action-filters-cs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ActionFilterAttribute</a>'s (The rest of this post expects you to know what these are) which can be applied in three different ways:</p>\n<ol>\n<li>Applied globally, so that they apply to all HTTP request/response messages.</li>\n<li>Applied to individual controllers.</li>\n<li>Applied to individual controller actions.</li>\n</ol>\n<p>NWebSec's <a href=\"http://www.asp.net/mvc/overview/older-versions-1/controllers-and-routing/understanding-action-filters-cs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ActionFilterAttribute</a>'s add and configure specific HTTP headers. Most of them are preconfigured in <a href=\"https://github.com/Dotnet-Boxed/Templates\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ASP.NET Core Boilerplate</a> for you to apply globally but some require you to take action.</p>\n<h2 id=\"x-frame-options\"><a href=\"#x-frame-options\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>X-Frame-Options</h2>\n<p>The <code class=\"language-text\">X-Frame-Options</code> HTTP header stops click-jacking by stopping the page from opening in an iframe or only allowing it from the same origin (your domain). There are three options to choose from:</p>\n<ul>\n<li><strong>SameOrigin</strong> - Specifies that the <code class=\"language-text\">X-Frame-Options</code> header should be set in the HTTP response, instructing the browser to display the page when it is loaded in an <code class=\"language-text\">iframe</code> - but only if the <code class=\"language-text\">iframe</code> is from the same origin as the page.</li>\n<li><strong>Deny</strong> - Specifies that the <code class=\"language-text\">X-Frame-Options</code> header should be set in the HTTP response, instructing the browser to not display the page when it is loaded in an <code class=\"language-text\">iframe</code>.</li>\n<li><strong>Disabled</strong> - Specifies that the <code class=\"language-text\">X-Frame-Options</code> header should not be set in the HTTP response.</li>\n</ul>\n<p>We can use NWebSec to set it to block all <code class=\"language-text\">iframe</code>'s from loading the site which is the most secure option and the default option set in <a href=\"https://github.com/Dotnet-Boxed/Templates\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ASP.NET Core Boilerplate</a>.</p>\n<div class=\"line-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token comment\">// Filters is the GlobalFilterCollection from GlobalFilters.Filters</span>\nfilters<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">XFrameOptionsAttribute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        Policy <span class=\"token operator\">=</span> XFrameOptionsPolicy<span class=\"token punctuation\">.</span>Deny\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>You should note that for newer browsers, this HTTP header has become superseded by the <code class=\"language-text\">Content-Security-Policy</code> HTTP header which I will be covering in my next blog post. However, it should still be used for older browsers.</p>\n<h2 id=\"strict-transport-security\"><a href=\"#strict-transport-security\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Strict-Transport-Security</h2>\n<p>This HTTP header is only relevant if you are using <a href=\"http://en.wikipedia.org/wiki/Transport_Layer_Security\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">TLS</a>. It ensures that content is loaded over HTTPS and refuses to connect in case of certificate errors and warnings. You can read a complete guide to setting up your site to run with a <strong>free</strong> TLS certificate <a href=\"http://www.troyhunt.com/2013/09/the-complete-guide-to-loading-free-ssl.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>.</p>\n<p>NWebSec currently does not support an MVC filter that can be applied globally. Instead we can use the Owin (Using the added <code class=\"language-text\">NWebSec.Owin</code> NuGet package) extension to apply it.</p>\n<div class=\"line-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">app<span class=\"token punctuation\">.</span><span class=\"token function\">UseHsts</span><span class=\"token punctuation\">(</span>options <span class=\"token operator\">=></span> options<span class=\"token punctuation\">.</span><span class=\"token function\">MaxAge</span><span class=\"token punctuation\">(</span>days<span class=\"token punctuation\">:</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">IncludeSubdomains</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>As well as this header, MVC ships with the <a href=\"https://msdn.microsoft.com/en-us/library/system.web.mvc.requirehttpsattribute%28v=vs.118%29.aspx\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">RequireHttpsAttribute</a>. This forces an unsecured HTTP request to be re-sent over HTTPS. It does so without requiring any extra HTTP headers. Instead, this is a function of the MVC framework itself, which checks requests and simply redirects users if they send a normal HTTP request to a HTTPS URL. This attribute can be set globally (Using HTTPS throughout your site is a good idea these days) as shown below:</p>\n<div class=\"line-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">filters<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">RequireHttpsAttribute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Both of these lines of code have an overlapping purpose but work in different ways. The <code class=\"language-text\">RequireHttpsAttribute</code> uses the MVC framework, while the NWebSec option relies on browsers responding to the Strict-Transport-Security HTTP header. Security should be applied in thick layers, so it's worth using both features. <a href=\"https://github.com/Dotnet-Boxed/Templates\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ASP.NET Core Boilerplate</a> assumes you are not using TLS by default but does include the above lines of code commented out with a liberal sprinkling of comments to make it easy to add back in.</p>\n<h2 id=\"x-content-type-options\"><a href=\"#x-content-type-options\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>X-Content-Type-Options</h2>\n<p>This HTTP header stops IE9 and below from sniffing files and overriding the <code class=\"language-text\">Content-Type</code> header (MIME type) of a HTTP response. This filter is added by default in <a href=\"https://github.com/Dotnet-Boxed/Templates\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ASP.NET Core Boilerplate</a>.</p>\n<div class=\"line-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">filters<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">XContentTypeOptionsAttribute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"x-download-options\"><a href=\"#x-download-options\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>X-Download-Options</h2>\n<p>This HTTP header stops the automatic downloading and opening of your HTML pages by browsers which then go on to run the page as if it were part of your site. It and forces the user to save the page and manually open the HTML document. This filter is added by default in <a href=\"https://github.com/Dotnet-Boxed/Templates\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ASP.NET Core Boilerplate</a>.</p>\n<div class=\"line-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\">filters<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">XDownloadOptionsAttribute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"other-http-headers\"><a href=\"#other-http-headers\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Other HTTP Headers</h2>\n<p><a href=\"https://github.com/NWebsec/NWebsec\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NWebSec</a> provides a number of other useful HTTP headers. The <code class=\"language-text\">SetNoCacheHttpHeadersAttribute</code> helps turn off caching by applying the <code class=\"language-text\">Cache-Control</code>, Expires and Pragma HTTP headers (Expires and Pragma have been superseded by Cache-Control but still need to be applied for backward compatibility).</p>\n<p>Another useful filter provided is <code class=\"language-text\">XRobotsTagAttribute</code>. This adds the <code class=\"language-text\">X-Robots-Tag</code> HTTP header, which tells robots (Google or Bing) not to index any action or controller this attribute is applied to. Note, that <a href=\"https://github.com/Dotnet-Boxed/Templates\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ASP.NET Core Boilerplate</a> includes a <a href=\"http://en.wikipedia.org/wiki/Robots_exclusion_standard\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">robots.txt</a> file which you should use instead of this filter but I've added this here for completeness.</p>\n<p>A good place to use these attributes would be on a page where you want to post back credit card information because caching credit card information could be a security risk and you probably don't want search engines indexing your checkout pages either.</p>\n<div class=\"line-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CheckoutController</span> <span class=\"token punctuation\">:</span> <span class=\"token class-name\">Controller</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token class-name\">SetNoCacheHttpHeadersAttribute</span><span class=\"token punctuation\">,</span> <span class=\"token function\">XRobotsTagAttribute</span><span class=\"token punctuation\">(</span>NoIndex <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">,</span> NoFollow <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ActionResult</span> <span class=\"token function\">Checkout</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CardDetails</span> cardDetails<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Checkout customers purchases securely.</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The <code class=\"language-text\">CspAttribute</code> filter adds valuable support for the new <code class=\"language-text\">Content-Security-Policy</code> (CSP) HTTP header. I will be covering this extensively in my next blog post so I've only mentioned it here. There are other HTTP headers but they turn off browser security features and I'm not really sure why you would use those.</p>\n<h1 id=\"conclusions\"><a href=\"#conclusions\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conclusions</h1>\n<p>In the image below, you can see the <a href=\"https://github.com/Dotnet-Boxed/Templates\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ASP.NET Core Boilerplate</a> site in action. I've taken a screenshot of the HTTP response headers. You will see the ones listed in this email among them.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1019 712' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-da0b37125fc752c7c4722c50b2d72647'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-da0b37125fc752c7c4722c50b2d72647)' width='1019' height='712' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAtCAIAAACRYfoNAAAACXBIWXMAAAsSAAALEgHS3X78AAASQ0lEQVRo3tVZeXRUVZqvM3/MX2O3o%2beoxO1AQwgqoN2KHkTZwmLCFgitoKAEEHfEZcYZOT2LjjagsgiESCsaFiOyhRBCZaukUqQqSaWS1PLeq1ev1lf7vldlZX73PRKRRkx65p/%2bzuXm3vvu/e799u8rJLzbZ3d5Xd6A0%2bP3hWIuX9jm8tncfqvLZ%2bV9Ft5rIf3Pmpn3cQ4Pa3XRZoeBtfXQ5m6DSaMzdulZrJgdXpPdY7TwNOfQGS3dlAnrPRRHceTTdY27plmcftbmNphsetZq4Gw4rqUt3XpG061Xd%2btbVe1y%2bWWZ/HLtxVrlx/%2bm2PGf7Tv%2btPOTP0v8oZgvHAvGkpFkhrXYnd5ANNUbjKWCsTRG6P2RhD%2bSxPi65gsnPaG4yx9xeEM2lx%2bkcnY3ek8oJnxN8N4QmtXpM1qdNGdzekPBaDKSyIYTmXAiG0mShrswDcUzgVgKeNDcoYTDF7bjrC9ic4dMzpCRD/GBuNkZMLB2zuYymmzmyy1mhczerjxQWiZx%2b0OQgNnu8gRj//7u2%2bcrz3n8QafHp6OYHp3BQDFGk9np9mZ6%2b7P9A9ne/nS2b6SlMr3JdDaRysST6WgiFU0kI7EEWiKFxSxnsQWCYYfLU19X/8Fbr3FmC20w0DRlMpnMZjPLshjodDq329XX2xuJRHBdj552BeOuYMLqDppdfpPdq6R4mZZXGn0ac8gZzngDYbDbn8g4Q9FAqu/wkXIJHucPRnin2%2bn2myxWs3Ar7/TgYrvD5fWHeJeHd3nDkRjPk63R%2bNVXii0cjYcisWAkGghFgMcfDPsCIfRYJJ%2bicay7vT68NR5PRKJRPyAQ8Pn8Xq/P4/W6XK5wJBKNxdBbbXar3QGGegIhqDTvgW77Pb6A1x8IAhvuItclIsIDorF4PJk69NVfJLL6erVa09Isa5bJdTptzcWLWq22pbm5rq7%2b4oUL4JCqtRVjyqC/VF3T1NSMpzA0bbwWGAYdi8b%2b1IsfxD84YrFYxAFn4jgOArBwJrPVajNzFoiYpmm7needTppiWMZoNltZlmzDmKEZI8thAzN8y8itQLb/4CFJzt05U6ZMefChhx6aOjU3N3f69OmYPvDAA8LC1Mm5uZMFmDhxUt6UKZNyJ02cOHFyHqYTfzcMZCxMJ0z43Q1hgvAhJydn2bIVDGNhTTxndhoZi5F1GAwmdafOwQci0Ww4kgmF0%2bjD0QzpI5lAMOnzx%2bLJgaVLl48bN27SpEkjN953371Pzpq1Y9fnkltuuWXatOnz5s6ZMeOJmU/Omv3UU9OnP/zUrFmPz5jxh98/mp8/f/6C%2bbPnzMEgf968u%2b%2b%2b%2b8GHpq4qLn7s0UdnzpwJwu69996HH35k2rRpMx5//InHZ4BCrNx3I7jnnnvy8qYsWlSwYMHixYsLFi5cvHDRM%2bgXLXqmoHBpYeHSgoKlBWJfIEzJ4jK0JUuWT56ch%2bMjqO6///5x4%2b7CjZ/u/Exy1513Ts7LyyM8nphL%2bJ0rDoTx5LwpuDQPApkiAD5Nys3FFMyAHESWoM%2bdfHU/xhN/ESZNmDA%2bJ2dcDgGxFwHMvevmDQevxYwxaJg1a9anO3dJ9DqdRqNRKBStra2XBRgZ/AQKBemET4CRza3DcO3e1l8GpVLZ1tamarsKKpXQ2n4dcPQ6PDBOiqL37C%2bVXLlypa%2bvLxaDVf/dQCKRwLP7Bwb3HCgjBKQzmWAwGPo7ATw1HA4PDQ0NDAyWln1FCMhms/gQvgqhaCSCCbxzMplEfAG5IBobMBZ3RKPkUzxBWIEBpmS78DUmeHRhV0Rg1dWDZFskEhQAU3KF8BSxFweR4Q0ji%2bEbgbgTzx4cHCotO/zXBITdbg96n9er1xsQdRA74bjxGqxgPRgIuFxOxAqEUnhjvV7vcnsCfhKYgJvn%2bUAgQF4QCnEmE4ICgpTP54OluTwe8CKdTnl9XlyB9aTAmlQqlU5nQJLX50smU9gDjmA9mUz8KgGHvvorAiLhUOnBAxar7fSPJ0/%2beErRIj969Nix48dYziKrl5YfO2HQaY98%2b%2b0PJ09qdfpLFy8gFobCkdYW2dffHevuUn/yySfKNjVN6U%2bePFlVdeH8%2bSqfP9iqkOPIufNVJtbY1t6h02rPnDlDMUx3VzcCm7pT3dHe0dHe1tDYoDfQXRr1ucpKiqa7urrIc25GwLAKZTIZUb3AC426/eOPPvrx9BmlsvXs2bNV5ysPlZVduHABWYRSIcf4u2%2b//cs33/x46rTT5TYZaWldAzC0KRW79%2b49dvTo9xUVNTU1lefPnzh%2bFDTHY1HkAbKGumPHjx85cuT4ie8vXqgqPVj63Xflu/fsOVR6qOzwVxUVFecrK7898vX3P1QcLS/ftWsXqN1/4AAQIgaLSnhDAmDEe0UvNEIAJCqV1qg7NUjp8IizZ86cOn1arrgMN2W32%2btqpYjox45%2bd6KiAg/VdPcwlKGhsQnH9fqek6dOV3x/oo2wUnn6TKXDbj1xAht/cHl8IA9SPHvubGXluXNngfVMZWUlvoKquoZ6CPnrb74Bj06fOV1WVlZeXl5VVXW0HII/zjtdouVcS8MIATDiLw%2bW/UTAyLd0Og0VxDGHg4eVQiNhmqJmw2ZTKWLZDrvD6XRhW0wAcQ%2bm0SiMHn0UwkSaiXQN5otPNptNMHSkia4EsjrBjj0eD%2b6iDDpVe3s8QbZhBe8QLRiWcy3%2bGxAwOHjg0Fc/IwAf3ACPB3dbbTYPGbidArhhuS6XmeOsSMFsdofDjgWLBTOLnRAjgMvJO3ks4Rh2eb1eDznOI5PzkSzUD2zoXW43LN7tcsPihRV4BRe50kUIxl9c5PF48RUroNxmt5GkdTQEgFBYWGdnp7JVUd8okzU2yuUt8ma5GGLVnZ21tdLu7h7EwvpaqYljWxSXW1paNF1diOXNTQ2Nsub6utrqizWaTnWzvAXFhLxZJmtqamyU1UlrEXJlTTKcbWpu7lB30pQBBgY9hL02NjQ0yRoVSlWrUtUib1K1tbe0KPC1tq7%2b0qWLNdJarIcjUTwyEISHJQTAgvv6B0YI%2bMkLgWvIXZGpQknAb/hQcJmmKLgL8EJkNHiMxwnZPCzZ44B9OLDZhAoFAyS60D3wzEyAs5JTPLYAJ0TB8w4skv1mM45ZzCb4aMgBWTa2kTzbYnXYbQ6I2G6DF4YWADNyaXwisUkAQQJDcKPXE4BveIa8RQEXhtRHKpUqFC3IgxrqG1QqZUdHh1aHIk2v0XTVXaoGx7Gtrr6x5mJ1XYPsYnX1mXOVsGnw%2b5K0FolT1YVqSKxGWietq2tubpHW1VdXV0ulzVJprVzR2tTUJJcr4C3OX6hWq9U/njpbDdnVXDpfVd0ka6qtb4A3gK/DMxqaL7dcVsL24dbAMZAdFWwONc3%2bUsGIYXCwUZEAMKlL06nTG1C1gM0IQDqdHjwjFQWNNUrb09VtMMap9s%2b2vfLclm3vfvAfL7/5/sq1JUVrSv647uX1m98sfmETxque3/Tilq3rNr2xcu3GdZvfeqHkdSyuWPPStvfOvfjy9s1vvlPy6rYVz214YfNbW97C8Y3Yv%2bal117asnX95q3rNr%2b5fvNbK9duKlq7admqta98dmrd2x9teeOdja9tm1e4%2bljFaVRGu/buf/XtD3Z8tlsiRgQxlkE0YGpDfZ2sWQ7vBn6r1R2aTg0kqFS1IedsbGyEjspVHd7u1u1bNsx8ZvX6TW%2bsLXltbkHx0wuL5hc%2bW/L6e8%2bsemHmvCUz85c9u%2bGV%2bYXFj80pWP/KtpKXt85ZXPTIkwu3vltR9OwbRc9vXLhk9Yw5BfMLVy9bvX7WguVPzF2yfM2ml15%2bff3G158vebXklXfWbXpt9qKVjzwxZ9PH5Ste3Fr8QsnsxSsffGzOxzv3NMpb/vQ/O1Y8V/Lpzi8k2z/8cPv27fv27YNHg79HknRFAJIt9feDtoGBgd5UClN87e/vh4ODWofcTlavU3dpaYZFMa6nmEvSOmiLVo%2b63agzUGoNrF2n6erBQKsz6PQUpmSstXVq8B3iZNFjM200UbQRMZhhORT6KCYRv0jdb7HSjEkP1DYPxVoQ%2bHFa1dbRqelhWFZP0ZgSFUI9MX78%2bLlz58Jhw3IQ7WGCJrMl29t3lRKkL5VVGCDEymQyKNuJE987eB75DgI9yFOpVJlM2mAw9PT0ZDMZWBt4AcpxVGiEF0NDgyJrkAQiGoARV8YCOJsWAHou%2bsze3l5Y9KHDX0vuvPNOEFBYWBgnWRf5mQB%2bBm4bOVY0mQ4nUrFkOpNKZrJ9bo9X%2bEkhYNAbfD4/lkEzkIqxBn4G9hMeTl8iwx7jOhCXxYOjhgz5lwVzrkJWGGONSOCfb731tttuQ5WKQMLQFEwWqo8YlEolui0%2bFevpNPuRGNp8kVAsGfT7WZpmTVwyEbd4grFoBBGSMWiNDA3ZG/Q6imZg9Z2dGoQqMa8UfQMhMR4TPeBwbI2K%2bcsIqWMqCYQ%2bRAhA8b5q1aqCggK4YZvd7oSjFgBePxAM4InQKAdZdwi%2b2SFm7JzTb/cE7e4AeoxNvA8hBkESWwgSp4snm%2b0IqHgfYgvGNqsNAsRUjCTAJmb8vHAj7hVLhdEDHD9J5iaMHw/25y/IDwX95DcfhgF2%2bE2k%2b4gNSH0Q88UfYWxk3QxmIufj3OEeR4jiQ6w7rLWH9Hw4gAIoHsdjhKBDcgyOM4EAqCJ4ZbVYgDwQDKYEhBAXQSXoEqSNiImViDAdJSAlg0y/2Ldfcuutv7399tsXL34GL0RtKWZ5A4MwOtTK/b3Z/n5hOtwGe3v70eCg4KQG0fr7nXbETn5Q2ECc8tDI5iFE%2b2wW3mtgGCGZAiHGWBFRYS5uhtvIZGGcfaNpeFsqnd0NAmbPfhr6U1RUZDSaLGZwyppKZ%2bAviaX09qIBKTGg4XbNImkYW6x2uMBAKAwlgaB8/gAuSIu2JmzIDmO4DqE4FVayBNXPF2/eQALeuefLA5JpU6fOmDFj%2bfLlxArJb7ksZCqW/aMBMBO5I9G3cDQGBxkK4w1X/iYQvO3Q6PdDcvtgA7fffltOTg7MAKZkZEn8oCgKuitG6KFfA8QBpF7wXahowXPoZVT4BRf90PCbRgmDAoxyM3BD9/YdPCRZsnTp%2b//yr4VLllrMsDMzHDwqdJQX1zHmJrdyHGdkjJQBhNOIZbAHr1D%2bi6fHJIExEQDrJG70D1PzigoXL1k4TwzfKKugYFBguAsokhhBb04Aifkk3zazRpZhjHg6TAxRBo4Cbj8eJ79EABWcP/pUMiV6kWQiKf5KhYtSQlwbmwSGhqBCB8oOS/6p6L9uK/7vme9/A38PG0BGYNCThAZer6e7JxSO3FyX4KE4k7lL0wVThrtEoLDbbPDCZrMNId1qwRhFmwWE6bQ6jjOjzLCQQs5mFuSGnTyPys7icrnhjMYigSvwNHu%2bLJU8VGqdXe6cdtCETMFqscLZo0iBUVqtdlyA1EEQ7i8TMDiEg%2bB9IpkS1eDK3wqjVyEh0boCx/Xxp59JcnZSz/5gf/owa7HxSBEhBFRker1ep9UjZo3GlDkOJUR3JBoTYsjAiDmOCcZkxINCwEHc%2bPPO3ZJ/%2bP3Kf3xs9VMlHzp4J4fqDaWukaUZI3KW0TmiQURVlIgDBKCWAzCAQXHSL/YEBn4Z0ciXMRAgyBmh4PPdX0pK1qzau%2bOj4iWLGYalDDTUFMkmKm7kbFDK0cQBKB5MBzYDysl/JdEk74AkhR8eDaTX6VAk///Hgf6BL/YekDw9e3bx6j8uX1EE7SfFBMPA2uA6RhkHAKhTIToYJQpmhgItjEat0RKT5fRaLSoS2BLcAmiDuYNKA3G4jB5lq4HCOThflKowuX6Sb4zFiPv69%2bwrlfz2N7%2b544478vPzPW4PSi3g0pJfVrrEUPCrLIG2OGx2GjWVkUUqgWhgszlGfCLJpnqF9IZk8CQrEsdCMkPqO8yR1/cJU5FfY4rEJBvNnz9/w4YNxcWroTk2Ow%2bk6RRJZHDtoKjLN4ZB4vUGkNv18U4PaomODjUCOaWniBWxLLwpikS32yNKUuTsjY13eP2q2RCsv95wEGkhISB30sR58%2bYuyM93En9shd8MBfx40eiZ4fN6EcWJAgjxRXyPmGX8X7zqaMxv/6HDkjXPr9u4acvb297rUGtU7Z2qNrWyrUPRqoI%2b6w2MzkCPNK2eQkORDX2haHa4MR3qTqWqA7U5bUStbUSdDt5jQEp1imAAHgz0pIRnSAnPsMLmaxqDxtLCOkr7UTfzrs/3/i8by98Yzecr8gAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"1019\" alt=\"ASP.NET Core Boilerplate HTTP Response Headers\" data-srcset=\"/assets/static/ASP.NET-MVC-Boilerplate-HTTP-Response-Headers.82a2fbd.c764a55c7174144fa991afefc06e64a5.png 480w, /assets/static/ASP.NET-MVC-Boilerplate-HTTP-Response-Headers.ba8ab28.c764a55c7174144fa991afefc06e64a5.png 1019w\" data-sizes=\"(max-width: 1019px) 100vw, 1019px\" data-src=\"/assets/static/ASP.NET-MVC-Boilerplate-HTTP-Response-Headers.ba8ab28.c764a55c7174144fa991afefc06e64a5.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/ASP.NET-MVC-Boilerplate-HTTP-Response-Headers.ba8ab28.c764a55c7174144fa991afefc06e64a5.png\" width=\"1019\" alt=\"ASP.NET Core Boilerplate HTTP Response Headers\"></noscript></p>\n<p>Using HTTP headers for security is just one extra tool in your arsenal to secure your site. As you will see in my next post about the new <a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/CSP\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Content-Security-Policy (CSP)</a> HTTP header, it can be a very powerful tool but not one to be used in isolation. You need to think about security across the whole spectrum of your site to catch all the glaring holes you may have missed.</p>\n"}}]}}},"context":{}}