{"hash":"9729ff00c0b65b724a04211d002d758eea7defab","data":{"tag":{"title":"Bing","path":"/tag/bing/","belongsTo":{"edges":[{"node":{"title":"Structured Data using Schema.NET","path":"/structured-data-using-schema-net/","date":"2 July 2017","timeToRead":3,"description":"Schema.NET is Schema.org objects turned into strongly typed C# POCO classes for use in .NET.","content":"<h1 id=\"what-is-schemaorg\"><a href=\"#what-is-schemaorg\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What is Schema.org?</h1>\n<p><a href=\"https://schema.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Schema.org</a> defines a set of standard classes and their properties for objects and services in the real world. There are nearly 700 classes at the time of writing defined by schema.org. This machine readable format is a common standard used across the web for describing things.</p>\n<h1 id=\"where-is-schemaorg-used\"><a href=\"#where-is-schemaorg-used\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Where is Schema.org Used?</h1>\n<h3 id=\"websites\"><a href=\"#websites\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Websites</h3>\n<p>Websites can define Structured Data in the head section of their html to enable search engines to show richer information in their search results. Here is an example of how <a href=\"https://developers.google.com/search/docs/guides/intro-structured-data\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google</a> can display extended metadata about your site in it's search results.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 466 710' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-992f88c2ee13a69491769036f62f9e20'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-992f88c2ee13a69491769036f62f9e20)' width='466' height='710' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAABiCAYAAADgDdXjAAAACXBIWXMAAAsSAAALEgHS3X78AAAflklEQVR42uV8B3jj1ZWv92Vfkre8XZaEsFnIS9lN9sGXEJIvJEsLoS1JgGWAhHzU3UAIhJI8AoEAM8wSAiwlMAPDMN0znnHvvXfLtmRbtmR1yZIly1bvvfr3zv2rWJJlzwwZavx9x/92df/3nn7OPfdfsrq6imQy%2bRcLJfF4nDthiPhLAvYXi8VQwv5lbnzk/9g8cmHDZhsg4KNKSe48EccqcXLuJLl7q8mic9sQAR8NQudMPpHIf0YizSDvXjKZN7%2bPNAKKTX41GkGoqQbu3z8Cx903w3HXTXA/9gACFaVI%2bn15SDguAhLUaR5rFb40w0YZmTuFiCv2nsL%2bCycfU8m5SVv%2b9TyCc2G58GspYOcXnQf7lqsQm58rygl5CCicBEMEA2Yhco%2bJdCfJJHuezOqaPxcJhRPPWKa8vjPXydTk4zoNbNddAuul58P6/Qtgv/5yuB//FdxPPgL7Lf/GIcJx541ILC9tjoBk%2boHb5cDExDhWzNZNB%2bt0OIoO/lQhYKO%2b15RY6tr10H/A8j2a/A8ugOfZx5GwWVLEYZOjMXr37UJ0ZYW7jseJiKsbiACHzWgIR4%2bWYXBwEAMDw1Ar5RgaHoXNakF3VzdMZgt4Y6MYGx1BW0sTxCIR%2bIKpzNBOKRIYQcbGxhCJRIogIaXgkvZ2hA5%2bGrYfnQfXrx9Y64QjZuFYCuW/CALs5mWUV9YgFPBj146dOHCgFH293XjiiafB509i69ZtaGrtQnV1Ofa%2btQNbn3oaL7z0ElasKW5I/pkIyHChUqkkAgzAbrev44oU9VMISMgfRWK4BJHaTyOunkh1Eo%2bRiK6iSxRDoyCKZkEYzVNRtMzEUMePQWVO5I11nQh0tbehtLQUx8qr0NnRjrq6ejp2or6%2bHi3NLdi/bx/e2LkDfT1dqKooR21DE4KRaHYCa%2bx58hyRae/3%2b7G0tAQej4doNFoEAamxJkS3ItZRgujY2UgmHNn3RuOr%2bPGrAXxnqx8X/5cf/7rdj0vo%2bPUnfdjVk%2bKoRLJQCeaYiEg4vKYIswovybFRQ20VxvhTx5H9VbxbZsjtz%2bPxZAmTj4AUFRPi2xHpKgGGzgBCS0jTlkPAljcCuOQ5Py7/ox9XvhDAD18OcMh4p28DBHAXkRDmZudgtdqJAnrojSY4iQ2XjXoYV8xw2GwIBEMIEYIsZhMsFjMsViscdhusNjtMKyZ6HvyzOSBjATZUgskYJ8EJzXNATwnaW/8Bg4v9qTkkohzRRIY4JjRRyE0xHByO4LI/pDihYSq2AQdwL0lCKVdgeGgYEpkEwtl5iKZnSNkJwZsQoKutBdNz8zAsGTFJCkpCtlUwIwCfN4TxSSFm%2bHwo1Zp1NvzU%2bwGJlArzzmBvy7k4r%2bJm/FvLA7CHnEX7fKIiTNzg4zhBk9EByXcRDAVDQcQKXMxc5ZXxHd5LjzLrI6T1wGPju/DVsmvxnaqbcF3rA%2bjSj8ISdMAScENgncF9LVW4lFF/WwxP1wSzCvBdBUPrbfFqnhNUTGO/V38ZLR6Jh3F3z5McEi6ouBFfL78BVzTcjWsaf45vVmzBNyqvxbn7foOb3tbB5kmJ5rtGwMlGZ%2b9lLJBCQooLwvEI/iDYje9W/xTnHvsxvkbIYMDOGRLuH3oKywFTnlL/WESDuUhgfwseA44qmjlkbOfvwl5JNYRW2TqL9rELhxlLJ3IQUaxtskhO4GOTEMlVjAkWoOVB8vgpMZYT/NikxE7yj82d44C8cDd9/pcAWRHITLwwH5BpyM5ZOJkBrn36mHvvI4mATFqc/ZnNZgiFQs4Pz020nrBy%2bqiKQEYxDA8PY3Z2FkajEan7qYYapR0ttXLwRvTobNWg%2bsgc%2bAITJGIzhrvV6O1eAH9yJetmfiTXBRiwibe3t0OhUOT5zGq5FSN9izAavBgdXCREGLC46MGSwQ2V1Aa93kPBkf8jlVgtmg9gcuz1ejnWeDdBzUd2ZYhNOKXQ4tnMMDvPvR%2bLxbP32Hn2Oud%2bRpnmQmE/ue0Kn%2bXeL9bXiUDhuzbrlyVcikaDedfH8RKLpayLKdDVE1iq2mi160Tbn%2bz9HB1A8k4YWVk2ElZi2TeHQ6kMSiSd9sr8hQIBBALBNVYiTMbi6Vg7kTGdKbFyOJwIp7NMAfpdLsIDfn827cVSYZzo0aNQMLQeeasZ07yaE4qvFplUlKVj6F1%2bbi6RcCQ9rkR2HkWzwqGAF3UNjWioqUJXTx8OHSjF4b37IZyfR2dnN/j8KXS1NGBwZBqzUxM4fPgYhgZ7sJ%2bO7c311GYAR8qOYmxsCGK5ApXlFZgWTmL/oSOorahHb0cLjlbVoLy0DGMjQzhWWU1WZwjd7c2oqmtBc30d%2bgb60dTegaqyCvR0tWHP/oMQTE5CIppFdUMzWprq0dHRhrIj5XReh7a%2bQcwKRWhraURdczMOHypDZ1s72uhdxyqPobGpFXWNTWhqqIFILEN9YyM8/kAWCXlWgGHI6XTC7rBzlJKIJaTZLVyay%2bfzEfhhtbLrCEcpt8uJUDhE7Z1cHtHjcsFgMBKVUplZRlGP10PghdPhgovaO6mNy%2bGgZwHqywo/vcfv83LpNLVSBbfHiyD1yd7lYWsUNHmH002c4oPV7kAwGIDTboVBv8Qpa5PZBLudxmyzwWhaoTG5uHPGdT7ql1k19g61QgqHy8uNN9fhy%2bOASCRMlGxHX1cn2rt7MTk%2bioH%2bAbS3tEMmmSdKtaCjuwdV1VVcurynbwgyokx3Ty96ewYwStQTTE2jk37b29sPvVaNrr5%2b9Pd1QyyWE7V5GB8dRT%2b176N7/FkpWpubMDA4zL1/YrQfbZ29RM029PV0Y3RiGnLipLHBfkwSV42MzaGLOK27fwg6nQ5j5LMM8cbRwtr39UGr06OfxttPYxwcnuQ4YXhwAC2tHRjoHcDY0CCkSs3G%2bQC21GW12GFZWYFMJoPX48aiVgfdgo6Tp0Wdhl6ig0qlhFIp45KmPuIYhUJFmF4hKhqhX1yEjAa9sKCB22nHArU36BeJSg7MS%2bSw2ezQaBZgXDJAodRS3wv0Di3CEbIq0RBcxAGyeTGU9P5F/TK3AmVZXoLZYsaCRkdtNdxEV5aX6V1aWBwWLK/oCSEqeH12yBUSep%2bW/JJFiEQSLnkrJhHWaRcxPzeL6dn5NAKS6zkgGPRx1BTNCiEkb3BqWkQeoJxb/ZkVzkEsnCGqTEEqU3AdiOeE4E0K6Nk05uVKTp4jZBKtJDajIyOEKBVk5FCJJVKYaMIzc/OYE05hXiqFVCqHVDgBnmAe8yIR3F4ftDTIaT6fQ5RGrSGRUIA3PoHa%2bnriBBnEUgnpFx4MpKgdVsatagx0LWBy1EgIc2KCZwF/wAgB30RiEz85R4i7iEfR092NcVJQYomMlI8QczMCTJLya2lqRmNtDbHcFPoGR0l%2bzeT68tDd20ds1otpwrZgnMetKcrlKlKOA5ji86g9jxAmh4om0DM4Aql4BsPEil3dfRAKRjErUqGhugZzYin3zklqP02IZ/pgkjdGCBaCP8EjUewHb2Kc%2bh0iKsvhdgQxLVihPlYICRoM92gwOGjAeJ%2bOvNRF6PTebMI2A6e0ROZUe7u5meVT7e5ulmbPcYVXszaUeXjMNmd%2bwK6LxXvMxiYLUlG5S9uFkMihRCFlCqm1DgpC7VQfa7CaZN5rzvUJOm95IuAls9PQ0ILa2krS9LVo7eggU%2bTHQIeaZNkOEX8Z0zMr6OsmJWPwEKtpwaPAaGxQj%2blJA%2bkCE4KB%2bKYxQT4l1lMGx/nNRun3Yu1OGgHBgI9bkh4Y6EX/AJkNkjmvx49p3hIpOAMkgmXMzpnIYVGS1me22wOlxErmawlzfAPG6BgOxVO595w1xc0ol6FWsXuZ%2b%2b9FwnZdTvC9lMEPW18bcoDP40JjXRNkSjX0ZL8VdJybncHI8Cg5MiLMi%2bdhNCxicGgUS8smstciyNVaaJi5I1MmkWvIV9DBSp4Y0/zsT8CfxPDIMBrqmjFHZtPjjXMam4mURuUgF9cEtztCXKQnEbJAK7dCrXKRWx7lnk3zV8h7jBxXmRV7vhnnFNcB5FpOjk2gqrYedVWVnH9eU1mJXTt34tDhUs4EmckpaWtpxbFjFWitq0JtUxu6WtswRmaqsqoBTU2NMJJbOzIwiFA0STZeiG7mPVbVgTc6jCUSm54mOZqb1OhoVmGgR01iZSWEO9HTuYD2BjlGB5ewvOSBaJpMXLcOS0b/ukzT8bJOhc83tQLvlQhkosEPUwZoUw4IhwIYJ0/LYrVxXpjJbCY3cwUz07Oc62mmYEOnW6R7JgowWLAShJJY2eMJk7vq4c6tFh8pRx8FO3HEyZTOkdUQzlgoSAlBKbfBbvFDNGOGxRakoCgIs9lPbnKYM2NqpZPcWA/mppe5o0Hvpn5i8LnDFItYSVTCnLg4rX4skRWKxpJw2en31Bd7ZjH5yZuNw%2b%2bNkHhaOEXtsAbJ/Q4d3w9ImUE73njtVex65yB279yB117biYrqCjz/3CsoK92LvXsOoPzQQbzw4osYGhkkdzNEbKtGXY0c42QOJ8eNaKyYR22lDG1tKgQpghwdMKCuQgGFzI66WjlaqlkApED5YQmqj4jR1qgkT1BKUagXrdUK%2bq0CFYdmSUQUOLBfBIFgEUuEiLpjUgy0q1BTq8SRnXwSwXnSVS4MkYmuODhH1zJUHhTRe6xYUFrQ3CBFRZkE3fSuzg7diThCJ8euq8f1vhIn3ucqS0%2blK78Sq3neZjQaSS9qpgbP1h8s5rXKTyZm0XCMwtx4NqeZIei6JX2sbi4CEYqVWeTGWJ%2bVvUTpfmrRJOUZhoJBjvXZeTSSygmoCONMYXl8YQp/nRTVJdjI4CLuYAkivzdM4uOjftjAkuRrRBH0R7mBBugYjcY58NN5ZvKZ7M/J%2buLFJohs0fjq5rXCnAi4XSjd9w5p/IN4%2bb%2bfx1t7DlJ8PYjqyirs2vEa3tpfymWJ3tq1F4cP7IefECYY1qO9ah7TcxbUHJmjCG0BI71qHCkjFpWQHOocqKkjrU/Q20X3ia1rysSQk0hM8ZaJrdVoqZeh6qiE5Np3QusK72bd4fgikPXHE6RQXGTLrTBZrFwGZlYohFKl5mJ1H4WtNlKSVnrGZYaJ4uFQjKOu2xmm5xGKFAPEKTGOYyL0zGEnJeUKw271QSKmPv3sWZyUYIjjAvabZYMXoVD8fVtXKMoBCWJplrA46c6SKZYv/PN5okXbe2nCJ5u9fV8QwHJtpftKcbSqlktQHquswxGm9f/wPMorqlBWdgRavQlahRXDAzo0VskwSv6/iIKglkYF2onNG%2bjYXKdEMBRCXekcamqU6G5XopYsRe1RKbQLdpQfmENTg5LeISUTGslj%2bw%2bQA1Y5pRYJhaFZWIBCLoNGq4dOq4VkXgzdoh4qpZJcWR/ZfB9kUjvMZO%2b1GjvcRFG2UiwXmTFGgZNCYuYQYFnxY0Htho7aTE4sk7tsJV/CD5s5AIslQOc%2bxGOJ95XyGyJg7Ub8A/fSPjARcDvseHvnW6S1G7ja4LqaOvL7G7jq8O6%2bAfLzU3n5%2buY2dDbVoqmxEUePVeFo%2bRFU1zehncUEFPyYjT5yfubR3qYl315Bv9ejhhyVvnYNBgeWMD1hwCTPAKnE/mcVVZ5yBISJ/c3LK%2bDxxsCfmibPboJMmQgLGjUE00Ju6XzfO7sxNimAhOUKJ8bR3tmN6ZlpjE9MktcmoOhQSVo9DJ3ahsE%2bPdRSFhlaKMhawfysiVxpN/kFHixqHFAqHevs8we%2bOvz%2bs%2bKHRAQybJhdOS2oFyosl0lu8rxYhicvX5eb%2bfmwcMCmq8ObJBmKelx5ub31eb71cv%2bh4IDU6qmW5N0XCKYdoxjFBstkHpMfuNZ%2bX5Sgy2HD26%2b9hCpyhNiqakX5Qbz%2b%2bh5yjg6jrr6WQs4qeIPhjwUSiucEvR4YFrXkuztJ44%2bgb6CHNDzF7GT2mpqbyctrhtsX2HDRIZ7Mh%2bPm7dI7PLNQUMhcvP9kClgNwia7zPLeU7D9rujK0MlYgePpi%2bM9O5Xtk5u0Xy2Y0%2brxiqVzt6osW7zoH1/AsGARncMqDPN1iERjG4aVTooKe4xBDC4H0b0UQC%2bde6ObUJRc5XBPO0It9RyE25uQsJo3bM/qDbrJt6iTmNBKsUgtHbXO4MZIyBR9edwIq%2bQnvnc4nk5k1nXJ8E9X7cQ3rtuNx1/qxK2/roEt/cJcBCTSR545hLOP6nBWmRbn1ejx1cpFiByRvDa5A4vrdTD%2b8%2bdgvu5yWG75IZa%2b8lkEm%2btTbXJ2pWQmZ/JFcOVBPs55ZQAlD9Wj5Bc1%2bONQaq0/lihO6ahuActP/T8s3HQNln9zHxKZPcSbLY5mMrmtA0p88/p38NiLnZiY0eKO39bB6Qmto1BmcmOEgCtbl9Gk88NKcf2WbhNm7ZF1FMoMLiKTYmX70/C53fA6HLBWlMFbeTSdIVuPgGXyLv%2bjToxtfSq8w9fjzloRXhxe2AABqQDLfmQ/5l59AdIXnoX67lvgaq7L9n9cBDT3KXDutbuwfUcf%2bsaUuOnBKrg8oXWKJIOAcULA/63WY8ETRbs%2bgK9V6SF1riEg%2b5s0AsIUbap%2bfhcsUwJYp6ew8OxWOCuOZTlgrQQ%2b1f%2biK4SHW6SYMLjw%2bpgOr45q8fakPsu1uVt4MpuqHeWlmNv6OGb/%2bw%2bYvfFquPs60whInBgHfOvf9%2bBnv6nFm0fGcdltpfAHohtywIwjivNrDbi4aQkX1BtwAZ3LXNENOSBqNGLynH/E1Ln/AuG3voHxz54BR3vbOgplfmsPRnFt6RR%2bUiHEd3fz8M23xrBHYNhUBBIuJ5ae%2bz3mtlwD46vPc35OxvXeEAFMCYZDUUSICkarD3ZnAL5gBCa7f1PP0O4KQkPUNwTj0LgiWCEFGMt4gYVyR45VNBRBwqCDn0TBRqY2qlUTWwTXm0qs7fXV0FimVzxQuYOYNXngCEQ29EZDwUjOCk14QzO5zgzaLH4M9WnR0awBf1iP1iYVmioVEE0to6ZagdEhfV4GJ1NXoJwzoadVhZ5GBToq59FYq4JcZstPcqbbWmkSjTUK8ARWTExaMDZhQmfvEhronkBgWZchCnmD5I%2bYMdSlRn%2bDCmMUZbYck6OvWQEVRZeFk0oS8drqldwy28igHh0tC2ioEKO3Wwu5yrF5gUQkEkeAMKuYt0Ett0GpdkA%2bb%2bfCV7ncgRWjtygHROl3er0bcoUTRr0LMpmdW60p7jQlYTL6uJUitsLjdvghFVu5a5MpsG5CrBRXr/diUeeCTuOESuXkxrTC0vH%2bSFHTzJKsGgq39YSgod4FzEytYNnkQyAY2ywafO8coZP5yMJmpbenqv0GOmA1J7xNciWviRwoLF4ozNUX/i63MKmwSGmjAomNcviF4fVG7VfTn885kfb5CHgfEyKnNJAqwo25dUfHK9cp%2bIJEBMMDfdAZjNyaHCtnZSWzXCkqQZwrN49yiyJ2O7mY4dROclYoHQwGESL3lgErkfX6vFjS6%2bFw%2b0jGbVxtYTgS4UpuT3UeMJXISa7b8xTjlvbim%2bIuDwEOmwVH9r6NyopyvPKnHXQ8gmNlZSg7Vo1tTz2L6dk59PX24PXXdmLf3lLsPXgAPYODEM0I8MYbb%2bCtt3dj9%2b7d2LN7HxqaW3D4QClqG7qgkovx5ju7cOTQAUyLlFlzeyq24GaerywbwBfMYEowBfG8mKt5Fs/OYnpaCKvNAZ1OAzGZXLFIDOHMLGwO13oOCIWCXEms22XHFP1QKhGjq7MHErkKU3wBzFY7FGxbPXUgkcohIC9uQbcIu8XEFTWyJTRWCyyVSrGo10IimYfZZKY%2byXZTQCKaEyMUWdu%2bvroZbFLuUgxBoWCAq1tYUKuxsKAlXyYEj5Os1vIKgoEQnDSnZdMKtPRsSW%2bAy%2b35cCRFT4S6a15qIm9rT7JI/uBk%2b48V7hrLQGpbTPrjKnY7JsYn8gscWUKUYV41g1D7PgS7DyPYsR%2bhoXrIjXWY1L2MqcWd3FFpakEqvlnFm78W4a6v9eL%2b7wzivm8VwLdTcO/5A1AJ3Xn1ArkEKnae8f8DbS0w/%2bhqWG%2b9Gdaf3pSCgnPzD6%2bCv6oixQGkl4ruHc79e%2bKJJ1BTU5P/nPnrDAH1byD8k9MR/vmXEb7tTMR/exVqpi7GHwdK8KehEvyxrwR1c9dmv2Lz%2bDVjOL%2bkEpeW1OOikro8uDgN3y2pxdyQLU3ptRyFSCTCD37wA5x11lm44447OMJk9Uk6hPYdPgT9587A0j9/CYazz4L%2bH8%2bE/vNnckfD2Z/j7i%2beeTo8O15PIYCUeNGssFwux/j4OPh8Pl599VXuszashD5bfZFGQLhtD8L3fhXhX1%2bI8APnIfbsLWievQ6vj5Zg9/hpeH2kBK2SW7MIeObfJ7jJXvupFlz9181paEodP5G6vqKkEeJRezoxu2bSrrjiClx99dXo7OxESUkJXnzxxawcZxDgPXYU2v9zNnTf/haMN14P4623pOEnWLrpRixe%2bG1oz/k8XG%2b/leaAcO5%2bgdQo2QvuuusuDssPPvggHnvsMe769ttv53aVpvzt1IdMQs27ELzjbAQf%2bDqC//klRH9/PRpmrsDLRP03CQkvD5agSXxDFgFP3zBBFK7B5SUNuIy44FLumIIr/qoR36cjgywCEmscyXZ/sE/8bNu2jUPAk08%2bmTLfOV%2bPcx8rg/z002DZtwcBmhfbNcJCLLZYy66tNdWQ/d3fwLHrzXwOyEye2fBHH30U9957Lzf5%2b%2b67j4N77rkHO3bsyPuQGftFovcw8NvvAVuvIVm5BHjlP9EhuQe7%2befg0NTXsXvybHQpHs4i4Mkfj%2bPmr7Tgtzf2475LunD3BZ345WXduOeiDtx1fgcevqYHP/5MM2YH13PAli1b8MUvfhEHDx7EJz/5SQ4RhRzgJLMtOePvYSeOZdkLJ1mihZdehH1xkbt2zAohOfOzsO3cmY%2bAjBNhMpm4if/yl7/E/fffz8GvfvUr3HnnnVk9wK0IpQdVt%2bDE9f1G3DayjJsHl/DgpBMe1VYEZy%2bDX3Q9AkI6ap5DJmT/3TU83Pj5JjxzxxCeuX0Yj1zbi0dv6MVvruvFvRd14bEtffjh3zZhLo2AzPK5iUwYo/r27du5vUbs/Gc/%2b1l2PBkE2I8cwezpp8Pc3QPmcllJjOU33wQTca6PbeaY5GPus2fC8saOjTngd7/7HX7xi19kEcCAcQRjOYYg7ofJVOywTR5ESaMfJe0BlDR78Zl%2b0guzxA3E%2biARYMeE%2bHpk1laeuj6lA64kuU%2bJQR0u/0QDndfj6k814Mr/2cDdF4%2bscQDSJfk33HgzN/GLL/oeLrzwO7jp5p%2buub9pBNgIAYJP/y8Y6uvB4lYXebPM4ntofux6ZWAQfHpu2rFzvRLMIIGxGKP4Qw89hAceeICDhx9%2bmNMBzNPjwt9EqnTtJQVNvtmN0zo9KGl14quDMQRFNwKk/JKkBFfpGCMlGM/RAd8jLc%2bU3ZV/1ZSCktTxipLU%2beU5OoDhOek3A0t9iHotmJqTwRVc5SQqZJFjVfASkt6lbEhgLj0M3mmnY%2bbSyyH7/TOQb9sOxX89D/nW7ZA/8yyE11yLsU//bxgLOSDX/FmtNjzyyCO47bbbcffdd3PAFCITi4WFhTwEbJUSAmrdKGkhBDS48JmeBILCK4F%2bQsAwcQCZw7joR2sccN04Z%2bau%2bkQTp%2b1zIYOQ7%2bdxQOqjSXHTNOK87cDsyzTpFxEffw5J0R4kLHPE/mHSSakXrOw/hKHTzsDYWV/ACB1H/ubvMUrAnRPwzjoHw3RteLWIGcw1hBqNGgcO7idTyMPk5CT27duH%2bfn5rN3N1DNWGUP4waQf1/N9uHrCi7uFUYTUWwHJ5ViVEusLL0GUdEAGAdu28MnW13Nm8Kr/kZowM3%2b5iMhFQKGTl7SKkDSQnHm0%2bUvsaREwHSzF2N99BmPnfAW8L3wFk1/8Jzr/Msa/8GWMnv0ljNL9gU/9LRZf%2bVOhDlhNp8QCXNUlFykVKfLK88II606TFy4jeW0sB8cgEkWUxrJkjMOe/rIVI06Gu1RiByQCG2QzdmjmPdArvNz5ssaPlYUAB%2bw8EkopP1Zo6XCEyJ%2bPUISaQIT6YsAKQ5mCTMTza4zcyzZox8QIUIxiFsqgGBHBo1TDMq9GQEuWgCLUoFaHmNtdLByOc7m68v1idHQocHivEKOjy1ltvO7LbnSvt1WN8goJuloVGO7ToaFOic4mGRprxRCL7Zk0bRbBWpUd3a1yNDapMJD%2b8IJAYNywGFcyY0b5MRlGe9SoZbXEFVL0UP/DowbMjC9Bq3UiGktks9lOewgd7Yvo7mH7Bu3gTZgxNGzA3v1yCEXOdfFwwcbJVUQpWjOQaTObfVwJm88fLb7gmB7kgsoBvdELq4miSGcIK0s%2brmp7md2z%2bLkcYySSyHupx80KKqPw0pENOBjIbN1dn7lx2IJcotbvo7bECTZzEB5XmNtoyX7v90cQDseyCVd2jIaicLJiTR89C9A59eG0BRCgay5LnUie3La5jXKACcL8zOQSeEOLaKiUoZ24oK5ajpFeDQ7tFROlpGhtVEIuc66FwCf4jgzHyMQmDHUqieJLxy2kOJn84YZJ0cL83PESFmyTVMAf47DNqkWDQVYGG%2bMozI7seTLtM7yb%2bl7mBzDxY8XU8bRXuPpuvlGS/Ev5tvgmWeBiX8bLIoB94ODjBpFohEt4rBVxrRV1sTwma8N9QiOvOuxjAqtcsbYHCgrr2TcN2G5yqVRGEeUytzHbwVJiae%2b35OPK%2biwvaKAocH5ewuUy5ARSiZTb0e72rq1w/X9uAIBQ4aS0KgAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"466\" alt=\"Google Logo Structured Data Example\" data-srcset=\"/assets/static/Google-Logo-Structured-Data-Example.f8e1fd6.46d51b5fb7cda99c59233a4e6ab1dc0d.png 466w\" data-sizes=\"(max-width: 466px) 100vw, 466px\" data-src=\"/assets/static/Google-Logo-Structured-Data-Example.f8e1fd6.46d51b5fb7cda99c59233a4e6ab1dc0d.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/Google-Logo-Structured-Data-Example.f8e1fd6.46d51b5fb7cda99c59233a4e6ab1dc0d.png\" width=\"466\" alt=\"Google Logo Structured Data Example\"></noscript></p>\n<p>Using structured data in html requires the use of a script tag with a MIME type of <code class=\"language-text\">application/ld+json</code> like so:</p>\n<div class=\"line-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>application/ld+json<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"@context\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://schema.org\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"@type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Organization\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://www.example.com\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Unlimited Ball Bearings Corp.\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"contactPoint\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"@type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ContactPoint\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"telephone\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"+1-401-555-1212\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"contactType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Customer service\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h3 id=\"windows-uwp-sharing\"><a href=\"#windows-uwp-sharing\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Windows UWP Sharing</h3>\n<p>Windows UWP apps let you share data using schema.org classes. <a href=\"https://docs.microsoft.com/en-us/uwp/schemas/appxpackage/appxmanifestschema/element-sharetarget\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Here</a> is an example showing how to share metadata about a book.</p>\n<h1 id=\"enter-schemanet\"><a href=\"#enter-schemanet\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Enter Schema.NET</h1>\n<p>Schema.NET is Schema.org objects turned into strongly typed C# POCO classes for use in .NET. All classes can be serialized into JSON/JSON-LD. Here is a simple Schema.NET example that defines the name and URL of a website:</p>\n<div class=\"line-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token keyword\">var</span> website <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebSite</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    AlternateName <span class=\"token operator\">=</span> <span class=\"token string\">\"An Alternative Name\"</span><span class=\"token punctuation\">,</span>\n    Name <span class=\"token operator\">=</span> <span class=\"token string\">\"Your Site Name\"</span><span class=\"token punctuation\">,</span>\n    Url <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uri</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://example.com\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> jsonLd <span class=\"token operator\">=</span> website<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The code above outputs the following JSON-LD:</p>\n<div class=\"line-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"@context\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"http://schema.org\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"WebSite\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"alternateName\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"An Alternative Name\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"Your Site Name\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"https://example.com\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>There are dozens more examples based on Google's Structured Data documentation with links to the relevant page in the unit tests of the Schema.NET project.</p>\n<h1 id=\"classes--properties\"><a href=\"#classes--properties\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Classes &#x26; Properties</h1>\n<p>schema.org defines classes and properties, where each property can have a single value or an array of multiple values. Additionally, properties can have multiple types e.g. an <code class=\"language-text\">Address</code> property could have a type of <code class=\"language-text\">string</code> or a type of <code class=\"language-text\">PostalAddress</code> which has it's own properties such as <code class=\"language-text\">StreetAddress</code> or <code class=\"language-text\">PostalCode</code> which breaks up an address into it's constituent parts.</p>\n<p>To facilitate this Schema.NET uses some clever C# generics and implicit type conversions so that setting a single or multiple values is possible and that setting a <code class=\"language-text\">string</code> or <code class=\"language-text\">PostalAddress</code> is also possible:</p>\n<div class=\"line-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token comment\">// Single string address</span>\n<span class=\"token keyword\">var</span> organization <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Organization</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    Address <span class=\"token operator\">=</span> <span class=\"token string\">\"123 Old Kent Road E10 6RL\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Multiple string addresses</span>\n<span class=\"token keyword\">var</span> organization <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Organization</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    Address <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token generic-method\"><span class=\"token function\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span> \n        <span class=\"token string\">\"123 Old Kent Road E10 6RL\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"456 Finsbury Park Road SW1 2JS\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Single PostalAddress address</span>\n<span class=\"token keyword\">var</span> organization <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Organization</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    Address <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PostalAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        StreetAddress <span class=\"token operator\">=</span> <span class=\"token string\">\"123 Old Kent Road\"</span><span class=\"token punctuation\">,</span>\n        PostalCode <span class=\"token operator\">=</span> <span class=\"token string\">\"E10 6RL\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Multiple PostalAddress addresses</span>\n<span class=\"token keyword\">var</span> organization <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Organization</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    Address <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token generic-method\"><span class=\"token function\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PostalAddress</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">PostalAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            StreetAddress <span class=\"token operator\">=</span> <span class=\"token string\">\"123 Old Kent Road\"</span><span class=\"token punctuation\">,</span>\n            PostalCode <span class=\"token operator\">=</span> <span class=\"token string\">\"E10 6RL\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">PostalAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            StreetAddress <span class=\"token operator\">=</span> <span class=\"token string\">\"456 Finsbury Park Road\"</span><span class=\"token punctuation\">,</span>\n            PostalCode <span class=\"token operator\">=</span> <span class=\"token string\">\"SW1 2JS\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This magic is all carried out using the <code class=\"language-text\">Value&lt;T&gt;</code>, <code class=\"language-text\">Value&lt;T1, T2&gt;</code>, <code class=\"language-text\">Value&lt;T1, T2, T3&gt;</code> etc. types. These types are all <code class=\"language-text\">structs</code> for best performance too.</p>\n<h1 id=\"where-to-get-it\"><a href=\"#where-to-get-it\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Where to Get It?</h1>\n<p>Download the Schema.NET <a href=\"https://www.nuget.org/packages/Schema.NET\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NuGet package</a> or take a look at the code on <a href=\"https://github.com/RehanSaeed/Schema.NET\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub</a>. At some point I'll find the time to write a quick ASP.NET Core tag helper that wraps Schema.NET.</p>\n"}}]}}},"context":{}}