{"hash":"510f178fbb12b844165c569c14fa89233f6d0f46","data":{"tag":{"title":"Cryptography","path":"/tag/cryptography/","belongsTo":{"edges":[{"node":{"title":"Subresource Integrity TagHelper Using ASP.NET Core - Part 2","path":"/subresource-integrity-taghelper-using-asp-net-core-part-2/","date":"12 March 2016","timeToRead":4,"description":"Use an ASP.NET Core TagHelper to implement Subresource Integrity (SRI) to ensure that external resources have not been tampered with. With is part 2.","content":"<ul>\n<li><a href=\"/subresource-integrity-taghelper-using-asp-net-core/\">Subresource Integrity TagHelper Using ASP.NET Core - Part 1</a></li>\n<li><a href=\"/subresource-integrity-taghelper-using-asp-net-core-part-2/\">Subresource Integrity TagHelper Using ASP.NET Core - Part 2</a></li>\n</ul>\n<p>Last week I wrote part one of a blog post discussing a Subresource Integrity (SRI) tag helper I wrote for ASP.NET Core. It turns out the post was featured on the ASP.NET Community Standup and discussed at length by <a href=\"http://twitter.com/shanselman\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Scott Hanselman</a>, <a href=\"http://twitter.com/damianedwards\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Damian Edwards</a> and <a href=\"http://twitter.com/jongalloway\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Jon Galloway</a>. Here is the discussion:</p>\n<div style=\"width: 100%; margin: 25px 0 25px 0;\">\n    <div style=\"position: relative; padding-bottom: 56.25%; padding-top: 25px; height: 0;\">\n        <iframe style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"\n            src=\"https://www.youtube-nocookie.com/embed/Mu2jol8EmVo\"\n            allow=\"autoplay; encrypted-media\" allowfullscreen>\n        </iframe>\n    </div>\n</div>\n<p>The overall impression from the standup was that the SRI tag helper I wrote was a good first step but there was more work to be done. It was however, still more secure than \"the rest of the internet\" according to Jon Galloway. The main issue raised during the standup was that the first call made to get the resource could retrieve a version of it that was compromised.</p>\n<p>My initial thinking was that you could check the files at deployment time when the tag helper first runs. Then the tag helper would have calculated the hash and cached it without any expiration time, so you are good from then on. In hindsight checking the files on every deployment is not great for the developer.</p>\n<h1 id=\"the-2nd-iteration\"><a href=\"#the-2nd-iteration\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The 2nd Iteration</h1>\n<p>So for the next iteration I have added a new alternative source attribute, basically a local file from which the SRI is calculated. Now the tag helper looks like this when in use:</p>\n<div class=\"line-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js<span class=\"token punctuation\">\"</span></span> \n        <span class=\"token attr-name\">asp-subresource-integrity-src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>~/js/jquery.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>You can also customize the hashing algorithm used in your SRI. You can choose between SHA256, SHA384 and SHA512, by default the tag helper uses the most secure option SHA512 which seems to be supported by all browsers. Should you choose to use a different hashing algorithm or even use more than one algorithm, you can set the <code class=\"language-text\">asp-subresource-integrity-hash-algorithms</code> attribute which is just a flagged enumeration (Note that I am using ASP.NET Core RC2 syntax, where the name of the enumeration can be omitted):</p>\n<div class=\"line-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js<span class=\"token punctuation\">\"</span></span> \n        <span class=\"token attr-name\">asp-subresource-integrity-src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>~/js/jquery.min.js<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">asp-subresource-integrity-hash-algorithms</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>SHA256 | SHA384 | SHA512<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>What is it doing behind the scenes?</p>\n<ol>\n<li>Reads the local file specified using the asp-subresource-integrity-srcÂ  attribute.</li>\n<li>Calculates a SHA512 hash (or your custom selection) for the file.</li>\n<li>Adds the <code class=\"language-text\">integrity</code> and <code class=\"language-text\">crossorigin</code> attributes to the script tag.</li>\n<li>Adds the hash value to the distributed cache (<code class=\"language-text\">IDistributedCache</code>) built in to ASP.NET Core with no expiry date. If you are using a distributed cache like <a href=\"http://redis.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Redis</a> (Which you should for the pure speed of it) then the hash will be remembered.</li>\n<li>The next time the page loads, the hash is retrieved from the cache, so there is very little performance impact of this tag helper.</li>\n</ol>\n<h1 id=\"microsoft-cdn-still-broken-for-sri\"><a href=\"#microsoft-cdn-still-broken-for-sri\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Microsoft CDN Still Broken for SRI</h1>\n<p>In my last post I noted that SRI requires that the resource has a valid <code class=\"language-text\">Access-Control-Allow-Origin</code> HTTP header (usually with a <code class=\"language-text\">*</code> value). Microsoft's CDN does not supply this header for all it's resources. I did reach out to Microsoft to see if this could be fixed. I've not heard back yet. I would imagine that with a CDN of that size, fixing this issue is a non-trivial thing so it might take time but I'll do some more chasing.</p>\n<h1 id=\"browser-extensions-and-sri\"><a href=\"#browser-extensions-and-sri\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Browser Extensions and SRI</h1>\n<p>Last week, I noted that leaving out the scheme in the URL for your CDN resource e.g. <code class=\"language-text\">//example.com/jquery.js</code> caused Firefox to error and fail to load the resource completely and I recommended that you always include the <code class=\"language-text\">https://</code> scheme. It turns out that this was not Firefox causing the issue at all but a Firefox browser extension. I've yet to figure out which one yet as I have quite a few installed (most of them security related because I'm paranoid) but it's probably an extension called HTTPS Everywhere which attempts to use HTTPS if it is available. To be on the safe side and avoid this problem, always specify the <code class=\"language-text\">https://</code> scheme.</p>\n<h1 id=\"cdn-fallbacks\"><a href=\"#cdn-fallbacks\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CDN Fallbacks</h1>\n<p>So what happens when a CDN script is maliciously edited or (much more likely) you messed up and your local copy of the CDN script is different from the one in the CDN? Well, this is where CDN script fallbacks come in. There is already a tag helper provided by ASP.NET Core that does this:</p>\n<div class=\"line-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">asp-subresource-integrity-src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>~/js/jquery.min.js<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">asp-fallback-src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>~/js/jquery.min.js<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">asp-fallback-test</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>window.jQuery<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>I should also mention that although the fallback tag helper is cool and very simple to use, it adds inline script which is not compatible with the <a href=\"/content-security-policy-for-asp-net-mvc/\">Content Security Policy (CSP)</a> HTTP header. If you care about security and you probably do if you are reading this, that means using the fallback tag helper is not possible. I myself prefer to move all my fallback checks to a separate JavaScript file.</p>\n<h1 id=\"sritestio\"><a href=\"#sritestio\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>sritest.io</h1>\n<p>A big shout out to <a href=\"https://blog.gaborszathmari.me\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Gabor Szathmari</a> and his website <a href=\"https://sritest.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">sritest.io</a>. It is able to scan your page and check that all your external resources have SRI enabled and most importantly that it has been setup correctly. You could use the console window from a browser like Chrome or Firefox but this website will also tell you if you've forgotten to add SRI to any external resources and also highlight edge cases such as the ones I highlighted in these two blog posts.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1624 859' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-b2a8e1cde6e7da4b129ab5cacb60e815'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-b2a8e1cde6e7da4b129ab5cacb60e815)' width='1624' height='859' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAiCAIAAABgN0jYAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAHQUlEQVRYw81ZXZAcVRXeB5/gQaXAJJiQmDUgQiJlXqRAEPFBNAYCCQkpJFU8SGkVVfriC0qyP8HADqEQk1BhcXezMSk1ChKCIkQoCq3szO72/PZsT/f8z%2bzM9Ez/zvT/z3pu925nsplZMsnO6qmv7p4553bf%2b91z7u177/bMzc1ZiqAkPlYLYbHeYBhGFMW6LEulkk6SliRBhTnbnuu%2bGJYmayLAtM05G9q0nZZtT2n5VA96sppixvcV//HKBX/gww8%2bOH/%2bvH9qivD7bYoyRXEFCFi2BSVZnjz9n76/BoZmWUrXTFVTwaiqajKZpGk6lUrVajX4CUaO4yiKAiMiAF0z1bqSndSZnNtN4GqapmFZJhoV2zCt7gPEllWZrde4Bqtoqq6bmm6ASzctWVEVTdc0zTBQRbd78FPXddB7LCRohBGTBQGTY1iJzLlCgb5aTeKmFig9C35rUXfJSiOYr4cLKwkx5KClV9HNtnOgpWx7PXTjr/zr%2byfX9f0/IECUBGe22FdKYMcwfvNAcNOhUO9v2uKr14xNDno/G8FEWeyMwMNvxFYfwHpfCH7lYGtsOBi8uW/6y/0YYG0/tqZvGkpk6cMW7Mjietf2u3bMtcwrfdOrD0yvOTC9YbBtKwvAlo3AxhcQQIHgbBsmvnMUf%2bAY/t1j8R%2b9Sdx/JP7DYeKh4zMPvQH2%2bIPH4t8%2bgj9wNH7fEVTh%2b8cJsN9/FP/e6/EdI4l7f4dv/33iqdPJvSepr78Y3jCI9cLLu01g/WDwpv1TNz4/j0dHycdPkE/%2bgbrnNXzfqSSQ2XOS2nea2j1O7TpB/vhUEpSdo%2bQPholH3iRA2TlGPvtWZu9Jcs849fBI4pGRxDNn0j/9S/prL4Zv%2bPXUqv0obl0kAIG%2b7VBo51gCxmzPOHSCfGw0sWs08ZiDR0cIpKCScHSEnchF7BpzKyR2jBB7TiR2n0CVwQivAmXr4ch9r4W3D%2bOAe14Nrx/sDgFQIHFhjBuqAd832/l2XqOYTm98H81%2biCWz%2bHSJivzxQmpNX8uJd80EIDtvGcC2%2bMKvflIamyiPTJTHAvSon4YSMD5ZPdk5xgPVM8EaZODP/xT3nYsdfg9/5nR83QC28WB3CMC6cfdvo798J3PnS5Gtr0Rvfyl018uRbx6OQgkuyGBYUjrFqgPTawecdak/CGPf3TmwfhDbPBTeNjzzDV9k6%2bHoFh/0HjEBDrceCsHS1HtV2HipvmwEth%2bPfWk/5q48HtYNBGHYIMow5G7p4pbBS6p1ARjRKYHdozh8Ajf7wncMXQKwbHk5shngC9/pC7slwpCDZsV3qTJ00bJ5kcsXcfVFbTUhRFbqnREo1LW0qGdaIVoR41WJqEkkI5OMo7AyAqM4ikKxCsFIMzUpAV4wMirFqRSrguIiXpUJBj2SYBygmjK8Jy1oLVuEnihGJ5s5oKnBthtWulYgytWy2MhzfIHni7yQZTnQ8xxXFARQirw4ywvpGpNhOKgwK0h5XpkVVUCprmVYucArOU4pClKOZaEaSdeKPJ9l%2bDTDyLCTb9Wiu3J3thvVLAs4tITV9F6zve4dKaw5e8FrGzZ40ZFx0SMu9DYtokY7JSDwfLVaqdXoy1B1pVatzUuz0gS6QmczmVw2Vy6Xa58pzkuY9oBjVmcEeF4QOF3gDYDImwBHN3lOYllWEAT2MuE4BE%2bgQ5k0SKpcrnDNjqsSOE9eOQEULEVjseTPAomnJsl9E4kn/OSTU%2bTTE8Tj%2bdqfwStJjcuvCSwU6IsLBfxdxiOpc8rthEBdKpwLrHnrwufeDazyJ/aeD97xt4nrzvy7J5p9DpI6Gg3LirLoMVZUc3SjxMq5qlRk5NmanKUboPAN7X9AoCHP/hO7/WzgC/%2bKfCtXPYUlf3JuctU7/s/juQG0D7N0w9DdOwJPvAO3A8u9HLCXSa6CQPH96VvP%2br/4PnZbKPOLT/EHgcDbE9fH8wOWMYfjUTwWC4XDmq57t048x87MEKVSuVgoZHPZVCol1utL3El1OwJAYNO5yZvem1p9NnADKH%2bfWvv2xHWxXB%2bKgKm5o7JokHQdRcZwZNkGv/MIINF1VVbzdSktypm6nBWljCilG0pG0zlN1WKxCEmRBEFkc/mLEeCFfD6XLxTSmUzzxeAiWYEIuARQbqiKghZNUeRgVRVEbyTc/NYc8XpmzgfEardme1dUKxEBw4RUkAxDNlApGaYM0PQGpImmqjPxeAzHXZKewFKfzWbz%2bUKpVIL1v1gsQiigLBQKOUdAo6hkvSEtMaLLE4ElGLte6LqysIx6gwR5ry4IeCE4siKjW01Vhaxz7Y1Gw4tPFyOwNAHoCwxkMpWCOcAwrDcH6qIIWwyapiHrKhUaNgfwDa6gfUQVPtHgAiNNgwEJRGnpTOtiBMAFWwPGEUW%2b%2bDlT3AkjCLzAQwVvu8Gjbcm8eBZ41uwkizqfA%2b3FNAy76b2e3b3mvvxfEq2XIpj0RgfSjsB/AWIwwkCxMgk9AAAAAElFTkSuQmCC' /%3e%3c/svg%3e\" width=\"1624\" alt=\"sritest.io Screenshot\" data-srcset=\"/assets/static/SRI-Test.82a2fbd.85b27df328cbf81167527c5736fdf927.png 480w, /assets/static/SRI-Test.cbab2cf.85b27df328cbf81167527c5736fdf927.png 1024w, /assets/static/SRI-Test.a28a40c.85b27df328cbf81167527c5736fdf927.png 1624w\" data-sizes=\"(max-width: 1624px) 100vw, 1624px\" data-src=\"/assets/static/SRI-Test.a28a40c.85b27df328cbf81167527c5736fdf927.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/SRI-Test.a28a40c.85b27df328cbf81167527c5736fdf927.png\" width=\"1624\" alt=\"sritest.io Screenshot\"></noscript></p>\n<h1 id=\"where-can-i-get-it\"><a href=\"#where-can-i-get-it\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Where Can I Get It?</h1>\n<p>This tag helper is available in a few ways:</p>\n<ol>\n<li>The <a href=\"https://www.nuget.org/packages/Boxed.AspNetCore.TagHelpers/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">.NET Boxed Boxed.AspNetCore.TagHelpers</a> NuGet package.</li>\n<li>Check out source code in the <a href=\"https://github.com/Dotnet-Boxed/Framework\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">.NET Boxed Framework</a> GitHub repository.</li>\n</ol>\n"}},{"node":{"title":"Subresource Integrity TagHelper Using ASP.NET Core - Part 1","path":"/subresource-integrity-taghelper-using-asp-net-core/","date":"6 March 2016","timeToRead":4,"description":"Use an ASP.NET Core TagHelper to implement Subresource Integrity (SRI) to ensure that external resources have not been tampered with.","content":"<ul>\n<li><a href=\"/subresource-integrity-taghelper-using-asp-net-core/\">Subresource Integrity TagHelper Using ASP.NET Core - Part 1</a></li>\n<li><a href=\"/subresource-integrity-taghelper-using-asp-net-core-part-2/\">Subresource Integrity TagHelper Using ASP.NET Core - Part 2</a></li>\n</ul>\n<h1 id=\"what-is-subresource-integrity-sri\"><a href=\"#what-is-subresource-integrity-sri\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What is Subresource Integrity (SRI)</h1>\n<p>Can you trust your CDN provider? What if they get hacked and the copy of jQuery you are using hosted by them has some malicious script added to it? You would have no idea this was happening! This is where Subresource Integrity (SRI) comes in.</p>\n<p>It works by taking a cryptographic hash of the file hosted on the CDN and adding that to your script or link tags. So in our case if we are using jQuery, we would add an integrity and <code class=\"language-text\">crossorigin</code> attribute to our script tag like so:</p>\n<div class=\"line-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js<span class=\"token punctuation\">\"</span></span> \n        <span class=\"token attr-name\">integrity</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>sha256-ivk71nXhz9nsyFDoYoGf2sbjrR9ddh+XDkCcfZxjvcM=<span class=\"token punctuation\">\"</span></span> \n        <span class=\"token attr-name\">crossorigin</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>anonymous<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>The cryptographic hashing algorithm used can be SHA256, SHA384 or SHA512 at the time of writing. In fact, you can use more than one at a time and browsers will pick the most secure one to check the file against.</p>\n<p>The current official standard <a href=\"http://www.w3.org/TR/SRI/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">document</a> states that currently only script or link tags are supported for your JavaScript or CSS. However, it also states that this is likely to be expanded to pretty much any tag with a <code class=\"language-text\">src</code> or <code class=\"language-text\">href</code> attribute such as images, objects etc.</p>\n<p>Scott Helme has a great <a href=\"https://scotthelme.co.uk/subresource-integrity/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">post</a> on the subject which I highly recommend you read (It's where I learned about it).</p>\n<h1 id=\"the-aspnet-core-tag-helper\"><a href=\"#the-aspnet-core-tag-helper\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The ASP.NET Core Tag Helper</h1>\n<p>I implemented a tag helper for ASP.NET Core which is as simple to use as this:</p>\n<div class=\"line-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">asp-subresource-integrity</span>\n        <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Don't you love it when security is so easy! I'm a big believer in making security as easy as having a big red button that says 'on' and turning it on by default so people don't have to. It's the only way these things will get used! What is it doing behind the scenes?</p>\n<ol>\n<li>Downloads the file from the CDN.</li>\n<li>Calculates a SHA512 hash for the file.</li>\n<li>Adds the <code class=\"language-text\">integrity</code> and <code class=\"language-text\">crossorigin</code> attributes to the script tag.</li>\n<li>Adds the SHA512 hash value to the distributed cache (IDistributedCache) built in to ASP.NET Core with no expiry date. If you are using a distributed cache like <a href=\"http://redis.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Redis</a> (Which you should for the pure speed of it) then the hash will be remembered.</li>\n<li>The next time the page loads, the hash is retrieved from the cache, so there is very little performance impact of this tag helper.</li>\n</ol>\n<p>There are actually two tag helpers, one supports any tag with a <code class=\"language-text\">src</code> attribute and another supports any tag with a <code class=\"language-text\">href</code> element. This is in preparation for when subresource integrity is opened up to tags other than script and link.</p>\n<h1 id=\"gotchas\"><a href=\"#gotchas\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gotchas</h1>\n<p>In the past, I have often omitted the scheme from the CDN URL like so:</p>\n<div class=\"line-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>//ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>However, I have noticed that Firefox, does not like it when you use SRI and omit the scheme. It stops the file from loading completely. When you think about it, this makes sense. We are trying to confirm that the resource has not been changed, one of the ways to do this is to use HTTPS. It does not make sense to use SRI over HTTP.</p>\n<p>The other gotcha I found is that the resource must have the <code class=\"language-text\">Access-Control-Allow-Origin</code> HTTP header. It can be set to <code class=\"language-text\">*</code> or your individual domain name. Now, I have been using CDN resources provided by <a href=\"http://ajax.googleapis.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google</a> (for jQuery), <a href=\"http://www.asp.net/ajax/cdn\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Microsoft</a> (for Bootstrap, jQuery Validation etc.) and <a href=\"https://www.maxcdn.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MaxCDN</a> (for Font Awesome) because they are free, most browsers have probably already got a copy of the files from there and because they have very fast global exit nodes.</p>\n<p>However, I have discovered that all provide the <code class=\"language-text\">Access-Control-Allow-Origin</code> HTTP header except Microsoft on some of their resources. Strangely, they return the header for Bootstrap but not for the jQuery Validation scripts. I have reached out to them through my capacity as an MVP and hope to get the issue solved. In the mean time, if you are using Microsoft's CDN you can switch to another CDN or wait for them to fix the issue.</p>\n<h1 id=\"where-can-i-get-it\"><a href=\"#where-can-i-get-it\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"aria-hidden\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Where Can I Get It?</h1>\n<p>This tag helper is available in a few ways:</p>\n<ol>\n<li>The <a href=\"https://www.nuget.org/packages/Boxed.AspNetCore.TagHelpers/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">.NET Boxed Boxed.AspNetCore.TagHelpers</a> NuGet package.</li>\n<li>Check out source code in the <a href=\"https://github.com/Dotnet-Boxed/Framework\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">.NET Boxed Framework</a> GitHub repository.</li>\n</ol>\n"}}]}}},"context":{}}