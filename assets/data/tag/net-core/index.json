{"hash":"500564e124cb3d7a652412f9c5569d8f11cfd9c7","data":{"tag":{"title":".NET Core","path":"/tag/net-core/","belongsTo":{"edges":[{"node":{"title":"Optimally Configuring Open Telemetry Tracing for ASP.NET Core","date":"2022-02-03T00:00:00+00:00","dateModified":null,"timeToRead":4,"description":"How to optimally configure Open Telemetry traces for ASP.NET Core enriched with lots of extra information.","path":"/optimally-configuring-open-telemetry-tracing-for-asp-net-core/","published":true}},{"node":{"title":"Exporting Open Telemetry Data to Jaeger","date":"2021-02-11T00:00:00+00:00","dateModified":null,"timeToRead":3,"description":"How to optimally export Open Telemetry metrics, logs, and traces for .NET to Jaeger.","path":"/exporting-open-telemetry-data-to-jaeger/","published":true}},{"node":{"title":"Open Telemetry for ASP.NET Core","date":"2021-02-01T00:00:00+00:00","dateModified":null,"timeToRead":3,"description":"The basics of how to configure Open Telemetry metrics, logs, and traces for ASP.NET Core and export the traces.","path":"/open-telemetry-for-asp-net-core/","published":true}},{"node":{"title":"Deep Dive into Open Telemetry for .NET","date":"2021-01-19T00:00:00+00:00","dateModified":null,"timeToRead":10,"description":"How to use the Open Telemetry specification, tools and SDK's used to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) using .NET and ASP.NET.","path":"/deep-dive-into-open-telemetry-for-net/","published":true}},{"node":{"title":"A Simple and Fast Object Mapper","date":"2019-03-05T00:00:00+00:00","dateModified":null,"timeToRead":9,"description":".NET Boxed mapper is an object to object mapper that is simpler and faster than Automapper and makes zero allocations of memory, thus making the garbage collector do less work.","path":"/a-simple-and-fast-object-mapper/","published":true}},{"node":{"title":"Is ASP.NET Core now a Mature Platform?","date":"2018-12-18T00:00:00+00:00","dateModified":"2019-01-12T00:00:00+00:00","timeToRead":9,"description":"ASP.NET Core a large developer base, a large number of GitHub projects, Stack Overflow questions, bloggers and companies who use it. It's a mature platform.","path":"/is-asp-net-core-now-a-mature-platform/","published":true}},{"node":{"title":".NET Boxed","date":"2018-05-13T00:00:00+00:00","dateModified":null,"timeToRead":2,"description":".NET Boxed is a set of project templates with batteries included, providing the minimum amount of code required to get you going faster.","path":"/net-boxed/","published":true}},{"node":{"title":"ASP.NET Core Caching in Practice","date":"2017-10-20T00:00:00+00:00","dateModified":null,"timeToRead":5,"description":"How to use and implement Cache-Control, Cache-Control Immutable, E-Tag, Last-Modified and If-Modified-Since Caching HTTP headers in ASP.NET Core.","path":"/asp-net-core-caching-in-practice/","published":true}},{"node":{"title":"Structured Data using Schema.NET","date":"2017-07-02T00:00:00+00:00","dateModified":null,"timeToRead":2,"description":"Schema.NET is Schema.org objects turned into strongly typed C# POCO classes for use in .NET.","path":"/structured-data-using-schema-net/","published":true}},{"node":{"title":"ASP.NET Core Lazy Command Pattern","date":"2017-04-08T00:00:00+00:00","dateModified":null,"timeToRead":4,"description":"Move your ASP.NET Core MVC action method logic into lazily loaded commands using the command pattern, to reduce Controller complexity.","path":"/asp-net-core-lazy-command-pattern/","published":true}},{"node":{"title":"dotnet new Feature Selection","date":"2017-03-26T00:00:00+00:00","dateModified":null,"timeToRead":9,"description":"How to add feature selection to your dotnet new template using symbols (bool, string, choice, computed) and pre-processor directives.","path":"/dotnet-new-feature-selection/","published":true}},{"node":{"title":"Cleaning Up CSPROJ","date":"2017-03-18T00:00:00+00:00","dateModified":null,"timeToRead":7,"description":"I show how to make the new Visual Studio 2017 .NET Core based csproj XML concise and pretty for hand editing.","path":"/cleaning-up-csproj/","published":true}},{"node":{"title":"Cross-Platform DevOps for .NET Core","date":"2017-01-28T00:00:00+00:00","dateModified":null,"timeToRead":8,"description":"Learn how to use Cake, AppVeyor and Travis CI continuous integration build systems to perform cross-platform DevOps for .NET Core based projects.","path":"/cross-platform-devops-net-core/","published":true}}]}}},"context":{}}