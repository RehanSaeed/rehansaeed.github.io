{"hash":"4aa8d832e06b0050b74adad0d11ca3cf93a01927","data":{"post":{"title":"Automating .NET Security Updates","path":"/automating-dotnet-security-updates/","date":"2020-09-23T15:35:00+00:00","dateModified":null,"timeToRead":3,"author":"Muhammad Rehan Saeed","headings":[{"value":"Single Source of Truth"},{"value":"Continuous Integration"},{"value":"GitHub Actions"},{"value":"Azure Pipelines"},{"value":"PowerShell"},{"value":"AppVeyor"},{"value":"Dependabot"},{"value":"Conclusions"}],"tags":[{"id":".NET","title":".NET","path":"/tag/net/"},{"id":".NET SDK","title":".NET SDK","path":"/tag/net-sdk/"},{"id":"GitHub Actions","title":"GitHub Actions","path":"/tag/git-hub-actions/"},{"id":"Azure Pipelines","title":"Azure Pipelines","path":"/tag/azure-pipelines/"},{"id":"AppVeyor","title":"AppVeyor","path":"/tag/app-veyor/"}],"description":".NET SDK updates are released every few weeks. In this post, I talk about how you can automate them.","content":"<p>Every few weeks Microsoft pushes out a .NET SDK update to patch zero day security vulnerabilities. It's important to keep up to date with these to ensure that your software is protected. The problem is, keeping up to date is a manual and boring process but what if you could automate it?</p>\n<p>In this post, I'll talk through how you can get most of the way to a fully automated solution with the last hurdle requiring some of your help.</p>\n<h1 id=\"single-source-of-truth\"><a href=\"#single-source-of-truth\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"22\" height=\"22\" aria-hidden=\"true\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Single Source of Truth</h1>\n<p>The first problem we need to solve is to enforce a specific version of the .NET SDK to be used to build our code. We can do this by adding a <code class=\"language-text\">global.json</code> file to the root of our repository. We can set the .NET SDK version in it like so:</p>\n<div class=\"line-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"sdk\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"3.1.402\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"custom-block warning\"><p class=\"custom-block-title\">Security vs Convenience</p><p>If a developer doesn't have the version of the .NET SDK you've specified in your <code class=\"language-text\">global.json</code> file, Visual Studio will fail to load the projects and show a pretty good error in the output window telling you to update the SDK. It would be nice if it also contained a link to the exact SDK install you needed to smooth the experience.</p></div>\n<h1 id=\"continuous-integration\"><a href=\"#continuous-integration\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"22\" height=\"22\" aria-hidden=\"true\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Continuous Integration</h1>\n<p>Continuous integration servers like GitHub Actions, Azure Pipelines or AppVeyor all have a version of the .NET SDK pre-installed for your convenience. However, when a new version is released it takes them days to update to the latest version.</p>\n<p>In my opinion, it's just better to install the .NET SDK yourself, which is pretty easy to do. The trick is to read the .NET SDK version number from the <code class=\"language-text\">global.json</code> file, so that there is a single source of truth for the  version number and it's easier to update.</p>\n<p>It's worth noting that this adds a few seconds to your build time. However, if the build server already has the version installed which is usually true, it's very quick.</p>\n<h2 id=\"github-actions\"><a href=\"#github-actions\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"22\" height=\"22\" aria-hidden=\"true\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub Actions</h2>\n<p>For GitHub Actions, we can use the first party <code class=\"language-text\">actions/setup-dotnet</code> GitHub action to install the .NET SDK. You can provide it a hard coded version number but it turns out omitting this causes it to lookup the version number from any <code class=\"language-text\">global.json</code> file it finds.</p>\n<div class=\"line-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Install .NET Core SDK'</span>\n  <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>dotnet@v1</code></pre></div>\n<h2 id=\"azure-pipelines\"><a href=\"#azure-pipelines\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"22\" height=\"22\" aria-hidden=\"true\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Azure Pipelines</h2>\n<p>Azure Pipelines has a similar first party <code class=\"language-text\">UseDotNet</code> task that can install the .NET SDK. It's a bit more verbose, as you need to set the <code class=\"language-text\">useGlobalJson</code> flag to <code class=\"language-text\">true</code>.</p>\n<div class=\"line-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">task</span><span class=\"token punctuation\">:</span> UseDotNet@2\n  <span class=\"token key atrule\">displayName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Install .NET Core SDK'</span>\n  <span class=\"token key atrule\">inputs</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">packageType</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'sdk'</span>\n    <span class=\"token key atrule\">useGlobalJson</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></code></pre></div>\n<h2 id=\"powershell\"><a href=\"#powershell\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"22\" height=\"22\" aria-hidden=\"true\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PowerShell</h2>\n<p>.NET ships with a PowerShell and Bash script to install the .NET SDK. They both ship with an argument you can pass to tell them to use the <code class=\"language-text\">global.json</code> file to read the version number. Here is a short cross-platform PowerShell 7 (previously known as PowerShell Core) script that you can use:</p>\n<div class=\"line-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$isWindows</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">Invoke-WebRequest</span> <span class=\"token string\">\"https://dot.net/v1/dotnet-install.ps1\"</span> <span class=\"token operator\">-</span>OutFile <span class=\"token string\">\"./dotnet-install.ps1\"</span>\n    <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>dotnet<span class=\"token operator\">-</span>install<span class=\"token punctuation\">.</span>ps1 <span class=\"token operator\">-</span>JSonFile global<span class=\"token punctuation\">.</span>json\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">Invoke-WebRequest</span> <span class=\"token string\">\"https://dot.net/v1/dotnet-install.sh\"</span> <span class=\"token operator\">-</span>OutFile <span class=\"token string\">\"./dotnet-install.sh\"</span>\n    sudo chmod u<span class=\"token operator\">+</span>x dotnet<span class=\"token operator\">-</span>install<span class=\"token punctuation\">.</span>sh\n    sudo <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>dotnet<span class=\"token operator\">-</span>install<span class=\"token punctuation\">.</span>sh <span class=\"token operator\">--</span>jsonfile global<span class=\"token punctuation\">.</span>json\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"appveyor\"><a href=\"#appveyor\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"22\" height=\"22\" aria-hidden=\"true\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AppVeyor</h2>\n<p>AppVeyor has some issues with installing the .NET SDK using the PowerShell and Bash scripts. For reasons I'm not too clear on, you have to set the installation directory. So here is the updated script I use for that:</p>\n<div class=\"line-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$isWindows</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">Invoke-WebRequest</span> <span class=\"token string\">\"https://dot.net/v1/dotnet-install.ps1\"</span> <span class=\"token operator\">-</span>OutFile <span class=\"token string\">\"./dotnet-install.ps1\"</span>\n    <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>dotnet<span class=\"token operator\">-</span>install<span class=\"token punctuation\">.</span>ps1 <span class=\"token operator\">-</span>JSonFile global<span class=\"token punctuation\">.</span>json <span class=\"token operator\">-</span>InstallDir <span class=\"token string\">'C:\\Program Files\\dotnet'</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">Invoke-WebRequest</span> <span class=\"token string\">\"https://dot.net/v1/dotnet-install.sh\"</span> <span class=\"token operator\">-</span>OutFile <span class=\"token string\">\"./dotnet-install.sh\"</span>\n    sudo chmod u<span class=\"token operator\">+</span>x dotnet<span class=\"token operator\">-</span>install<span class=\"token punctuation\">.</span>sh\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$isMacOS</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        sudo <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>dotnet<span class=\"token operator\">-</span>install<span class=\"token punctuation\">.</span>sh <span class=\"token operator\">--</span>jsonfile global<span class=\"token punctuation\">.</span>json <span class=\"token operator\">--</span><span class=\"token function\">install-dir</span> <span class=\"token string\">'/Users/appveyor/.dotnet'</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        sudo <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>dotnet<span class=\"token operator\">-</span>install<span class=\"token punctuation\">.</span>sh <span class=\"token operator\">--</span>jsonfile global<span class=\"token punctuation\">.</span>json <span class=\"token operator\">--</span><span class=\"token function\">install-dir</span> <span class=\"token string\">'/usr/share/dotnet'</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"dependabot\"><a href=\"#dependabot\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"22\" height=\"22\" aria-hidden=\"true\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dependabot</h1>\n<p><a href=\"https://github.blog/2020-06-01-keep-all-your-packages-up-to-date-with-dependabot/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Dependabot</a> is an amazing tool that GitHub recently acquired. It automatically submits pull requests to your repository to update packages of various kinds including NuGet and NPM packages.</p>\n<p>This is where I need your help. The Dependabot GitHub repository has an open issue (<a href=\"https://github.com/dependabot/dependabot-core/issues/2442\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">dependabot-core#2442</a>) to also do the same for the .NET SDK version in the <code class=\"language-text\">global.json</code> file. Upvoting the issue will really help raise it's profile and get it implemented.</p>\n<h1 id=\"conclusions\"><a href=\"#conclusions\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"22\" height=\"22\" aria-hidden=\"true\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conclusions</h1>\n<p>Security is hard. Keeping up to date is important but a never ending boring chore. It doesn't have to be that way. With a little extra work, we can get as close to making a .NET SDK update a three character commit every few weeks and with your help, maybe even that can be automated with Dependabot.</p>\n","heroImage":"/images/hero/Microsoft-.NET-1366x768.png"}},"context":{}}